Initialization and creation operations
======================================

Building MPS/MPO manually
-------------------------

The tensor making up MPS/MPO can be assigned manually, setting them one by one.

.. note::
        The virtual dimensions/spaces of the neighboring MPS/MPO tensors should be consistent.

Ground state of spin-1 AKLT model
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Here, as an example, we set up a well-known exact MPS: A ground state of
`Affleck-Kennedy-Lieb-Tasaki (AKLT) model <https://en.wikipedia.org/wiki/AKLT_model>`_.

.. literalinclude:: /../../tests/mps/test_initialization.py
        :pyobject: build_spin1_aklt_state


Hamiltonian for nearest-neighbor hopping/XX model
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The same can be done for MPOs. Here, we show a construction of a simple
nearest-neighbour hopping Hamiltonian with hopping amplitude :math:`t`
and on-site energy :math:`\mu` with different
realizations of explicit symmetry.

.. literalinclude:: /../../tests/mps/test_generator.py
        :pyobject: mpo_nn_hopping_manually


Building MPO using Hterm
------------------------

Hamiltonian is typically given as a sum of products of local operators.
We can specify a single such product using :code:`mps.tn.mps.Hterm`.
Hamiltonian is generated by a function :code:`yastn.tn.mps.generate_mpo` which takes an identity MPO and a `list(Hterm)`.

Spinless fermions with hopping at arbitrary range (Hterm)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_generator.py
        :pyobject: mpo_hopping_Hterm


Generator class for MPO/MPS
---------------------------

The MPO can be constructed automatically using dedicated :class:`yastn.tn.mps.Generator` supplied with the set of local operators.
Automatic generator creates MPO with symmetries inherited from local operators.
`Generator` can be also used to create random MPS and MPO, where local Hilbert spaces are read from identity operators defined in the Generator.

Building random MPS/MPO
^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_generator.py
        :pyobject: random_mps_spinless_fermions


Hamiltonian for nearest-neighbor hopping/XX model (Generator)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_generator.py
        :pyobject: mpo_nn_hopping_latex


Spinless fermions with hopping at arbitrary range (Generator)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_generator.py
        :pyobject: mpo_hopping_latex


Save and load MPS/MPO
---------------------

MPS/MPO can be saved/loaded either to/from a dictionary or an HDF5 file.

.. note::
        :ref:`YASTN configuration<tensor/configuration:yastn configuration>`
        of on-site tensors of MPS/MPO must be provided
        when loading either from dictionary or HDF5 file.

Using Python's dictionary
^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_save_load.py
        :pyobject: test_basic_dict

Using HDF5 format
^^^^^^^^^^^^^^^^^

.. literalinclude:: /../../tests/mps/test_save_load.py
        :pyobject: test_basic_hdf5