import numpy as np
import pytest
import yast
from yast.tensor._auxliary import _config
try:
    from .configs import config_U1xU1_fermionic, config_U1
except ImportError:
    from configs import config_U1xU1_fermionic, config_U1

tol = 1e-12  #pylint: disable=invalid-name


@pytest.mark.skipif(config_U1xU1_fermionic.backend.BACKEND_ID=="numpy", reason="numpy backend does not support autograd")
@pytest.mark.skipif("not config.getoption('bug_pytorch110')")
def test_bug_conj_transpose_backward_u1xu1():
    import torch

    loc_c = config_U1xU1_fermionic
    loc_c = loc_c if isinstance(loc_c, _config) else _config(**{a: getattr(loc_c, a) for a in _config._fields if hasattr(loc_c, a)})
    loc_c = loc_c._replace(default_dtype="complex128", fermionic=False, default_fusion='hard')

    # rank-5 on-site tensor
    # on-site tensor
    # len 11520
    t5_data = np.random.randn(11520) + 1.0j * np.random.randn(11520)
    a_1layer= yast.rand(loc_c, s= (-1, -1, -1, -1, -1, 1, 1), n= (0, 0),\
        t= (((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))),\
        D=((1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1)))
    a_1layer= a_1layer.fuse_legs(axes=((0,1,2), 3, 4, 5, 6))

    a_id_nograd = a_1layer.tensordot(a_1layer,([0],[0]),conj=(0,1))
    a_id_nograd = a_id_nograd.fuse_legs(axes=((0,4),(1,5),(2,6),(3,7)))

    # three-site operator
    # len 93
    t4_data = np.random.randn(93) + 0.0j * np.random.randn(93)
    op= yast.load_from_dict(loc_c, {'_d': t4_data,\
        's': (-1, 1), 'n': (0, 0), 't': ((-3, 3, -3, 3), (-2, 0, -2, 0), (-1, -3, -1, -3), (-1, 3, -1, 3), (0, -6, 0, -6), (0, 0, 0, 0), (1, -3, 1, -3), (1, 3, 1, 3), (2, 0, 2, 0), (3, 3, 3, 3)), 'D': ((1, 1), (3, 3), (3, 3), (3, 3), (1, 1), (6, 6), (3, 3), (3, 3), (3, 3), (1, 1)), 'isdiag': False, 'mfs': ((1,), (1,)), 'hfs': [{'tree': (3, 1, 1, 1), 'op': 'pooo', 's': (-1, -1, -1, -1), 't': (((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1))), 'D': ((1, 1, 1), (1, 1, 1), (1, 1, 1))}, {'tree': (3, 1, 1, 1), 'op': 'pooo', 's': (1, 1, 1, 1), 't': (((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1)), ((-1, 1), (0, -2), (1, 1))), 'D': ((1, 1, 1), (1, 1, 1), (1, 1, 1))}], 'SYM_ID': 'U(1)xU(1)', 'fermionic': False})

    # C--T--
    # |  |
    # T-- 
    # |
    #
    # len 157632
    t0_data = np.random.randn(157632) + 1.0j * np.random.randn(157632)
    C2x2_LU= yast.load_from_dict(loc_c, {'_d': t0_data,\
        's': (1, -1, -1, 1), 'n': (0, 0), 't': ((-4, 0, -2, 0, -2, 0, 0, 0), (-4, 0, -2, 0, -1, -3, 1, -3), (-4, 0, -2, 0, -1, 3, 1, 3), (-4, 0, -2, 0, 0, 0, 2, 0), (-4, 0, -2, 0, 1, -3, 3, -3), (-4, 0, -2, 0, 1, 3, 3, 3), (-4, 0, -2, 0, 2, 0, 4, 0), (-3, -3, -2, 0, -2, 0, -1, 3), (-3, -3, -2, 0, -1, -3, 0, 0), (-3, -3, -2, 0, -1, 3, 0, 6), (-3, -3, -2, 0, 0, 0, 1, 3), (-3, -3, -2, 0, 1, -3, 2, 0), (-3, -3, -2, 0, 1, 3, 2, 6), (-3, -3, -2, 0, 2, 0, 3, 3), (-3, -3, -1, -3, -2, 0, 0, 0), (-3, -3, -1, -3, -1, -3, 1, -3), (-3, -3, -1, -3, -1, 3, 1, 3), (-3, -3, -1, -3, 0, 0, 2, 0), (-3, -3, -1, -3, 1, -3, 3, -3), (-3, -3, -1, -3, 1, 3, 3, 3), (-3, -3, -1, -3, 2, 0, 4, 0), (-3, 3, -2, 0, -2, 0, -1, -3), (-3, 3, -2, 0, -1, -3, 0, -6), (-3, 3, -2, 0, -1, 3, 0, 0), (-3, 3, -2, 0, 0, 0, 1, -3), (-3, 3, -2, 0, 1, -3, 2, -6), (-3, 3, -2, 0, 1, 3, 2, 0), (-3, 3, -2, 0, 2, 0, 3, -3), (-3, 3, -1, 3, -2, 0, 0, 0), (-3, 3, -1, 3, -1, -3, 1, -3), (-3, 3, -1, 3, -1, 3, 1, 3), (-3, 3, -1, 3, 0, 0, 2, 0), (-3, 3, -1, 3, 1, -3, 3, -3), (-3, 3, -1, 3, 1, 3, 3, 3), (-3, 3, -1, 3, 2, 0, 4, 0), (-2, -6, -1, -3, -2, 0, -1, 3), (-2, -6, -1, -3, -1, -3, 0, 0), (-2, -6, -1, -3, -1, 3, 0, 6), (-2, -6, -1, -3, 0, 0, 1, 3), (-2, -6, -1, -3, 1, -3, 2, 0), (-2, -6, -1, -3, 1, 3, 2, 6), (-2, -6, -1, -3, 2, 0, 3, 3), (-2, 0, -2, 0, -2, 0, -2, 0), (-2, 0, -2, 0, -1, -3, -1, -3), (-2, 0, -2, 0, -1, 3, -1, 3), (-2, 0, -2, 0, 0, 0, 0, 0), (-2, 0, -2, 0, 1, -3, 1, -3), (-2, 0, -2, 0, 1, 3, 1, 3), (-2, 0, -2, 0, 2, 0, 2, 0), (-2, 0, -1, -3, -2, 0, -1, -3), (-2, 0, -1, -3, -1, -3, 0, -6), (-2, 0, -1, -3, -1, 3, 0, 0), (-2, 0, -1, -3, 0, 0, 1, -3), (-2, 0, -1, -3, 1, -3, 2, -6), (-2, 0, -1, -3, 1, 3, 2, 0), (-2, 0, -1, -3, 2, 0, 3, -3), (-2, 0, -1, 3, -2, 0, -1, 3), (-2, 0, -1, 3, -1, -3, 0, 0), (-2, 0, -1, 3, -1, 3, 0, 6), (-2, 0, -1, 3, 0, 0, 1, 3), (-2, 0, -1, 3, 1, -3, 2, 0), (-2, 0, -1, 3, 1, 3, 2, 6), (-2, 0, -1, 3, 2, 0, 3, 3), (-2, 0, 0, 0, -2, 0, 0, 0), (-2, 0, 0, 0, -1, -3, 1, -3), (-2, 0, 0, 0, -1, 3, 1, 3), (-2, 0, 0, 0, 0, 0, 2, 0), (-2, 0, 0, 0, 1, -3, 3, -3), (-2, 0, 0, 0, 1, 3, 3, 3), (-2, 0, 0, 0, 2, 0, 4, 0), (-2, 6, -1, 3, -2, 0, -1, -3), (-2, 6, -1, 3, -1, -3, 0, -6), (-2, 6, -1, 3, -1, 3, 0, 0), (-2, 6, -1, 3, 0, 0, 1, -3), (-2, 6, -1, 3, 1, -3, 2, -6), (-2, 6, -1, 3, 1, 3, 2, 0), (-2, 6, -1, 3, 2, 0, 3, -3), (-1, -3, -2, 0, -2, 0, -3, 3), (-1, -3, -2, 0, -1, -3, -2, 0), (-1, -3, -2, 0, -1, 3, -2, 6), (-1, -3, -2, 0, 0, 0, -1, 3), (-1, -3, -2, 0, 1, -3, 0, 0), (-1, -3, -2, 0, 1, 3, 0, 6), (-1, -3, -2, 0, 2, 0, 1, 3), (-1, -3, -1, -3, -2, 0, -2, 0), (-1, -3, -1, -3, -1, -3, -1, -3), (-1, -3, -1, -3, -1, 3, -1, 3), (-1, -3, -1, -3, 0, 0, 0, 0), (-1, -3, -1, -3, 1, -3, 1, -3), (-1, -3, -1, -3, 1, 3, 1, 3), (-1, -3, -1, -3, 2, 0, 2, 0), (-1, -3, 0, 0, -2, 0, -1, 3), (-1, -3, 0, 0, -1, -3, 0, 0), (-1, -3, 0, 0, -1, 3, 0, 6), (-1, -3, 0, 0, 0, 0, 1, 3), (-1, -3, 0, 0, 1, -3, 2, 0), (-1, -3, 0, 0, 1, 3, 2, 6), (-1, -3, 0, 0, 2, 0, 3, 3), (-1, -3, 1, -3, -2, 0, 0, 0), (-1, -3, 1, -3, -1, -3, 1, -3), (-1, -3, 1, -3, -1, 3, 1, 3), (-1, -3, 1, -3, 0, 0, 2, 0), (-1, -3, 1, -3, 1, -3, 3, -3), (-1, -3, 1, -3, 1, 3, 3, 3), (-1, -3, 1, -3, 2, 0, 4, 0), (-1, 3, -2, 0, -2, 0, -3, -3), (-1, 3, -2, 0, -1, -3, -2, -6), (-1, 3, -2, 0, -1, 3, -2, 0), (-1, 3, -2, 0, 0, 0, -1, -3), (-1, 3, -2, 0, 1, -3, 0, -6), (-1, 3, -2, 0, 1, 3, 0, 0), (-1, 3, -2, 0, 2, 0, 1, -3), (-1, 3, -1, 3, -2, 0, -2, 0), (-1, 3, -1, 3, -1, -3, -1, -3), (-1, 3, -1, 3, -1, 3, -1, 3), (-1, 3, -1, 3, 0, 0, 0, 0), (-1, 3, -1, 3, 1, -3, 1, -3), (-1, 3, -1, 3, 1, 3, 1, 3), (-1, 3, -1, 3, 2, 0, 2, 0), (-1, 3, 0, 0, -2, 0, -1, -3), (-1, 3, 0, 0, -1, -3, 0, -6), (-1, 3, 0, 0, -1, 3, 0, 0), (-1, 3, 0, 0, 0, 0, 1, -3), (-1, 3, 0, 0, 1, -3, 2, -6), (-1, 3, 0, 0, 1, 3, 2, 0), (-1, 3, 0, 0, 2, 0, 3, -3), (-1, 3, 1, 3, -2, 0, 0, 0), (-1, 3, 1, 3, -1, -3, 1, -3), (-1, 3, 1, 3, -1, 3, 1, 3), (-1, 3, 1, 3, 0, 0, 2, 0), (-1, 3, 1, 3, 1, -3, 3, -3), (-1, 3, 1, 3, 1, 3, 3, 3), (-1, 3, 1, 3, 2, 0, 4, 0), (0, -6, -1, -3, -2, 0, -3, 3), (0, -6, -1, -3, -1, -3, -2, 0), (0, -6, -1, -3, -1, 3, -2, 6), (0, -6, -1, -3, 0, 0, -1, 3), (0, -6, -1, -3, 1, -3, 0, 0), (0, -6, -1, -3, 1, 3, 0, 6), (0, -6, -1, -3, 2, 0, 1, 3), (0, -6, 1, -3, -2, 0, -1, 3), (0, -6, 1, -3, -1, -3, 0, 0), (0, -6, 1, -3, -1, 3, 0, 6), (0, -6, 1, -3, 0, 0, 1, 3), (0, -6, 1, -3, 1, -3, 2, 0), (0, -6, 1, -3, 1, 3, 2, 6), (0, -6, 1, -3, 2, 0, 3, 3), (0, 0, -2, 0, -2, 0, -4, 0), (0, 0, -2, 0, -1, -3, -3, -3), (0, 0, -2, 0, -1, 3, -3, 3), (0, 0, -2, 0, 0, 0, -2, 0), (0, 0, -2, 0, 1, -3, -1, -3), (0, 0, -2, 0, 1, 3, -1, 3), (0, 0, -2, 0, 2, 0, 0, 0), (0, 0, -1, -3, -2, 0, -3, -3), (0, 0, -1, -3, -1, -3, -2, -6), (0, 0, -1, -3, -1, 3, -2, 0), (0, 0, -1, -3, 0, 0, -1, -3), (0, 0, -1, -3, 1, -3, 0, -6), (0, 0, -1, -3, 1, 3, 0, 0), (0, 0, -1, -3, 2, 0, 1, -3), (0, 0, -1, 3, -2, 0, -3, 3), (0, 0, -1, 3, -1, -3, -2, 0), (0, 0, -1, 3, -1, 3, -2, 6), (0, 0, -1, 3, 0, 0, -1, 3), (0, 0, -1, 3, 1, -3, 0, 0), (0, 0, -1, 3, 1, 3, 0, 6), (0, 0, -1, 3, 2, 0, 1, 3), (0, 0, 0, 0, -2, 0, -2, 0), (0, 0, 0, 0, -1, -3, -1, -3), (0, 0, 0, 0, -1, 3, -1, 3), (0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, -3, 1, -3), (0, 0, 0, 0, 1, 3, 1, 3), (0, 0, 0, 0, 2, 0, 2, 0), (0, 0, 1, -3, -2, 0, -1, -3), (0, 0, 1, -3, -1, -3, 0, -6), (0, 0, 1, -3, -1, 3, 0, 0), (0, 0, 1, -3, 0, 0, 1, -3), (0, 0, 1, -3, 1, -3, 2, -6), (0, 0, 1, -3, 1, 3, 2, 0), (0, 0, 1, -3, 2, 0, 3, -3), (0, 0, 1, 3, -2, 0, -1, 3), (0, 0, 1, 3, -1, -3, 0, 0), (0, 0, 1, 3, -1, 3, 0, 6), (0, 0, 1, 3, 0, 0, 1, 3), (0, 0, 1, 3, 1, -3, 2, 0), (0, 0, 1, 3, 1, 3, 2, 6), (0, 0, 1, 3, 2, 0, 3, 3), (0, 0, 2, 0, -2, 0, 0, 0), (0, 0, 2, 0, -1, -3, 1, -3), (0, 0, 2, 0, -1, 3, 1, 3), (0, 0, 2, 0, 0, 0, 2, 0), (0, 0, 2, 0, 1, -3, 3, -3), (0, 0, 2, 0, 1, 3, 3, 3), (0, 0, 2, 0, 2, 0, 4, 0), (0, 6, -1, 3, -2, 0, -3, -3), (0, 6, -1, 3, -1, -3, -2, -6), (0, 6, -1, 3, -1, 3, -2, 0), (0, 6, -1, 3, 0, 0, -1, -3), (0, 6, -1, 3, 1, -3, 0, -6), (0, 6, -1, 3, 1, 3, 0, 0), (0, 6, -1, 3, 2, 0, 1, -3), (0, 6, 1, 3, -2, 0, -1, -3), (0, 6, 1, 3, -1, -3, 0, -6), (0, 6, 1, 3, -1, 3, 0, 0), (0, 6, 1, 3, 0, 0, 1, -3), (0, 6, 1, 3, 1, -3, 2, -6), (0, 6, 1, 3, 1, 3, 2, 0), (0, 6, 1, 3, 2, 0, 3, -3), (1, -3, -1, -3, -2, 0, -4, 0), (1, -3, -1, -3, -1, -3, -3, -3), (1, -3, -1, -3, -1, 3, -3, 3), (1, -3, -1, -3, 0, 0, -2, 0), (1, -3, -1, -3, 1, -3, -1, -3), (1, -3, -1, -3, 1, 3, -1, 3), (1, -3, -1, -3, 2, 0, 0, 0), (1, -3, 0, 0, -2, 0, -3, 3), (1, -3, 0, 0, -1, -3, -2, 0), (1, -3, 0, 0, -1, 3, -2, 6), (1, -3, 0, 0, 0, 0, -1, 3), (1, -3, 0, 0, 1, -3, 0, 0), (1, -3, 0, 0, 1, 3, 0, 6), (1, -3, 0, 0, 2, 0, 1, 3), (1, -3, 1, -3, -2, 0, -2, 0), (1, -3, 1, -3, -1, -3, -1, -3), (1, -3, 1, -3, -1, 3, -1, 3), (1, -3, 1, -3, 0, 0, 0, 0), (1, -3, 1, -3, 1, -3, 1, -3), (1, -3, 1, -3, 1, 3, 1, 3), (1, -3, 1, -3, 2, 0, 2, 0), (1, -3, 2, 0, -2, 0, -1, 3), (1, -3, 2, 0, -1, -3, 0, 0), (1, -3, 2, 0, -1, 3, 0, 6), (1, -3, 2, 0, 0, 0, 1, 3), (1, -3, 2, 0, 1, -3, 2, 0), (1, -3, 2, 0, 1, 3, 2, 6), (1, -3, 2, 0, 2, 0, 3, 3), (1, 3, -1, 3, -2, 0, -4, 0), (1, 3, -1, 3, -1, -3, -3, -3), (1, 3, -1, 3, -1, 3, -3, 3), (1, 3, -1, 3, 0, 0, -2, 0), (1, 3, -1, 3, 1, -3, -1, -3), (1, 3, -1, 3, 1, 3, -1, 3), (1, 3, -1, 3, 2, 0, 0, 0), (1, 3, 0, 0, -2, 0, -3, -3), (1, 3, 0, 0, -1, -3, -2, -6), (1, 3, 0, 0, -1, 3, -2, 0), (1, 3, 0, 0, 0, 0, -1, -3), (1, 3, 0, 0, 1, -3, 0, -6), (1, 3, 0, 0, 1, 3, 0, 0), (1, 3, 0, 0, 2, 0, 1, -3), (1, 3, 1, 3, -2, 0, -2, 0), (1, 3, 1, 3, -1, -3, -1, -3), (1, 3, 1, 3, -1, 3, -1, 3), (1, 3, 1, 3, 0, 0, 0, 0), (1, 3, 1, 3, 1, -3, 1, -3), (1, 3, 1, 3, 1, 3, 1, 3), (1, 3, 1, 3, 2, 0, 2, 0), (1, 3, 2, 0, -2, 0, -1, -3), (1, 3, 2, 0, -1, -3, 0, -6), (1, 3, 2, 0, -1, 3, 0, 0), (1, 3, 2, 0, 0, 0, 1, -3), (1, 3, 2, 0, 1, -3, 2, -6), (1, 3, 2, 0, 1, 3, 2, 0), (1, 3, 2, 0, 2, 0, 3, -3), (2, -6, 1, -3, -2, 0, -3, 3), (2, -6, 1, -3, -1, -3, -2, 0), (2, -6, 1, -3, -1, 3, -2, 6), (2, -6, 1, -3, 0, 0, -1, 3), (2, -6, 1, -3, 1, -3, 0, 0), (2, -6, 1, -3, 1, 3, 0, 6), (2, -6, 1, -3, 2, 0, 1, 3), (2, 0, 0, 0, -2, 0, -4, 0), (2, 0, 0, 0, -1, -3, -3, -3), (2, 0, 0, 0, -1, 3, -3, 3), (2, 0, 0, 0, 0, 0, -2, 0), (2, 0, 0, 0, 1, -3, -1, -3), (2, 0, 0, 0, 1, 3, -1, 3), (2, 0, 0, 0, 2, 0, 0, 0), (2, 0, 1, -3, -2, 0, -3, -3), (2, 0, 1, -3, -1, -3, -2, -6), (2, 0, 1, -3, -1, 3, -2, 0), (2, 0, 1, -3, 0, 0, -1, -3), (2, 0, 1, -3, 1, -3, 0, -6), (2, 0, 1, -3, 1, 3, 0, 0), (2, 0, 1, -3, 2, 0, 1, -3), (2, 0, 1, 3, -2, 0, -3, 3), (2, 0, 1, 3, -1, -3, -2, 0), (2, 0, 1, 3, -1, 3, -2, 6), (2, 0, 1, 3, 0, 0, -1, 3), (2, 0, 1, 3, 1, -3, 0, 0), (2, 0, 1, 3, 1, 3, 0, 6), (2, 0, 1, 3, 2, 0, 1, 3), (2, 0, 2, 0, -2, 0, -2, 0), (2, 0, 2, 0, -1, -3, -1, -3), (2, 0, 2, 0, -1, 3, -1, 3), (2, 0, 2, 0, 0, 0, 0, 0), (2, 0, 2, 0, 1, -3, 1, -3), (2, 0, 2, 0, 1, 3, 1, 3), (2, 0, 2, 0, 2, 0, 2, 0), (2, 6, 1, 3, -2, 0, -3, -3), (2, 6, 1, 3, -1, -3, -2, -6), (2, 6, 1, 3, -1, 3, -2, 0), (2, 6, 1, 3, 0, 0, -1, -3), (2, 6, 1, 3, 1, -3, 0, -6), (2, 6, 1, 3, 1, 3, 0, 0), (2, 6, 1, 3, 2, 0, 1, -3), (3, -3, 1, -3, -2, 0, -4, 0), (3, -3, 1, -3, -1, -3, -3, -3), (3, -3, 1, -3, -1, 3, -3, 3), (3, -3, 1, -3, 0, 0, -2, 0), (3, -3, 1, -3, 1, -3, -1, -3), (3, -3, 1, -3, 1, 3, -1, 3), (3, -3, 1, -3, 2, 0, 0, 0), (3, -3, 2, 0, -2, 0, -3, 3), (3, -3, 2, 0, -1, -3, -2, 0), (3, -3, 2, 0, -1, 3, -2, 6), (3, -3, 2, 0, 0, 0, -1, 3), (3, -3, 2, 0, 1, -3, 0, 0), (3, -3, 2, 0, 1, 3, 0, 6), (3, -3, 2, 0, 2, 0, 1, 3), (3, 3, 1, 3, -2, 0, -4, 0), (3, 3, 1, 3, -1, -3, -3, -3), (3, 3, 1, 3, -1, 3, -3, 3), (3, 3, 1, 3, 0, 0, -2, 0), (3, 3, 1, 3, 1, -3, -1, -3), (3, 3, 1, 3, 1, 3, -1, 3), (3, 3, 1, 3, 2, 0, 0, 0), (3, 3, 2, 0, -2, 0, -3, -3), (3, 3, 2, 0, -1, -3, -2, -6), (3, 3, 2, 0, -1, 3, -2, 0), (3, 3, 2, 0, 0, 0, -1, -3), (3, 3, 2, 0, 1, -3, 0, -6), (3, 3, 2, 0, 1, 3, 0, 0), (3, 3, 2, 0, 2, 0, 1, -3), (4, 0, 2, 0, -2, 0, -4, 0), (4, 0, 2, 0, -1, -3, -3, -3), (4, 0, 2, 0, -1, 3, -3, 3), (4, 0, 2, 0, 0, 0, -2, 0), (4, 0, 2, 0, 1, -3, -1, -3), (4, 0, 2, 0, 1, 3, -1, 3), (4, 0, 2, 0, 2, 0, 0, 0)), 'D': ((1, 2, 2, 15), (1, 2, 2, 8), (1, 2, 2, 8), (1, 2, 8, 8), (1, 2, 2, 2), (1, 2, 2, 2), (1, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 8, 8), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 2, 1), (1, 2, 2, 8), (1, 2, 2, 15), (1, 2, 2, 2), (1, 2, 8, 8), (1, 2, 2, 8), (1, 2, 2, 1), (1, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 8, 8), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 2, 2), (8, 8, 2, 15), (8, 8, 2, 8), (8, 8, 2, 8), (8, 8, 8, 8), (8, 8, 2, 2), (8, 8, 2, 2), (8, 8, 2, 1), (1, 2, 2, 8), (1, 2, 2, 2), (1, 2, 2, 15), (1, 2, 8, 8), (1, 2, 2, 1), (1, 2, 2, 8), (1, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 8, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 8, 2, 8), (8, 8, 2, 15), (8, 8, 2, 2), (8, 8, 8, 8), (8, 8, 2, 8), (8, 8, 2, 1), (8, 8, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 8, 2, 8), (8, 8, 2, 2), (8, 8, 2, 15), (8, 8, 8, 8), (8, 8, 2, 1), (8, 8, 2, 8), (8, 8, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 8, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (15, 2, 2, 1), (15, 2, 2, 2), (15, 2, 2, 2), (15, 2, 8, 8), (15, 2, 2, 8), (15, 2, 2, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 2, 1), (15, 2, 2, 8), (15, 2, 8, 8), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 8), (15, 2, 2, 1), (15, 2, 8, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 8, 15), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 8, 8), (15, 2, 2, 1), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 8, 8), (15, 2, 2, 8), (15, 2, 2, 1), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 2, 8), (15, 2, 2, 8), (15, 2, 8, 8), (15, 2, 2, 2), (15, 2, 2, 2), (15, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 8, 8), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 8, 2, 2), (8, 8, 2, 8), (8, 8, 2, 1), (8, 8, 8, 8), (8, 8, 2, 15), (8, 8, 2, 2), (8, 8, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 8, 2, 2), (8, 8, 2, 1), (8, 8, 2, 8), (8, 8, 8, 8), (8, 8, 2, 2), (8, 8, 2, 15), (8, 8, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 8, 8), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 2, 2), (1, 2, 2, 2), (1, 2, 2, 8), (1, 2, 2, 1), (1, 2, 8, 8), (1, 2, 2, 15), (1, 2, 2, 2), (1, 2, 2, 8), (8, 8, 2, 1), (8, 8, 2, 2), (8, 8, 2, 2), (8, 8, 8, 8), (8, 8, 2, 8), (8, 8, 2, 8), (8, 8, 2, 15), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 8, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (1, 2, 2, 2), (1, 2, 2, 1), (1, 2, 2, 8), (1, 2, 8, 8), (1, 2, 2, 2), (1, 2, 2, 15), (1, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 8, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (1, 2, 2, 1), (1, 2, 2, 2), (1, 2, 2, 2), (1, 2, 8, 8), (1, 2, 2, 8), (1, 2, 2, 8), (1, 2, 2, 15)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}], 'SYM_ID': 'U(1)xU(1)', 'fermionic': False})

    # C2x2_RU
    # len 180456
    t1_data = np.random.randn(180456) + 1.0j * np.random.randn(180456)
    C2x2_RU= yast.load_from_dict(loc_c, {'_d': t1_data,\
        's': (1, -1), 'n': (0, 0), 't': ((-6, 0, -6, 0), (-5, -3, -5, -3), (-5, 3, -5, 3), (-4, -6, -4, -6), (-4, 0, -4, 0), (-4, 6, -4, 6), (-3, -9, -3, -9), (-3, -3, -3, -3), (-3, 3, -3, 3), (-3, 9, -3, 9), (-2, -6, -2, -6), (-2, 0, -2, 0), (-2, 6, -2, 6), (-1, -9, -1, -9), (-1, -3, -1, -3), (-1, 3, -1, 3), (-1, 9, -1, 9), (0, -6, 0, -6), (0, 0, 0, 0), (0, 6, 0, 6), (1, -9, 1, -9), (1, -3, 1, -3), (1, 3, 1, 3), (1, 9, 1, 9), (2, -6, 2, -6), (2, 0, 2, 0), (2, 6, 2, 6), (3, -9, 3, -9), (3, -3, 3, -3), (3, 3, 3, 3), (3, 9, 3, 9), (4, -6, 4, -6), (4, 0, 4, 0), (4, 6, 4, 6), (5, -3, 5, -3), (5, 3, 5, 3), (6, 0, 6, 0)), 'D': ((2, 2), (6, 6), (6, 6), (6, 6), (32, 32), (6, 6), (2, 2), (52, 52), (52, 52), (2, 2), (32, 32), (136, 136), (32, 32), (6, 6), (136, 136), (136, 136), (6, 6), (52, 52), (216, 216), (52, 52), (6, 6), (136, 136), (136, 136), (6, 6), (32, 32), (136, 136), (32, 32), (2, 2), (52, 52), (52, 52), (2, 2), (6, 6), (32, 32), (6, 6), (6, 6), (6, 6), (2, 2)), 'isdiag': False, 'mfs': ((1,), (1,)), 'hfs': [{'tree': (3, 1, 2, 1, 1), 'op': 'popoo', 's': (1, 1, -1, -1, 1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-4, 0), (-3, -3), (-3, 3), (-2, -6), (-2, 0), (-2, 6), (-1, -3), (-1, 3), (0, -6), (0, 0), (0, 6), (1, -3), (1, 3), (2, -6), (2, 0), (2, 6), (3, -3), (3, 3), (4, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((2, 2, 2, 8, 2, 2, 2), (1, 2, 2, 1, 8, 1, 8, 8, 2, 15, 2, 8, 8, 1, 8, 1, 2, 2, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}, {'tree': (3, 1, 2, 1, 1), 'op': 'popoo', 's': (-1, -1, 1, 1, -1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-4, 0), (-3, -3), (-3, 3), (-2, -6), (-2, 0), (-2, 6), (-1, -3), (-1, 3), (0, -6), (0, 0), (0, 6), (1, -3), (1, 3), (2, -6), (2, 0), (2, 6), (3, -3), (3, 3), (4, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((2, 2, 2, 8, 2, 2, 2), (1, 2, 2, 1, 8, 1, 8, 8, 2, 15, 2, 8, 8, 1, 8, 1, 2, 2, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}], 'SYM_ID': 'U(1)xU(1)', 'fermionic': False})

    # C2x2_LD
    # len 180456
    t2_data = np.random.randn(180456) + 1.0j * np.random.randn(180456)
    C2x2_LD= yast.load_from_dict(loc_c, {'_d': t2_data,\
        's': (1, -1), 'n': (0, 0), 't': ((-6, 0, -6, 0), (-5, -3, -5, -3), (-5, 3, -5, 3), (-4, -6, -4, -6), (-4, 0, -4, 0), (-4, 6, -4, 6), (-3, -9, -3, -9), (-3, -3, -3, -3), (-3, 3, -3, 3), (-3, 9, -3, 9), (-2, -6, -2, -6), (-2, 0, -2, 0), (-2, 6, -2, 6), (-1, -9, -1, -9), (-1, -3, -1, -3), (-1, 3, -1, 3), (-1, 9, -1, 9), (0, -6, 0, -6), (0, 0, 0, 0), (0, 6, 0, 6), (1, -9, 1, -9), (1, -3, 1, -3), (1, 3, 1, 3), (1, 9, 1, 9), (2, -6, 2, -6), (2, 0, 2, 0), (2, 6, 2, 6), (3, -9, 3, -9), (3, -3, 3, -3), (3, 3, 3, 3), (3, 9, 3, 9), (4, -6, 4, -6), (4, 0, 4, 0), (4, 6, 4, 6), (5, -3, 5, -3), (5, 3, 5, 3), (6, 0, 6, 0)), 'D': ((2, 2), (6, 6), (6, 6), (6, 6), (32, 32), (6, 6), (2, 2), (52, 52), (52, 52), (2, 2), (32, 32), (136, 136), (32, 32), (6, 6), (136, 136), (136, 136), (6, 6), (52, 52), (216, 216), (52, 52), (6, 6), (136, 136), (136, 136), (6, 6), (32, 32), (136, 136), (32, 32), (2, 2), (52, 52), (52, 52), (2, 2), (6, 6), (32, 32), (6, 6), (6, 6), (6, 6), (2, 2)), 'isdiag': False, 'mfs': ((1,), (1,)), 'hfs': [{'tree': (3, 1, 2, 1, 1), 'op': 'popoo', 's': (1, 1, -1, -1, 1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-4, 0), (-3, -3), (-3, 3), (-2, -6), (-2, 0), (-2, 6), (-1, -3), (-1, 3), (0, -6), (0, 0), (0, 6), (1, -3), (1, 3), (2, -6), (2, 0), (2, 6), (3, -3), (3, 3), (4, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((2, 2, 2, 8, 2, 2, 2), (1, 2, 2, 1, 8, 1, 8, 8, 2, 15, 2, 8, 8, 1, 8, 1, 2, 2, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}, {'tree': (3, 1, 2, 1, 1), 'op': 'popoo', 's': (-1, -1, 1, 1, -1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-4, 0), (-3, -3), (-3, 3), (-2, -6), (-2, 0), (-2, 6), (-1, -3), (-1, 3), (0, -6), (0, 0), (0, 6), (1, -3), (1, 3), (2, -6), (2, 0), (2, 6), (3, -3), (3, 3), (4, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((2, 2, 2, 8, 2, 2, 2), (1, 2, 2, 1, 8, 1, 8, 8, 2, 15, 2, 8, 8, 1, 8, 1, 2, 2, 1), (1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}], 'SYM_ID': 'U(1)xU(1)', 'fermionic': False})

    #      |
    #    --T
    #   |  |
    # --T--C
    #
    # len 157632
    t3_data = np.random.randn(157632) + 1.0j * np.random.randn(157632)
    C2x2_RD= yast.load_from_dict(loc_c, {'_d': t3_data,\
        's': (-1, 1, 1, -1), 'n': (0, 0), 't': ((-4, 0, -2, 0, -2, 0, 0, 0), (-4, 0, -2, 0, -1, -3, 1, -3), (-4, 0, -2, 0, -1, 3, 1, 3), (-4, 0, -2, 0, 0, 0, 2, 0), (-4, 0, -2, 0, 1, -3, 3, -3), (-4, 0, -2, 0, 1, 3, 3, 3), (-4, 0, -2, 0, 2, 0, 4, 0), (-3, -3, -2, 0, -2, 0, -1, 3), (-3, -3, -2, 0, -1, -3, 0, 0), (-3, -3, -2, 0, -1, 3, 0, 6), (-3, -3, -2, 0, 0, 0, 1, 3), (-3, -3, -2, 0, 1, -3, 2, 0), (-3, -3, -2, 0, 1, 3, 2, 6), (-3, -3, -2, 0, 2, 0, 3, 3), (-3, -3, -1, -3, -2, 0, 0, 0), (-3, -3, -1, -3, -1, -3, 1, -3), (-3, -3, -1, -3, -1, 3, 1, 3), (-3, -3, -1, -3, 0, 0, 2, 0), (-3, -3, -1, -3, 1, -3, 3, -3), (-3, -3, -1, -3, 1, 3, 3, 3), (-3, -3, -1, -3, 2, 0, 4, 0), (-3, 3, -2, 0, -2, 0, -1, -3), (-3, 3, -2, 0, -1, -3, 0, -6), (-3, 3, -2, 0, -1, 3, 0, 0), (-3, 3, -2, 0, 0, 0, 1, -3), (-3, 3, -2, 0, 1, -3, 2, -6), (-3, 3, -2, 0, 1, 3, 2, 0), (-3, 3, -2, 0, 2, 0, 3, -3), (-3, 3, -1, 3, -2, 0, 0, 0), (-3, 3, -1, 3, -1, -3, 1, -3), (-3, 3, -1, 3, -1, 3, 1, 3), (-3, 3, -1, 3, 0, 0, 2, 0), (-3, 3, -1, 3, 1, -3, 3, -3), (-3, 3, -1, 3, 1, 3, 3, 3), (-3, 3, -1, 3, 2, 0, 4, 0), (-2, -6, -1, -3, -2, 0, -1, 3), (-2, -6, -1, -3, -1, -3, 0, 0), (-2, -6, -1, -3, -1, 3, 0, 6), (-2, -6, -1, -3, 0, 0, 1, 3), (-2, -6, -1, -3, 1, -3, 2, 0), (-2, -6, -1, -3, 1, 3, 2, 6), (-2, -6, -1, -3, 2, 0, 3, 3), (-2, 0, -2, 0, -2, 0, -2, 0), (-2, 0, -2, 0, -1, -3, -1, -3), (-2, 0, -2, 0, -1, 3, -1, 3), (-2, 0, -2, 0, 0, 0, 0, 0), (-2, 0, -2, 0, 1, -3, 1, -3), (-2, 0, -2, 0, 1, 3, 1, 3), (-2, 0, -2, 0, 2, 0, 2, 0), (-2, 0, -1, -3, -2, 0, -1, -3), (-2, 0, -1, -3, -1, -3, 0, -6), (-2, 0, -1, -3, -1, 3, 0, 0), (-2, 0, -1, -3, 0, 0, 1, -3), (-2, 0, -1, -3, 1, -3, 2, -6), (-2, 0, -1, -3, 1, 3, 2, 0), (-2, 0, -1, -3, 2, 0, 3, -3), (-2, 0, -1, 3, -2, 0, -1, 3), (-2, 0, -1, 3, -1, -3, 0, 0), (-2, 0, -1, 3, -1, 3, 0, 6), (-2, 0, -1, 3, 0, 0, 1, 3), (-2, 0, -1, 3, 1, -3, 2, 0), (-2, 0, -1, 3, 1, 3, 2, 6), (-2, 0, -1, 3, 2, 0, 3, 3), (-2, 0, 0, 0, -2, 0, 0, 0), (-2, 0, 0, 0, -1, -3, 1, -3), (-2, 0, 0, 0, -1, 3, 1, 3), (-2, 0, 0, 0, 0, 0, 2, 0), (-2, 0, 0, 0, 1, -3, 3, -3), (-2, 0, 0, 0, 1, 3, 3, 3), (-2, 0, 0, 0, 2, 0, 4, 0), (-2, 6, -1, 3, -2, 0, -1, -3), (-2, 6, -1, 3, -1, -3, 0, -6), (-2, 6, -1, 3, -1, 3, 0, 0), (-2, 6, -1, 3, 0, 0, 1, -3), (-2, 6, -1, 3, 1, -3, 2, -6), (-2, 6, -1, 3, 1, 3, 2, 0), (-2, 6, -1, 3, 2, 0, 3, -3), (-1, -3, -2, 0, -2, 0, -3, 3), (-1, -3, -2, 0, -1, -3, -2, 0), (-1, -3, -2, 0, -1, 3, -2, 6), (-1, -3, -2, 0, 0, 0, -1, 3), (-1, -3, -2, 0, 1, -3, 0, 0), (-1, -3, -2, 0, 1, 3, 0, 6), (-1, -3, -2, 0, 2, 0, 1, 3), (-1, -3, -1, -3, -2, 0, -2, 0), (-1, -3, -1, -3, -1, -3, -1, -3), (-1, -3, -1, -3, -1, 3, -1, 3), (-1, -3, -1, -3, 0, 0, 0, 0), (-1, -3, -1, -3, 1, -3, 1, -3), (-1, -3, -1, -3, 1, 3, 1, 3), (-1, -3, -1, -3, 2, 0, 2, 0), (-1, -3, 0, 0, -2, 0, -1, 3), (-1, -3, 0, 0, -1, -3, 0, 0), (-1, -3, 0, 0, -1, 3, 0, 6), (-1, -3, 0, 0, 0, 0, 1, 3), (-1, -3, 0, 0, 1, -3, 2, 0), (-1, -3, 0, 0, 1, 3, 2, 6), (-1, -3, 0, 0, 2, 0, 3, 3), (-1, -3, 1, -3, -2, 0, 0, 0), (-1, -3, 1, -3, -1, -3, 1, -3), (-1, -3, 1, -3, -1, 3, 1, 3), (-1, -3, 1, -3, 0, 0, 2, 0), (-1, -3, 1, -3, 1, -3, 3, -3), (-1, -3, 1, -3, 1, 3, 3, 3), (-1, -3, 1, -3, 2, 0, 4, 0), (-1, 3, -2, 0, -2, 0, -3, -3), (-1, 3, -2, 0, -1, -3, -2, -6), (-1, 3, -2, 0, -1, 3, -2, 0), (-1, 3, -2, 0, 0, 0, -1, -3), (-1, 3, -2, 0, 1, -3, 0, -6), (-1, 3, -2, 0, 1, 3, 0, 0), (-1, 3, -2, 0, 2, 0, 1, -3), (-1, 3, -1, 3, -2, 0, -2, 0), (-1, 3, -1, 3, -1, -3, -1, -3), (-1, 3, -1, 3, -1, 3, -1, 3), (-1, 3, -1, 3, 0, 0, 0, 0), (-1, 3, -1, 3, 1, -3, 1, -3), (-1, 3, -1, 3, 1, 3, 1, 3), (-1, 3, -1, 3, 2, 0, 2, 0), (-1, 3, 0, 0, -2, 0, -1, -3), (-1, 3, 0, 0, -1, -3, 0, -6), (-1, 3, 0, 0, -1, 3, 0, 0), (-1, 3, 0, 0, 0, 0, 1, -3), (-1, 3, 0, 0, 1, -3, 2, -6), (-1, 3, 0, 0, 1, 3, 2, 0), (-1, 3, 0, 0, 2, 0, 3, -3), (-1, 3, 1, 3, -2, 0, 0, 0), (-1, 3, 1, 3, -1, -3, 1, -3), (-1, 3, 1, 3, -1, 3, 1, 3), (-1, 3, 1, 3, 0, 0, 2, 0), (-1, 3, 1, 3, 1, -3, 3, -3), (-1, 3, 1, 3, 1, 3, 3, 3), (-1, 3, 1, 3, 2, 0, 4, 0), (0, -6, -1, -3, -2, 0, -3, 3), (0, -6, -1, -3, -1, -3, -2, 0), (0, -6, -1, -3, -1, 3, -2, 6), (0, -6, -1, -3, 0, 0, -1, 3), (0, -6, -1, -3, 1, -3, 0, 0), (0, -6, -1, -3, 1, 3, 0, 6), (0, -6, -1, -3, 2, 0, 1, 3), (0, -6, 1, -3, -2, 0, -1, 3), (0, -6, 1, -3, -1, -3, 0, 0), (0, -6, 1, -3, -1, 3, 0, 6), (0, -6, 1, -3, 0, 0, 1, 3), (0, -6, 1, -3, 1, -3, 2, 0), (0, -6, 1, -3, 1, 3, 2, 6), (0, -6, 1, -3, 2, 0, 3, 3), (0, 0, -2, 0, -2, 0, -4, 0), (0, 0, -2, 0, -1, -3, -3, -3), (0, 0, -2, 0, -1, 3, -3, 3), (0, 0, -2, 0, 0, 0, -2, 0), (0, 0, -2, 0, 1, -3, -1, -3), (0, 0, -2, 0, 1, 3, -1, 3), (0, 0, -2, 0, 2, 0, 0, 0), (0, 0, -1, -3, -2, 0, -3, -3), (0, 0, -1, -3, -1, -3, -2, -6), (0, 0, -1, -3, -1, 3, -2, 0), (0, 0, -1, -3, 0, 0, -1, -3), (0, 0, -1, -3, 1, -3, 0, -6), (0, 0, -1, -3, 1, 3, 0, 0), (0, 0, -1, -3, 2, 0, 1, -3), (0, 0, -1, 3, -2, 0, -3, 3), (0, 0, -1, 3, -1, -3, -2, 0), (0, 0, -1, 3, -1, 3, -2, 6), (0, 0, -1, 3, 0, 0, -1, 3), (0, 0, -1, 3, 1, -3, 0, 0), (0, 0, -1, 3, 1, 3, 0, 6), (0, 0, -1, 3, 2, 0, 1, 3), (0, 0, 0, 0, -2, 0, -2, 0), (0, 0, 0, 0, -1, -3, -1, -3), (0, 0, 0, 0, -1, 3, -1, 3), (0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, -3, 1, -3), (0, 0, 0, 0, 1, 3, 1, 3), (0, 0, 0, 0, 2, 0, 2, 0), (0, 0, 1, -3, -2, 0, -1, -3), (0, 0, 1, -3, -1, -3, 0, -6), (0, 0, 1, -3, -1, 3, 0, 0), (0, 0, 1, -3, 0, 0, 1, -3), (0, 0, 1, -3, 1, -3, 2, -6), (0, 0, 1, -3, 1, 3, 2, 0), (0, 0, 1, -3, 2, 0, 3, -3), (0, 0, 1, 3, -2, 0, -1, 3), (0, 0, 1, 3, -1, -3, 0, 0), (0, 0, 1, 3, -1, 3, 0, 6), (0, 0, 1, 3, 0, 0, 1, 3), (0, 0, 1, 3, 1, -3, 2, 0), (0, 0, 1, 3, 1, 3, 2, 6), (0, 0, 1, 3, 2, 0, 3, 3), (0, 0, 2, 0, -2, 0, 0, 0), (0, 0, 2, 0, -1, -3, 1, -3), (0, 0, 2, 0, -1, 3, 1, 3), (0, 0, 2, 0, 0, 0, 2, 0), (0, 0, 2, 0, 1, -3, 3, -3), (0, 0, 2, 0, 1, 3, 3, 3), (0, 0, 2, 0, 2, 0, 4, 0), (0, 6, -1, 3, -2, 0, -3, -3), (0, 6, -1, 3, -1, -3, -2, -6), (0, 6, -1, 3, -1, 3, -2, 0), (0, 6, -1, 3, 0, 0, -1, -3), (0, 6, -1, 3, 1, -3, 0, -6), (0, 6, -1, 3, 1, 3, 0, 0), (0, 6, -1, 3, 2, 0, 1, -3), (0, 6, 1, 3, -2, 0, -1, -3), (0, 6, 1, 3, -1, -3, 0, -6), (0, 6, 1, 3, -1, 3, 0, 0), (0, 6, 1, 3, 0, 0, 1, -3), (0, 6, 1, 3, 1, -3, 2, -6), (0, 6, 1, 3, 1, 3, 2, 0), (0, 6, 1, 3, 2, 0, 3, -3), (1, -3, -1, -3, -2, 0, -4, 0), (1, -3, -1, -3, -1, -3, -3, -3), (1, -3, -1, -3, -1, 3, -3, 3), (1, -3, -1, -3, 0, 0, -2, 0), (1, -3, -1, -3, 1, -3, -1, -3), (1, -3, -1, -3, 1, 3, -1, 3), (1, -3, -1, -3, 2, 0, 0, 0), (1, -3, 0, 0, -2, 0, -3, 3), (1, -3, 0, 0, -1, -3, -2, 0), (1, -3, 0, 0, -1, 3, -2, 6), (1, -3, 0, 0, 0, 0, -1, 3), (1, -3, 0, 0, 1, -3, 0, 0), (1, -3, 0, 0, 1, 3, 0, 6), (1, -3, 0, 0, 2, 0, 1, 3), (1, -3, 1, -3, -2, 0, -2, 0), (1, -3, 1, -3, -1, -3, -1, -3), (1, -3, 1, -3, -1, 3, -1, 3), (1, -3, 1, -3, 0, 0, 0, 0), (1, -3, 1, -3, 1, -3, 1, -3), (1, -3, 1, -3, 1, 3, 1, 3), (1, -3, 1, -3, 2, 0, 2, 0), (1, -3, 2, 0, -2, 0, -1, 3), (1, -3, 2, 0, -1, -3, 0, 0), (1, -3, 2, 0, -1, 3, 0, 6), (1, -3, 2, 0, 0, 0, 1, 3), (1, -3, 2, 0, 1, -3, 2, 0), (1, -3, 2, 0, 1, 3, 2, 6), (1, -3, 2, 0, 2, 0, 3, 3), (1, 3, -1, 3, -2, 0, -4, 0), (1, 3, -1, 3, -1, -3, -3, -3), (1, 3, -1, 3, -1, 3, -3, 3), (1, 3, -1, 3, 0, 0, -2, 0), (1, 3, -1, 3, 1, -3, -1, -3), (1, 3, -1, 3, 1, 3, -1, 3), (1, 3, -1, 3, 2, 0, 0, 0), (1, 3, 0, 0, -2, 0, -3, -3), (1, 3, 0, 0, -1, -3, -2, -6), (1, 3, 0, 0, -1, 3, -2, 0), (1, 3, 0, 0, 0, 0, -1, -3), (1, 3, 0, 0, 1, -3, 0, -6), (1, 3, 0, 0, 1, 3, 0, 0), (1, 3, 0, 0, 2, 0, 1, -3), (1, 3, 1, 3, -2, 0, -2, 0), (1, 3, 1, 3, -1, -3, -1, -3), (1, 3, 1, 3, -1, 3, -1, 3), (1, 3, 1, 3, 0, 0, 0, 0), (1, 3, 1, 3, 1, -3, 1, -3), (1, 3, 1, 3, 1, 3, 1, 3), (1, 3, 1, 3, 2, 0, 2, 0), (1, 3, 2, 0, -2, 0, -1, -3), (1, 3, 2, 0, -1, -3, 0, -6), (1, 3, 2, 0, -1, 3, 0, 0), (1, 3, 2, 0, 0, 0, 1, -3), (1, 3, 2, 0, 1, -3, 2, -6), (1, 3, 2, 0, 1, 3, 2, 0), (1, 3, 2, 0, 2, 0, 3, -3), (2, -6, 1, -3, -2, 0, -3, 3), (2, -6, 1, -3, -1, -3, -2, 0), (2, -6, 1, -3, -1, 3, -2, 6), (2, -6, 1, -3, 0, 0, -1, 3), (2, -6, 1, -3, 1, -3, 0, 0), (2, -6, 1, -3, 1, 3, 0, 6), (2, -6, 1, -3, 2, 0, 1, 3), (2, 0, 0, 0, -2, 0, -4, 0), (2, 0, 0, 0, -1, -3, -3, -3), (2, 0, 0, 0, -1, 3, -3, 3), (2, 0, 0, 0, 0, 0, -2, 0), (2, 0, 0, 0, 1, -3, -1, -3), (2, 0, 0, 0, 1, 3, -1, 3), (2, 0, 0, 0, 2, 0, 0, 0), (2, 0, 1, -3, -2, 0, -3, -3), (2, 0, 1, -3, -1, -3, -2, -6), (2, 0, 1, -3, -1, 3, -2, 0), (2, 0, 1, -3, 0, 0, -1, -3), (2, 0, 1, -3, 1, -3, 0, -6), (2, 0, 1, -3, 1, 3, 0, 0), (2, 0, 1, -3, 2, 0, 1, -3), (2, 0, 1, 3, -2, 0, -3, 3), (2, 0, 1, 3, -1, -3, -2, 0), (2, 0, 1, 3, -1, 3, -2, 6), (2, 0, 1, 3, 0, 0, -1, 3), (2, 0, 1, 3, 1, -3, 0, 0), (2, 0, 1, 3, 1, 3, 0, 6), (2, 0, 1, 3, 2, 0, 1, 3), (2, 0, 2, 0, -2, 0, -2, 0), (2, 0, 2, 0, -1, -3, -1, -3), (2, 0, 2, 0, -1, 3, -1, 3), (2, 0, 2, 0, 0, 0, 0, 0), (2, 0, 2, 0, 1, -3, 1, -3), (2, 0, 2, 0, 1, 3, 1, 3), (2, 0, 2, 0, 2, 0, 2, 0), (2, 6, 1, 3, -2, 0, -3, -3), (2, 6, 1, 3, -1, -3, -2, -6), (2, 6, 1, 3, -1, 3, -2, 0), (2, 6, 1, 3, 0, 0, -1, -3), (2, 6, 1, 3, 1, -3, 0, -6), (2, 6, 1, 3, 1, 3, 0, 0), (2, 6, 1, 3, 2, 0, 1, -3), (3, -3, 1, -3, -2, 0, -4, 0), (3, -3, 1, -3, -1, -3, -3, -3), (3, -3, 1, -3, -1, 3, -3, 3), (3, -3, 1, -3, 0, 0, -2, 0), (3, -3, 1, -3, 1, -3, -1, -3), (3, -3, 1, -3, 1, 3, -1, 3), (3, -3, 1, -3, 2, 0, 0, 0), (3, -3, 2, 0, -2, 0, -3, 3), (3, -3, 2, 0, -1, -3, -2, 0), (3, -3, 2, 0, -1, 3, -2, 6), (3, -3, 2, 0, 0, 0, -1, 3), (3, -3, 2, 0, 1, -3, 0, 0), (3, -3, 2, 0, 1, 3, 0, 6), (3, -3, 2, 0, 2, 0, 1, 3), (3, 3, 1, 3, -2, 0, -4, 0), (3, 3, 1, 3, -1, -3, -3, -3), (3, 3, 1, 3, -1, 3, -3, 3), (3, 3, 1, 3, 0, 0, -2, 0), (3, 3, 1, 3, 1, -3, -1, -3), (3, 3, 1, 3, 1, 3, -1, 3), (3, 3, 1, 3, 2, 0, 0, 0), (3, 3, 2, 0, -2, 0, -3, -3), (3, 3, 2, 0, -1, -3, -2, -6), (3, 3, 2, 0, -1, 3, -2, 0), (3, 3, 2, 0, 0, 0, -1, -3), (3, 3, 2, 0, 1, -3, 0, -6), (3, 3, 2, 0, 1, 3, 0, 0), (3, 3, 2, 0, 2, 0, 1, -3), (4, 0, 2, 0, -2, 0, -4, 0), (4, 0, 2, 0, -1, -3, -3, -3), (4, 0, 2, 0, -1, 3, -3, 3), (4, 0, 2, 0, 0, 0, -2, 0), (4, 0, 2, 0, 1, -3, -1, -3), (4, 0, 2, 0, 1, 3, -1, 3), (4, 0, 2, 0, 2, 0, 0, 0)), 'D': ((1, 2, 2, 15), (1, 2, 2, 8), (1, 2, 2, 8), (1, 2, 8, 8), (1, 2, 2, 2), (1, 2, 2, 2), (1, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 8, 8), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 2, 1), (1, 2, 2, 8), (1, 2, 2, 15), (1, 2, 2, 2), (1, 2, 8, 8), (1, 2, 2, 8), (1, 2, 2, 1), (1, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 8, 8), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 2, 2), (8, 8, 2, 15), (8, 8, 2, 8), (8, 8, 2, 8), (8, 8, 8, 8), (8, 8, 2, 2), (8, 8, 2, 2), (8, 8, 2, 1), (1, 2, 2, 8), (1, 2, 2, 2), (1, 2, 2, 15), (1, 2, 8, 8), (1, 2, 2, 1), (1, 2, 2, 8), (1, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 8, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 8, 2, 8), (8, 8, 2, 15), (8, 8, 2, 2), (8, 8, 8, 8), (8, 8, 2, 8), (8, 8, 2, 1), (8, 8, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 8, 2, 8), (8, 8, 2, 2), (8, 8, 2, 15), (8, 8, 8, 8), (8, 8, 2, 1), (8, 8, 2, 8), (8, 8, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 8, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (15, 2, 2, 1), (15, 2, 2, 2), (15, 2, 2, 2), (15, 2, 8, 8), (15, 2, 2, 8), (15, 2, 2, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 2, 1), (15, 2, 2, 8), (15, 2, 8, 8), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 8), (15, 2, 2, 1), (15, 2, 8, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 8, 15), (15, 8, 2, 8), (15, 8, 2, 8), (15, 8, 2, 8), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 8, 8), (15, 2, 2, 1), (15, 2, 2, 8), (15, 2, 2, 2), (15, 2, 2, 8), (15, 2, 2, 15), (15, 2, 2, 2), (15, 2, 8, 8), (15, 2, 2, 8), (15, 2, 2, 1), (15, 2, 2, 2), (15, 2, 2, 15), (15, 2, 2, 8), (15, 2, 2, 8), (15, 2, 8, 8), (15, 2, 2, 2), (15, 2, 2, 2), (15, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 8, 8), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 8, 2, 2), (8, 8, 2, 8), (8, 8, 2, 1), (8, 8, 8, 8), (8, 8, 2, 15), (8, 8, 2, 2), (8, 8, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 2), (8, 2, 2, 2), (8, 2, 8, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 15), (8, 8, 2, 2), (8, 8, 2, 1), (8, 8, 2, 8), (8, 8, 8, 8), (8, 8, 2, 2), (8, 8, 2, 15), (8, 8, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 8, 8), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 2, 2), (1, 2, 2, 2), (1, 2, 2, 8), (1, 2, 2, 1), (1, 2, 8, 8), (1, 2, 2, 15), (1, 2, 2, 2), (1, 2, 2, 8), (8, 8, 2, 1), (8, 8, 2, 2), (8, 8, 2, 2), (8, 8, 8, 8), (8, 8, 2, 8), (8, 8, 2, 8), (8, 8, 2, 15), (8, 2, 2, 2), (8, 2, 2, 1), (8, 2, 2, 8), (8, 2, 8, 8), (8, 2, 2, 2), (8, 2, 2, 15), (8, 2, 2, 8), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 1), (8, 2, 8, 8), (8, 2, 2, 15), (8, 2, 2, 2), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 8, 15), (8, 2, 2, 8), (8, 2, 2, 8), (8, 2, 2, 8), (1, 2, 2, 2), (1, 2, 2, 1), (1, 2, 2, 8), (1, 2, 8, 8), (1, 2, 2, 2), (1, 2, 2, 15), (1, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 8, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 8), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 2), (2, 2, 8, 8), (2, 2, 2, 8), (2, 2, 2, 8), (2, 2, 2, 15), (2, 2, 2, 2), (2, 2, 2, 1), (2, 2, 2, 8), (2, 2, 8, 8), (2, 2, 2, 2), (2, 2, 2, 15), (2, 2, 2, 8), (1, 2, 2, 1), (1, 2, 2, 2), (1, 2, 2, 2), (1, 2, 8, 8), (1, 2, 2, 8), (1, 2, 2, 8), (1, 2, 2, 15)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0)), ((-2, 0), (-1, -3), (-1, 3), (0, 0), (1, -3), (1, 3), (2, 0))), 'D': ((1, 1, 1, 3, 1, 1, 1), (1, 1, 1, 3, 1, 1, 1))}], 'SYM_ID': 'U(1)xU(1)', 'fermionic': False})

    ap_1= a_1layer.clone()
    ap_2= a_1layer.clone()
    ap_1._data=  torch.rand(a_1layer.data.size(), dtype=a_1layer.data.dtype, device=a_1layer.data.device)
    ap_2._data=  torch.rand(a_1layer.data.size(), dtype=a_1layer.data.dtype, device=a_1layer.data.device)
    def loss_fn(params):
        print(f"loss params {params}")
        a_1layer_grad= a_1layer + params[0]*ap_1 + params[1]*ap_2

        a_op = op.tensordot(a_1layer_grad,([0],[0]),conj=(0,1))
        a_op = a_1layer_grad.tensordot(a_op,([0],[0]))
        a_op = a_op.fuse_legs(axes=((0,4),(1,5),(2,6),(3,7)))

        a_id = a_1layer_grad.tensordot(a_1layer_grad,([0],[0]),conj=(0,1))
        a_id = a_id.fuse_legs(axes=((0,4),(1,5),(2,6),(3,7)))

        # C-------T1--1->0(-)
        # |       0
        # |       0
        # T2--3 1 a--3(+)
        # 2->1(-) 2(+)
        C2x2_LU_op = C2x2_LU.tensordot(a_op, ([0, 3], [0, 1]))
        C2x2_LU_id = C2x2_LU.tensordot(a_id, ([0, 3], [0, 1]))

        # permute 0123->1203
        # reshape (12)(03)->01
        # C2x2--1
        # |\23
        # 0
        C2x2_LU_op = C2x2_LU_op.fuse_legs(axes=((1, 2), (0, 3)))
        C2x2_LU_id = C2x2_LU_id.fuse_legs(axes=((1, 2), (0, 3)))

        upper_half_op = C2x2_LU_op.tensordot(C2x2_RU, ([1], [0]))
        upper_half = C2x2_LU_id.tensordot(C2x2_RU, ([1], [0]))

        #    (-)2<-0 (+)1<-2
        # (-)3<-1--a--3 3--T2
        #          2\...   |
        #          0       |
        # (+)0<-1--T1------C
        # C2x2_RD_id = C2x2_RD.tensordot(a_id_nograd, ([0, 3], [2, 3]))
        C2x2_RD_id = C2x2_RD.tensordot(a_id, ([0, 3], [2, 3]))

        # permute 0123...->1203...
        # reshape (12)(03)...->01...
        #    (+)0 ...
        #       |/
        # (+)1--C2x2
        C2x2_RD_id = C2x2_RD_id.fuse_legs(axes=((1,2),(0,3)))

        lower_half = C2x2_LD.tensordot(C2x2_RD_id, ([1], [1]))

        rdm_op = upper_half_op.tensordot(lower_half, ([0, 1], [0, 1]))
        rdm_id = upper_half.tensordot(lower_half, ([0, 1], [0, 1]))

        exp_val_op= rdm_op/rdm_id.to_number()
        exp_val_op= exp_val_op.to_number().real
        return exp_val_op

    params= torch.rand(2, dtype=a_1layer.data.dtype, device=a_1layer.data.device)
    params.requires_grad_(True)
    op_args= (params,)
    test = torch.autograd.gradcheck(loss_fn, op_args, eps=1e-4, atol=1e-4)
    assert test


@pytest.mark.skipif(config_U1xU1_fermionic.backend.BACKEND_ID=="numpy", reason="numpy backend does not support autograd")
@pytest.mark.skipif("not config.getoption('bug_pytorch110')")
def test_bug_conj_transpose_backward_u1():
    import torch

    loc_c = config_U1
    loc_c = loc_c if isinstance(loc_c, _config) else _config(**{a: getattr(loc_c, a) for a in _config._fields if hasattr(loc_c, a)})
    loc_c = loc_c._replace(default_dtype="complex128", fermionic=False, default_fusion='hard')


    t0_data = np.random.randn(1160) + 1.0j * np.random.randn(1160)
    A= yast.load_from_dict(loc_c, {'_d': t0_data,\
        's': (-1, -1, -1, 1, 1), 'n': (0,), 't': ((-3, -2, 1, -2, -2), (-3, -2, 2, -2, -1), (-3, -2, 2, -1, -2), (-3, -1, 0, -2, -2), (-3, -1, 1, -2, -1), (-3, -1, 1, -1, -2), (-3, -1, 2, -2, 0), (-3, -1, 2, -1, -1), (-3, -1, 2, 0, -2), (-3, 0, -1, -2, -2), (-3, 0, 0, -2, -1), (-3, 0, 0, -1, -2), (-3, 0, 1, -2, 0), (-3, 0, 1, -1, -1), (-3, 0, 1, 0, -2), (-3, 0, 2, -2, 1), (-3, 0, 2, -1, 0), (-3, 0, 2, 0, -1), (-3, 0, 2, 1, -2), (-3, 1, -2, -2, -2), (-3, 1, -1, -2, -1), (-3, 1, -1, -1, -2), (-3, 1, 0, -2, 0), (-3, 1, 0, -1, -1), (-3, 1, 0, 0, -2), (-3, 1, 1, -2, 1), (-3, 1, 1, -1, 0), (-3, 1, 1, 0, -1), (-3, 1, 1, 1, -2), (-3, 2, -2, -2, -1), (-3, 2, -2, -1, -2), (-3, 2, -1, -2, 0), (-3, 2, -1, -1, -1), (-3, 2, -1, 0, -2), (-3, 2, 0, -2, 1), (-3, 2, 0, -1, 0), (-3, 2, 0, 0, -1), (-3, 2, 0, 1, -2), (-1, -2, 0, -2, -1), (-1, -2, 0, -1, -2), (-1, -2, 1, -2, 0), (-1, -2, 1, -1, -1), (-1, -2, 1, 0, -2), (-1, -2, 2, -2, 1), (-1, -2, 2, -1, 0), (-1, -2, 2, 0, -1), (-1, -2, 2, 1, -2), (-1, -1, -1, -2, -1), (-1, -1, -1, -1, -2), (-1, -1, 0, -2, 0), (-1, -1, 0, -1, -1), (-1, -1, 0, 0, -2), (-1, -1, 1, -2, 1), (-1, -1, 1, -1, 0), (-1, -1, 1, 0, -1), (-1, -1, 1, 1, -2), (-1, -1, 2, -2, 2), (-1, -1, 2, -1, 1), (-1, -1, 2, 0, 0), (-1, -1, 2, 1, -1), (-1, -1, 2, 2, -2), (-1, 0, -2, -2, -1), (-1, 0, -2, -1, -2), (-1, 0, -1, -2, 0), (-1, 0, -1, -1, -1), (-1, 0, -1, 0, -2), (-1, 0, 0, -2, 1), (-1, 0, 0, -1, 0), (-1, 0, 0, 0, -1), (-1, 0, 0, 1, -2), (-1, 0, 1, -2, 2), (-1, 0, 1, -1, 1), (-1, 0, 1, 0, 0), (-1, 0, 1, 1, -1), (-1, 0, 1, 2, -2), (-1, 0, 2, -1, 2), (-1, 0, 2, 0, 1), (-1, 0, 2, 1, 0), (-1, 0, 2, 2, -1), (-1, 1, -2, -2, 0), (-1, 1, -2, -1, -1), (-1, 1, -2, 0, -2), (-1, 1, -1, -2, 1), (-1, 1, -1, -1, 0), (-1, 1, -1, 0, -1), (-1, 1, -1, 1, -2), (-1, 1, 0, -2, 2), (-1, 1, 0, -1, 1), (-1, 1, 0, 0, 0), (-1, 1, 0, 1, -1), (-1, 1, 0, 2, -2), (-1, 1, 1, -1, 2), (-1, 1, 1, 0, 1), (-1, 1, 1, 1, 0), (-1, 1, 1, 2, -1), (-1, 2, -2, -2, 1), (-1, 2, -2, -1, 0), (-1, 2, -2, 0, -1), (-1, 2, -2, 1, -2), (-1, 2, -1, -2, 2), (-1, 2, -1, -1, 1), (-1, 2, -1, 0, 0), (-1, 2, -1, 1, -1), (-1, 2, -1, 2, -2), (-1, 2, 0, -1, 2), (-1, 2, 0, 0, 1), (-1, 2, 0, 1, 0), (-1, 2, 0, 2, -1), (1, -2, 0, -2, 1), (1, -2, 0, -1, 0), (1, -2, 0, 0, -1), (1, -2, 0, 1, -2), (1, -2, 1, -2, 2), (1, -2, 1, -1, 1), (1, -2, 1, 0, 0), (1, -2, 1, 1, -1), (1, -2, 1, 2, -2), (1, -2, 2, -1, 2), (1, -2, 2, 0, 1), (1, -2, 2, 1, 0), (1, -2, 2, 2, -1), (1, -1, -1, -2, 1), (1, -1, -1, -1, 0), (1, -1, -1, 0, -1), (1, -1, -1, 1, -2), (1, -1, 0, -2, 2), (1, -1, 0, -1, 1), (1, -1, 0, 0, 0), (1, -1, 0, 1, -1), (1, -1, 0, 2, -2), (1, -1, 1, -1, 2), (1, -1, 1, 0, 1), (1, -1, 1, 1, 0), (1, -1, 1, 2, -1), (1, -1, 2, 0, 2), (1, -1, 2, 1, 1), (1, -1, 2, 2, 0), (1, 0, -2, -2, 1), (1, 0, -2, -1, 0), (1, 0, -2, 0, -1), (1, 0, -2, 1, -2), (1, 0, -1, -2, 2), (1, 0, -1, -1, 1), (1, 0, -1, 0, 0), (1, 0, -1, 1, -1), (1, 0, -1, 2, -2), (1, 0, 0, -1, 2), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 2, -1), (1, 0, 1, 0, 2), (1, 0, 1, 1, 1), (1, 0, 1, 2, 0), (1, 0, 2, 1, 2), (1, 0, 2, 2, 1), (1, 1, -2, -2, 2), (1, 1, -2, -1, 1), (1, 1, -2, 0, 0), (1, 1, -2, 1, -1), (1, 1, -2, 2, -2), (1, 1, -1, -1, 2), (1, 1, -1, 0, 1), (1, 1, -1, 1, 0), (1, 1, -1, 2, -1), (1, 1, 0, 0, 2), (1, 1, 0, 1, 1), (1, 1, 0, 2, 0), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 2, -2, -1, 2), (1, 2, -2, 0, 1), (1, 2, -2, 1, 0), (1, 2, -2, 2, -1), (1, 2, -1, 0, 2), (1, 2, -1, 1, 1), (1, 2, -1, 2, 0), (1, 2, 0, 1, 2), (1, 2, 0, 2, 1), (3, -2, 0, -1, 2), (3, -2, 0, 0, 1), (3, -2, 0, 1, 0), (3, -2, 0, 2, -1), (3, -2, 1, 0, 2), (3, -2, 1, 1, 1), (3, -2, 1, 2, 0), (3, -2, 2, 1, 2), (3, -2, 2, 2, 1), (3, -1, -1, -1, 2), (3, -1, -1, 0, 1), (3, -1, -1, 1, 0), (3, -1, -1, 2, -1), (3, -1, 0, 0, 2), (3, -1, 0, 1, 1), (3, -1, 0, 2, 0), (3, -1, 1, 1, 2), (3, -1, 1, 2, 1), (3, -1, 2, 2, 2), (3, 0, -2, -1, 2), (3, 0, -2, 0, 1), (3, 0, -2, 1, 0), (3, 0, -2, 2, -1), (3, 0, -1, 0, 2), (3, 0, -1, 1, 1), (3, 0, -1, 2, 0), (3, 0, 0, 1, 2), (3, 0, 0, 2, 1), (3, 0, 1, 2, 2), (3, 1, -2, 0, 2), (3, 1, -2, 1, 1), (3, 1, -2, 2, 0), (3, 1, -1, 1, 2), (3, 1, -1, 2, 1), (3, 1, 0, 2, 2), (3, 2, -2, 1, 2), (3, 2, -2, 2, 1), (3, 2, -1, 2, 2)), 'D': ((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 2, 1, 1), (3, 2, 2, 1, 2), (3, 2, 2, 2, 1), (3, 2, 2, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 2, 1, 1), (3, 2, 2, 2, 1), (3, 2, 2, 1, 2), (3, 2, 2, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,), (1,)), 'hfs': [{'tree': (3, 1, 1, 1), 'op': 'pooo', 's': (-1, -1, -1, -1), 't': (((-1,), (1,)), ((-1,), (1,)), ((-1,), (1,))), 'D': ((1, 1), (1, 1), (1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}], 'SYM_ID': 'U(1)', 'fermionic': False})

    B= A.clone()
    C= A.clone()
    B._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)
    C._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)

    def loss_fn(params):
        print(f"params {params}")
        pA= A + params[0]*B + params[1]*C

        # A00--1
        # 0
        A00= pA.tensordot(pA,([0,1,2],[0,1,2]),conj=(0,1))
        A00= A00.fuse_legs(axes=((0,2),(1,3)))

        # 0--A10
        #    1
        A10= pA.tensordot(pA,([0,1,4],[0,1,4]),conj=(0,1))
        A10= A10.fuse_legs(axes=((0,2),(1,3)))

        # 0
        # A01--1
        A01= pA.tensordot(pA,([0,2,3],[0,2,3]),conj=(0,1))
        A01= A01.fuse_legs(axes=((0,2),(1,3)))

        #    0
        # 1--A11
        A11= pA.tensordot(pA,([0,3,4],[0,3,4]),conj=(0,1))
        A11= A11.fuse_legs(axes=((0,2),(1,3)))

        # A00--1 0--A10
        # 0         1
        X= A00.tensordot(A10,(1,0))
        # 0         0->1
        # A01--1 1--A11
        Y= A01.tensordot(A11,(1,1))
        S= X.tensordot(Y,([0,1],[0,1]))
        S= S.to_number().real
        print(f"loss {S}")

        return S

    params= torch.rand(2, dtype=A.data.dtype, device=A.data.device)
    params.requires_grad_(True)
    op_args= (params,)
    test = torch.autograd.gradcheck(loss_fn, op_args, eps=1e-4, atol=1e-4)
    assert test


@pytest.mark.skipif(config_U1xU1_fermionic.backend.BACKEND_ID=="numpy", reason="numpy backend does not support autograd")
@pytest.mark.skipif("not config.getoption('bug_pytorch110')")
def test_bug_contraction_backward_u1_C4x4_closed():
    r"""
    Computes contraction of 

    CTTC
    TaaT
    TaaT
    CTTC

    where a is double-layer tensor obtained as a = A^\dag A
    """
    import torch

    loc_c = config_U1
    loc_c = loc_c if isinstance(loc_c, _config) else _config(**{a: getattr(loc_c, a) for a in _config._fields if hasattr(loc_c, a)})
    loc_c = loc_c._replace(default_dtype="complex128", fermionic=False, default_fusion='hard')


    # C2x2_LU
    # 
    # len 246266
    t0_data = np.random.randn(246266) + 1.0j * np.random.randn(246266)
    C2x2_LU= yast.load_from_dict(loc_c, {'_d': t0_data,\
        's': (1, -1, -1, 1), 'n': (0,), 't': ((-4, -3, -3, -2), (-4, -3, -2, -1), (-4, -3, -1, 0), (-4, -3, 0, 1), (-4, -3, 1, 2), (-4, -3, 2, 3), (-4, -3, 3, 4), (-4, -2, -3, -1), (-4, -2, -2, 0), (-4, -2, -1, 1), (-4, -2, 0, 2), (-4, -2, 1, 3), (-4, -2, 2, 4), (-4, -1, -3, 0), (-4, -1, -2, 1), (-4, -1, -1, 2), (-4, -1, 0, 3), (-4, -1, 1, 4), (-3, -3, -3, -3), (-3, -3, -2, -2), (-3, -3, -1, -1), (-3, -3, 0, 0), (-3, -3, 1, 1), (-3, -3, 2, 2), (-3, -3, 3, 3), (-3, -2, -3, -2), (-3, -2, -2, -1), (-3, -2, -1, 0), (-3, -2, 0, 1), (-3, -2, 1, 2), (-3, -2, 2, 3), (-3, -2, 3, 4), (-3, -1, -3, -1), (-3, -1, -2, 0), (-3, -1, -1, 1), (-3, -1, 0, 2), (-3, -1, 1, 3), (-3, -1, 2, 4), (-3, 0, -3, 0), (-3, 0, -2, 1), (-3, 0, -1, 2), (-3, 0, 0, 3), (-3, 0, 1, 4), (-2, -3, -3, -4), (-2, -3, -2, -3), (-2, -3, -1, -2), (-2, -3, 0, -1), (-2, -3, 1, 0), (-2, -3, 2, 1), (-2, -3, 3, 2), (-2, -2, -3, -3), (-2, -2, -2, -2), (-2, -2, -1, -1), (-2, -2, 0, 0), (-2, -2, 1, 1), (-2, -2, 2, 2), (-2, -2, 3, 3), (-2, -1, -3, -2), (-2, -1, -2, -1), (-2, -1, -1, 0), (-2, -1, 0, 1), (-2, -1, 1, 2), (-2, -1, 2, 3), (-2, -1, 3, 4), (-2, 0, -3, -1), (-2, 0, -2, 0), (-2, 0, -1, 1), (-2, 0, 0, 2), (-2, 0, 1, 3), (-2, 0, 2, 4), (-2, 1, -3, 0), (-2, 1, -2, 1), (-2, 1, -1, 2), (-2, 1, 0, 3), (-2, 1, 1, 4), (-1, -3, -2, -4), (-1, -3, -1, -3), (-1, -3, 0, -2), (-1, -3, 1, -1), (-1, -3, 2, 0), (-1, -3, 3, 1), (-1, -2, -3, -4), (-1, -2, -2, -3), (-1, -2, -1, -2), (-1, -2, 0, -1), (-1, -2, 1, 0), (-1, -2, 2, 1), (-1, -2, 3, 2), (-1, -1, -3, -3), (-1, -1, -2, -2), (-1, -1, -1, -1), (-1, -1, 0, 0), (-1, -1, 1, 1), (-1, -1, 2, 2), (-1, -1, 3, 3), (-1, 0, -3, -2), (-1, 0, -2, -1), (-1, 0, -1, 0), (-1, 0, 0, 1), (-1, 0, 1, 2), (-1, 0, 2, 3), (-1, 0, 3, 4), (-1, 1, -3, -1), (-1, 1, -2, 0), (-1, 1, -1, 1), (-1, 1, 0, 2), (-1, 1, 1, 3), (-1, 1, 2, 4), (-1, 2, -3, 0), (-1, 2, -2, 1), (-1, 2, -1, 2), (-1, 2, 0, 3), (-1, 2, 1, 4), (0, -3, -1, -4), (0, -3, 0, -3), (0, -3, 1, -2), (0, -3, 2, -1), (0, -3, 3, 0), (0, -2, -2, -4), (0, -2, -1, -3), (0, -2, 0, -2), (0, -2, 1, -1), (0, -2, 2, 0), (0, -2, 3, 1), (0, -1, -3, -4), (0, -1, -2, -3), (0, -1, -1, -2), (0, -1, 0, -1), (0, -1, 1, 0), (0, -1, 2, 1), (0, -1, 3, 2), (0, 0, -3, -3), (0, 0, -2, -2), (0, 0, -1, -1), (0, 0, 0, 0), (0, 0, 1, 1), (0, 0, 2, 2), (0, 0, 3, 3), (0, 1, -3, -2), (0, 1, -2, -1), (0, 1, -1, 0), (0, 1, 0, 1), (0, 1, 1, 2), (0, 1, 2, 3), (0, 1, 3, 4), (0, 2, -3, -1), (0, 2, -2, 0), (0, 2, -1, 1), (0, 2, 0, 2), (0, 2, 1, 3), (0, 2, 2, 4), (0, 3, -3, 0), (0, 3, -2, 1), (0, 3, -1, 2), (0, 3, 0, 3), (0, 3, 1, 4), (1, -2, -1, -4), (1, -2, 0, -3), (1, -2, 1, -2), (1, -2, 2, -1), (1, -2, 3, 0), (1, -1, -2, -4), (1, -1, -1, -3), (1, -1, 0, -2), (1, -1, 1, -1), (1, -1, 2, 0), (1, -1, 3, 1), (1, 0, -3, -4), (1, 0, -2, -3), (1, 0, -1, -2), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 2, 1), (1, 0, 3, 2), (1, 1, -3, -3), (1, 1, -2, -2), (1, 1, -1, -1), (1, 1, 0, 0), (1, 1, 1, 1), (1, 1, 2, 2), (1, 1, 3, 3), (1, 2, -3, -2), (1, 2, -2, -1), (1, 2, -1, 0), (1, 2, 0, 1), (1, 2, 1, 2), (1, 2, 2, 3), (1, 2, 3, 4), (1, 3, -3, -1), (1, 3, -2, 0), (1, 3, -1, 1), (1, 3, 0, 2), (1, 3, 1, 3), (1, 3, 2, 4), (2, -1, -1, -4), (2, -1, 0, -3), (2, -1, 1, -2), (2, -1, 2, -1), (2, -1, 3, 0), (2, 0, -2, -4), (2, 0, -1, -3), (2, 0, 0, -2), (2, 0, 1, -1), (2, 0, 2, 0), (2, 0, 3, 1), (2, 1, -3, -4), (2, 1, -2, -3), (2, 1, -1, -2), (2, 1, 0, -1), (2, 1, 1, 0), (2, 1, 2, 1), (2, 1, 3, 2), (2, 2, -3, -3), (2, 2, -2, -2), (2, 2, -1, -1), (2, 2, 0, 0), (2, 2, 1, 1), (2, 2, 2, 2), (2, 2, 3, 3), (2, 3, -3, -2), (2, 3, -2, -1), (2, 3, -1, 0), (2, 3, 0, 1), (2, 3, 1, 2), (2, 3, 2, 3), (2, 3, 3, 4), (3, 0, -1, -4), (3, 0, 0, -3), (3, 0, 1, -2), (3, 0, 2, -1), (3, 0, 3, 0), (3, 1, -2, -4), (3, 1, -1, -3), (3, 1, 0, -2), (3, 1, 1, -1), (3, 1, 2, 0), (3, 1, 3, 1), (3, 2, -3, -4), (3, 2, -2, -3), (3, 2, -1, -2), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 2, 1), (3, 2, 3, 2), (3, 3, -3, -3), (3, 3, -2, -2), (3, 3, -1, -1), (3, 3, 0, 0), (3, 3, 1, 1), (3, 3, 2, 2), (3, 3, 3, 3), (4, 1, -1, -4), (4, 1, 0, -3), (4, 1, 1, -2), (4, 1, 2, -1), (4, 1, 3, 0), (4, 2, -2, -4), (4, 2, -1, -3), (4, 2, 0, -2), (4, 2, 1, -1), (4, 2, 2, 0), (4, 2, 3, 1), (4, 3, -3, -4), (4, 3, -2, -3), (4, 3, -1, -2), (4, 3, 0, -1), (4, 3, 1, 0), (4, 3, 2, 1), (4, 3, 3, 2)), 'D': ((1, 2, 3, 5), (1, 2, 5, 6), (1, 2, 11, 8), (1, 2, 9, 6), (1, 2, 11, 5), (1, 2, 5, 2), (1, 2, 3, 1), (1, 3, 3, 6), (1, 3, 5, 8), (1, 3, 11, 6), (1, 3, 9, 5), (1, 3, 11, 2), (1, 3, 5, 1), (1, 9, 3, 8), (1, 9, 5, 6), (1, 9, 11, 5), (1, 9, 9, 2), (1, 9, 11, 1), (2, 2, 3, 2), (2, 2, 5, 5), (2, 2, 11, 6), (2, 2, 9, 8), (2, 2, 11, 6), (2, 2, 5, 5), (2, 2, 3, 2), (2, 3, 3, 5), (2, 3, 5, 6), (2, 3, 11, 8), (2, 3, 9, 6), (2, 3, 11, 5), (2, 3, 5, 2), (2, 3, 3, 1), (2, 9, 3, 6), (2, 9, 5, 8), (2, 9, 11, 6), (2, 9, 9, 5), (2, 9, 11, 2), (2, 9, 5, 1), (2, 8, 3, 8), (2, 8, 5, 6), (2, 8, 11, 5), (2, 8, 9, 2), (2, 8, 11, 1), (5, 2, 3, 1), (5, 2, 5, 2), (5, 2, 11, 5), (5, 2, 9, 6), (5, 2, 11, 8), (5, 2, 5, 6), (5, 2, 3, 5), (5, 3, 3, 2), (5, 3, 5, 5), (5, 3, 11, 6), (5, 3, 9, 8), (5, 3, 11, 6), (5, 3, 5, 5), (5, 3, 3, 2), (5, 9, 3, 5), (5, 9, 5, 6), (5, 9, 11, 8), (5, 9, 9, 6), (5, 9, 11, 5), (5, 9, 5, 2), (5, 9, 3, 1), (5, 8, 3, 6), (5, 8, 5, 8), (5, 8, 11, 6), (5, 8, 9, 5), (5, 8, 11, 2), (5, 8, 5, 1), (5, 9, 3, 8), (5, 9, 5, 6), (5, 9, 11, 5), (5, 9, 9, 2), (5, 9, 11, 1), (6, 2, 5, 1), (6, 2, 11, 2), (6, 2, 9, 5), (6, 2, 11, 6), (6, 2, 5, 8), (6, 2, 3, 6), (6, 3, 3, 1), (6, 3, 5, 2), (6, 3, 11, 5), (6, 3, 9, 6), (6, 3, 11, 8), (6, 3, 5, 6), (6, 3, 3, 5), (6, 9, 3, 2), (6, 9, 5, 5), (6, 9, 11, 6), (6, 9, 9, 8), (6, 9, 11, 6), (6, 9, 5, 5), (6, 9, 3, 2), (6, 8, 3, 5), (6, 8, 5, 6), (6, 8, 11, 8), (6, 8, 9, 6), (6, 8, 11, 5), (6, 8, 5, 2), (6, 8, 3, 1), (6, 9, 3, 6), (6, 9, 5, 8), (6, 9, 11, 6), (6, 9, 9, 5), (6, 9, 11, 2), (6, 9, 5, 1), (6, 3, 3, 8), (6, 3, 5, 6), (6, 3, 11, 5), (6, 3, 9, 2), (6, 3, 11, 1), (8, 2, 11, 1), (8, 2, 9, 2), (8, 2, 11, 5), (8, 2, 5, 6), (8, 2, 3, 8), (8, 3, 5, 1), (8, 3, 11, 2), (8, 3, 9, 5), (8, 3, 11, 6), (8, 3, 5, 8), (8, 3, 3, 6), (8, 9, 3, 1), (8, 9, 5, 2), (8, 9, 11, 5), (8, 9, 9, 6), (8, 9, 11, 8), (8, 9, 5, 6), (8, 9, 3, 5), (8, 8, 3, 2), (8, 8, 5, 5), (8, 8, 11, 6), (8, 8, 9, 8), (8, 8, 11, 6), (8, 8, 5, 5), (8, 8, 3, 2), (8, 9, 3, 5), (8, 9, 5, 6), (8, 9, 11, 8), (8, 9, 9, 6), (8, 9, 11, 5), (8, 9, 5, 2), (8, 9, 3, 1), (8, 3, 3, 6), (8, 3, 5, 8), (8, 3, 11, 6), (8, 3, 9, 5), (8, 3, 11, 2), (8, 3, 5, 1), (8, 2, 3, 8), (8, 2, 5, 6), (8, 2, 11, 5), (8, 2, 9, 2), (8, 2, 11, 1), (6, 3, 11, 1), (6, 3, 9, 2), (6, 3, 11, 5), (6, 3, 5, 6), (6, 3, 3, 8), (6, 9, 5, 1), (6, 9, 11, 2), (6, 9, 9, 5), (6, 9, 11, 6), (6, 9, 5, 8), (6, 9, 3, 6), (6, 8, 3, 1), (6, 8, 5, 2), (6, 8, 11, 5), (6, 8, 9, 6), (6, 8, 11, 8), (6, 8, 5, 6), (6, 8, 3, 5), (6, 9, 3, 2), (6, 9, 5, 5), (6, 9, 11, 6), (6, 9, 9, 8), (6, 9, 11, 6), (6, 9, 5, 5), (6, 9, 3, 2), (6, 3, 3, 5), (6, 3, 5, 6), (6, 3, 11, 8), (6, 3, 9, 6), (6, 3, 11, 5), (6, 3, 5, 2), (6, 3, 3, 1), (6, 2, 3, 6), (6, 2, 5, 8), (6, 2, 11, 6), (6, 2, 9, 5), (6, 2, 11, 2), (6, 2, 5, 1), (5, 9, 11, 1), (5, 9, 9, 2), (5, 9, 11, 5), (5, 9, 5, 6), (5, 9, 3, 8), (5, 8, 5, 1), (5, 8, 11, 2), (5, 8, 9, 5), (5, 8, 11, 6), (5, 8, 5, 8), (5, 8, 3, 6), (5, 9, 3, 1), (5, 9, 5, 2), (5, 9, 11, 5), (5, 9, 9, 6), (5, 9, 11, 8), (5, 9, 5, 6), (5, 9, 3, 5), (5, 3, 3, 2), (5, 3, 5, 5), (5, 3, 11, 6), (5, 3, 9, 8), (5, 3, 11, 6), (5, 3, 5, 5), (5, 3, 3, 2), (5, 2, 3, 5), (5, 2, 5, 6), (5, 2, 11, 8), (5, 2, 9, 6), (5, 2, 11, 5), (5, 2, 5, 2), (5, 2, 3, 1), (2, 8, 11, 1), (2, 8, 9, 2), (2, 8, 11, 5), (2, 8, 5, 6), (2, 8, 3, 8), (2, 9, 5, 1), (2, 9, 11, 2), (2, 9, 9, 5), (2, 9, 11, 6), (2, 9, 5, 8), (2, 9, 3, 6), (2, 3, 3, 1), (2, 3, 5, 2), (2, 3, 11, 5), (2, 3, 9, 6), (2, 3, 11, 8), (2, 3, 5, 6), (2, 3, 3, 5), (2, 2, 3, 2), (2, 2, 5, 5), (2, 2, 11, 6), (2, 2, 9, 8), (2, 2, 11, 6), (2, 2, 5, 5), (2, 2, 3, 2), (1, 9, 11, 1), (1, 9, 9, 2), (1, 9, 11, 5), (1, 9, 5, 6), (1, 9, 3, 8), (1, 3, 5, 1), (1, 3, 11, 2), (1, 3, 9, 5), (1, 3, 11, 6), (1, 3, 5, 8), (1, 3, 3, 6), (1, 2, 3, 1), (1, 2, 5, 2), (1, 2, 11, 5), (1, 2, 9, 6), (1, 2, 11, 8), (1, 2, 5, 6), (1, 2, 3, 5)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_RU
    #
    # len 278994
    t1_data = np.random.randn(278994) + 1.0j * np.random.randn(278994)
    C2x2_RU= yast.load_from_dict(loc_c, {'_d': t1_data,\
        's': (-1, -1, 1, 1), 'n': (0,), 't': ((-4, 1, -3, 0), (-4, 1, -2, -1), (-4, 1, -1, -2), (-4, 1, 0, -3), (-4, 1, 1, -4), (-4, 2, -3, 1), (-4, 2, -2, 0), (-4, 2, -1, -1), (-4, 2, 0, -2), (-4, 2, 1, -3), (-4, 2, 2, -4), (-4, 3, -3, 2), (-4, 3, -2, 1), (-4, 3, -1, 0), (-4, 3, 0, -1), (-4, 3, 1, -2), (-4, 3, 2, -3), (-4, 3, 3, -4), (-3, 0, -3, 0), (-3, 0, -2, -1), (-3, 0, -1, -2), (-3, 0, 0, -3), (-3, 0, 1, -4), (-3, 1, -3, 1), (-3, 1, -2, 0), (-3, 1, -1, -1), (-3, 1, 0, -2), (-3, 1, 1, -3), (-3, 1, 2, -4), (-3, 2, -3, 2), (-3, 2, -2, 1), (-3, 2, -1, 0), (-3, 2, 0, -1), (-3, 2, 1, -2), (-3, 2, 2, -3), (-3, 2, 3, -4), (-3, 3, -3, 3), (-3, 3, -2, 2), (-3, 3, -1, 1), (-3, 3, 0, 0), (-3, 3, 1, -1), (-3, 3, 2, -2), (-3, 3, 3, -3), (-2, -1, -3, 0), (-2, -1, -2, -1), (-2, -1, -1, -2), (-2, -1, 0, -3), (-2, -1, 1, -4), (-2, 0, -3, 1), (-2, 0, -2, 0), (-2, 0, -1, -1), (-2, 0, 0, -2), (-2, 0, 1, -3), (-2, 0, 2, -4), (-2, 1, -3, 2), (-2, 1, -2, 1), (-2, 1, -1, 0), (-2, 1, 0, -1), (-2, 1, 1, -2), (-2, 1, 2, -3), (-2, 1, 3, -4), (-2, 2, -3, 3), (-2, 2, -2, 2), (-2, 2, -1, 1), (-2, 2, 0, 0), (-2, 2, 1, -1), (-2, 2, 2, -2), (-2, 2, 3, -3), (-2, 3, -3, 4), (-2, 3, -2, 3), (-2, 3, -1, 2), (-2, 3, 0, 1), (-2, 3, 1, 0), (-2, 3, 2, -1), (-2, 3, 3, -2), (-1, -2, -3, 0), (-1, -2, -2, -1), (-1, -2, -1, -2), (-1, -2, 0, -3), (-1, -2, 1, -4), (-1, -1, -3, 1), (-1, -1, -2, 0), (-1, -1, -1, -1), (-1, -1, 0, -2), (-1, -1, 1, -3), (-1, -1, 2, -4), (-1, 0, -3, 2), (-1, 0, -2, 1), (-1, 0, -1, 0), (-1, 0, 0, -1), (-1, 0, 1, -2), (-1, 0, 2, -3), (-1, 0, 3, -4), (-1, 1, -3, 3), (-1, 1, -2, 2), (-1, 1, -1, 1), (-1, 1, 0, 0), (-1, 1, 1, -1), (-1, 1, 2, -2), (-1, 1, 3, -3), (-1, 2, -3, 4), (-1, 2, -2, 3), (-1, 2, -1, 2), (-1, 2, 0, 1), (-1, 2, 1, 0), (-1, 2, 2, -1), (-1, 2, 3, -2), (-1, 3, -2, 4), (-1, 3, -1, 3), (-1, 3, 0, 2), (-1, 3, 1, 1), (-1, 3, 2, 0), (-1, 3, 3, -1), (0, -3, -3, 0), (0, -3, -2, -1), (0, -3, -1, -2), (0, -3, 0, -3), (0, -3, 1, -4), (0, -2, -3, 1), (0, -2, -2, 0), (0, -2, -1, -1), (0, -2, 0, -2), (0, -2, 1, -3), (0, -2, 2, -4), (0, -1, -3, 2), (0, -1, -2, 1), (0, -1, -1, 0), (0, -1, 0, -1), (0, -1, 1, -2), (0, -1, 2, -3), (0, -1, 3, -4), (0, 0, -3, 3), (0, 0, -2, 2), (0, 0, -1, 1), (0, 0, 0, 0), (0, 0, 1, -1), (0, 0, 2, -2), (0, 0, 3, -3), (0, 1, -3, 4), (0, 1, -2, 3), (0, 1, -1, 2), (0, 1, 0, 1), (0, 1, 1, 0), (0, 1, 2, -1), (0, 1, 3, -2), (0, 2, -2, 4), (0, 2, -1, 3), (0, 2, 0, 2), (0, 2, 1, 1), (0, 2, 2, 0), (0, 2, 3, -1), (0, 3, -1, 4), (0, 3, 0, 3), (0, 3, 1, 2), (0, 3, 2, 1), (0, 3, 3, 0), (1, -3, -3, 1), (1, -3, -2, 0), (1, -3, -1, -1), (1, -3, 0, -2), (1, -3, 1, -3), (1, -3, 2, -4), (1, -2, -3, 2), (1, -2, -2, 1), (1, -2, -1, 0), (1, -2, 0, -1), (1, -2, 1, -2), (1, -2, 2, -3), (1, -2, 3, -4), (1, -1, -3, 3), (1, -1, -2, 2), (1, -1, -1, 1), (1, -1, 0, 0), (1, -1, 1, -1), (1, -1, 2, -2), (1, -1, 3, -3), (1, 0, -3, 4), (1, 0, -2, 3), (1, 0, -1, 2), (1, 0, 0, 1), (1, 0, 1, 0), (1, 0, 2, -1), (1, 0, 3, -2), (1, 1, -2, 4), (1, 1, -1, 3), (1, 1, 0, 2), (1, 1, 1, 1), (1, 1, 2, 0), (1, 1, 3, -1), (1, 2, -1, 4), (1, 2, 0, 3), (1, 2, 1, 2), (1, 2, 2, 1), (1, 2, 3, 0), (2, -3, -3, 2), (2, -3, -2, 1), (2, -3, -1, 0), (2, -3, 0, -1), (2, -3, 1, -2), (2, -3, 2, -3), (2, -3, 3, -4), (2, -2, -3, 3), (2, -2, -2, 2), (2, -2, -1, 1), (2, -2, 0, 0), (2, -2, 1, -1), (2, -2, 2, -2), (2, -2, 3, -3), (2, -1, -3, 4), (2, -1, -2, 3), (2, -1, -1, 2), (2, -1, 0, 1), (2, -1, 1, 0), (2, -1, 2, -1), (2, -1, 3, -2), (2, 0, -2, 4), (2, 0, -1, 3), (2, 0, 0, 2), (2, 0, 1, 1), (2, 0, 2, 0), (2, 0, 3, -1), (2, 1, -1, 4), (2, 1, 0, 3), (2, 1, 1, 2), (2, 1, 2, 1), (2, 1, 3, 0), (3, -3, -3, 3), (3, -3, -2, 2), (3, -3, -1, 1), (3, -3, 0, 0), (3, -3, 1, -1), (3, -3, 2, -2), (3, -3, 3, -3), (3, -2, -3, 4), (3, -2, -2, 3), (3, -2, -1, 2), (3, -2, 0, 1), (3, -2, 1, 0), (3, -2, 2, -1), (3, -2, 3, -2), (3, -1, -2, 4), (3, -1, -1, 3), (3, -1, 0, 2), (3, -1, 1, 1), (3, -1, 2, 0), (3, -1, 3, -1), (3, 0, -1, 4), (3, 0, 0, 3), (3, 0, 1, 2), (3, 0, 2, 1), (3, 0, 3, 0), (4, -3, -3, 4), (4, -3, -2, 3), (4, -3, -1, 2), (4, -3, 0, 1), (4, -3, 1, 0), (4, -3, 2, -1), (4, -3, 3, -2), (4, -2, -2, 4), (4, -2, -1, 3), (4, -2, 0, 2), (4, -2, 1, 1), (4, -2, 2, 0), (4, -2, 3, -1), (4, -1, -1, 4), (4, -1, 0, 3), (4, -1, 1, 2), (4, -1, 2, 1), (4, -1, 3, 0)), 'D': ((1, 12, 2, 8), (1, 12, 3, 6), (1, 12, 9, 5), (1, 12, 8, 2), (1, 12, 9, 1), (1, 6, 2, 6), (1, 6, 3, 8), (1, 6, 9, 6), (1, 6, 8, 5), (1, 6, 9, 2), (1, 6, 3, 1), (1, 3, 2, 5), (1, 3, 3, 6), (1, 3, 9, 8), (1, 3, 8, 6), (1, 3, 9, 5), (1, 3, 3, 2), (1, 3, 2, 1), (2, 11, 2, 8), (2, 11, 3, 6), (2, 11, 9, 5), (2, 11, 8, 2), (2, 11, 9, 1), (2, 12, 2, 6), (2, 12, 3, 8), (2, 12, 9, 6), (2, 12, 8, 5), (2, 12, 9, 2), (2, 12, 3, 1), (2, 6, 2, 5), (2, 6, 3, 6), (2, 6, 9, 8), (2, 6, 8, 6), (2, 6, 9, 5), (2, 6, 3, 2), (2, 6, 2, 1), (2, 3, 2, 2), (2, 3, 3, 5), (2, 3, 9, 6), (2, 3, 8, 8), (2, 3, 9, 6), (2, 3, 3, 5), (2, 3, 2, 2), (5, 12, 2, 8), (5, 12, 3, 6), (5, 12, 9, 5), (5, 12, 8, 2), (5, 12, 9, 1), (5, 11, 2, 6), (5, 11, 3, 8), (5, 11, 9, 6), (5, 11, 8, 5), (5, 11, 9, 2), (5, 11, 3, 1), (5, 12, 2, 5), (5, 12, 3, 6), (5, 12, 9, 8), (5, 12, 8, 6), (5, 12, 9, 5), (5, 12, 3, 2), (5, 12, 2, 1), (5, 6, 2, 2), (5, 6, 3, 5), (5, 6, 9, 6), (5, 6, 8, 8), (5, 6, 9, 6), (5, 6, 3, 5), (5, 6, 2, 2), (5, 3, 2, 1), (5, 3, 3, 2), (5, 3, 9, 5), (5, 3, 8, 6), (5, 3, 9, 8), (5, 3, 3, 6), (5, 3, 2, 5), (6, 6, 2, 8), (6, 6, 3, 6), (6, 6, 9, 5), (6, 6, 8, 2), (6, 6, 9, 1), (6, 12, 2, 6), (6, 12, 3, 8), (6, 12, 9, 6), (6, 12, 8, 5), (6, 12, 9, 2), (6, 12, 3, 1), (6, 11, 2, 5), (6, 11, 3, 6), (6, 11, 9, 8), (6, 11, 8, 6), (6, 11, 9, 5), (6, 11, 3, 2), (6, 11, 2, 1), (6, 12, 2, 2), (6, 12, 3, 5), (6, 12, 9, 6), (6, 12, 8, 8), (6, 12, 9, 6), (6, 12, 3, 5), (6, 12, 2, 2), (6, 6, 2, 1), (6, 6, 3, 2), (6, 6, 9, 5), (6, 6, 8, 6), (6, 6, 9, 8), (6, 6, 3, 6), (6, 6, 2, 5), (6, 3, 3, 1), (6, 3, 9, 2), (6, 3, 8, 5), (6, 3, 9, 6), (6, 3, 3, 8), (6, 3, 2, 6), (8, 3, 2, 8), (8, 3, 3, 6), (8, 3, 9, 5), (8, 3, 8, 2), (8, 3, 9, 1), (8, 6, 2, 6), (8, 6, 3, 8), (8, 6, 9, 6), (8, 6, 8, 5), (8, 6, 9, 2), (8, 6, 3, 1), (8, 12, 2, 5), (8, 12, 3, 6), (8, 12, 9, 8), (8, 12, 8, 6), (8, 12, 9, 5), (8, 12, 3, 2), (8, 12, 2, 1), (8, 11, 2, 2), (8, 11, 3, 5), (8, 11, 9, 6), (8, 11, 8, 8), (8, 11, 9, 6), (8, 11, 3, 5), (8, 11, 2, 2), (8, 12, 2, 1), (8, 12, 3, 2), (8, 12, 9, 5), (8, 12, 8, 6), (8, 12, 9, 8), (8, 12, 3, 6), (8, 12, 2, 5), (8, 6, 3, 1), (8, 6, 9, 2), (8, 6, 8, 5), (8, 6, 9, 6), (8, 6, 3, 8), (8, 6, 2, 6), (8, 3, 9, 1), (8, 3, 8, 2), (8, 3, 9, 5), (8, 3, 3, 6), (8, 3, 2, 8), (6, 3, 2, 6), (6, 3, 3, 8), (6, 3, 9, 6), (6, 3, 8, 5), (6, 3, 9, 2), (6, 3, 3, 1), (6, 6, 2, 5), (6, 6, 3, 6), (6, 6, 9, 8), (6, 6, 8, 6), (6, 6, 9, 5), (6, 6, 3, 2), (6, 6, 2, 1), (6, 12, 2, 2), (6, 12, 3, 5), (6, 12, 9, 6), (6, 12, 8, 8), (6, 12, 9, 6), (6, 12, 3, 5), (6, 12, 2, 2), (6, 11, 2, 1), (6, 11, 3, 2), (6, 11, 9, 5), (6, 11, 8, 6), (6, 11, 9, 8), (6, 11, 3, 6), (6, 11, 2, 5), (6, 12, 3, 1), (6, 12, 9, 2), (6, 12, 8, 5), (6, 12, 9, 6), (6, 12, 3, 8), (6, 12, 2, 6), (6, 6, 9, 1), (6, 6, 8, 2), (6, 6, 9, 5), (6, 6, 3, 6), (6, 6, 2, 8), (5, 3, 2, 5), (5, 3, 3, 6), (5, 3, 9, 8), (5, 3, 8, 6), (5, 3, 9, 5), (5, 3, 3, 2), (5, 3, 2, 1), (5, 6, 2, 2), (5, 6, 3, 5), (5, 6, 9, 6), (5, 6, 8, 8), (5, 6, 9, 6), (5, 6, 3, 5), (5, 6, 2, 2), (5, 12, 2, 1), (5, 12, 3, 2), (5, 12, 9, 5), (5, 12, 8, 6), (5, 12, 9, 8), (5, 12, 3, 6), (5, 12, 2, 5), (5, 11, 3, 1), (5, 11, 9, 2), (5, 11, 8, 5), (5, 11, 9, 6), (5, 11, 3, 8), (5, 11, 2, 6), (5, 12, 9, 1), (5, 12, 8, 2), (5, 12, 9, 5), (5, 12, 3, 6), (5, 12, 2, 8), (2, 3, 2, 2), (2, 3, 3, 5), (2, 3, 9, 6), (2, 3, 8, 8), (2, 3, 9, 6), (2, 3, 3, 5), (2, 3, 2, 2), (2, 6, 2, 1), (2, 6, 3, 2), (2, 6, 9, 5), (2, 6, 8, 6), (2, 6, 9, 8), (2, 6, 3, 6), (2, 6, 2, 5), (2, 12, 3, 1), (2, 12, 9, 2), (2, 12, 8, 5), (2, 12, 9, 6), (2, 12, 3, 8), (2, 12, 2, 6), (2, 11, 9, 1), (2, 11, 8, 2), (2, 11, 9, 5), (2, 11, 3, 6), (2, 11, 2, 8), (1, 3, 2, 1), (1, 3, 3, 2), (1, 3, 9, 5), (1, 3, 8, 6), (1, 3, 9, 8), (1, 3, 3, 6), (1, 3, 2, 5), (1, 6, 3, 1), (1, 6, 9, 2), (1, 6, 8, 5), (1, 6, 9, 6), (1, 6, 3, 8), (1, 6, 2, 6), (1, 12, 9, 1), (1, 12, 8, 2), (1, 12, 9, 5), (1, 12, 3, 6), (1, 12, 2, 8)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_RD
    #
    # len 381872
    t2_data = np.random.randn(381872) + 1.0j * np.random.randn(381872)
    C2x2_RD= yast.load_from_dict(loc_c, {'_d': t2_data,\
        's': (-1, 1, 1, -1), 'n': (0,), 't': ((-4, -3, -3, -2), (-4, -3, -2, -1), (-4, -3, -1, 0), (-4, -3, 0, 1), (-4, -3, 1, 2), (-4, -3, 2, 3), (-4, -3, 3, 4), (-4, -2, -3, -1), (-4, -2, -2, 0), (-4, -2, -1, 1), (-4, -2, 0, 2), (-4, -2, 1, 3), (-4, -2, 2, 4), (-4, -1, -3, 0), (-4, -1, -2, 1), (-4, -1, -1, 2), (-4, -1, 0, 3), (-4, -1, 1, 4), (-3, -3, -3, -3), (-3, -3, -2, -2), (-3, -3, -1, -1), (-3, -3, 0, 0), (-3, -3, 1, 1), (-3, -3, 2, 2), (-3, -3, 3, 3), (-3, -2, -3, -2), (-3, -2, -2, -1), (-3, -2, -1, 0), (-3, -2, 0, 1), (-3, -2, 1, 2), (-3, -2, 2, 3), (-3, -2, 3, 4), (-3, -1, -3, -1), (-3, -1, -2, 0), (-3, -1, -1, 1), (-3, -1, 0, 2), (-3, -1, 1, 3), (-3, -1, 2, 4), (-3, 0, -3, 0), (-3, 0, -2, 1), (-3, 0, -1, 2), (-3, 0, 0, 3), (-3, 0, 1, 4), (-2, -3, -3, -4), (-2, -3, -2, -3), (-2, -3, -1, -2), (-2, -3, 0, -1), (-2, -3, 1, 0), (-2, -3, 2, 1), (-2, -3, 3, 2), (-2, -2, -3, -3), (-2, -2, -2, -2), (-2, -2, -1, -1), (-2, -2, 0, 0), (-2, -2, 1, 1), (-2, -2, 2, 2), (-2, -2, 3, 3), (-2, -1, -3, -2), (-2, -1, -2, -1), (-2, -1, -1, 0), (-2, -1, 0, 1), (-2, -1, 1, 2), (-2, -1, 2, 3), (-2, -1, 3, 4), (-2, 0, -3, -1), (-2, 0, -2, 0), (-2, 0, -1, 1), (-2, 0, 0, 2), (-2, 0, 1, 3), (-2, 0, 2, 4), (-2, 1, -3, 0), (-2, 1, -2, 1), (-2, 1, -1, 2), (-2, 1, 0, 3), (-2, 1, 1, 4), (-1, -3, -2, -4), (-1, -3, -1, -3), (-1, -3, 0, -2), (-1, -3, 1, -1), (-1, -3, 2, 0), (-1, -3, 3, 1), (-1, -2, -3, -4), (-1, -2, -2, -3), (-1, -2, -1, -2), (-1, -2, 0, -1), (-1, -2, 1, 0), (-1, -2, 2, 1), (-1, -2, 3, 2), (-1, -1, -3, -3), (-1, -1, -2, -2), (-1, -1, -1, -1), (-1, -1, 0, 0), (-1, -1, 1, 1), (-1, -1, 2, 2), (-1, -1, 3, 3), (-1, 0, -3, -2), (-1, 0, -2, -1), (-1, 0, -1, 0), (-1, 0, 0, 1), (-1, 0, 1, 2), (-1, 0, 2, 3), (-1, 0, 3, 4), (-1, 1, -3, -1), (-1, 1, -2, 0), (-1, 1, -1, 1), (-1, 1, 0, 2), (-1, 1, 1, 3), (-1, 1, 2, 4), (-1, 2, -3, 0), (-1, 2, -2, 1), (-1, 2, -1, 2), (-1, 2, 0, 3), (-1, 2, 1, 4), (0, -3, -1, -4), (0, -3, 0, -3), (0, -3, 1, -2), (0, -3, 2, -1), (0, -3, 3, 0), (0, -2, -2, -4), (0, -2, -1, -3), (0, -2, 0, -2), (0, -2, 1, -1), (0, -2, 2, 0), (0, -2, 3, 1), (0, -1, -3, -4), (0, -1, -2, -3), (0, -1, -1, -2), (0, -1, 0, -1), (0, -1, 1, 0), (0, -1, 2, 1), (0, -1, 3, 2), (0, 0, -3, -3), (0, 0, -2, -2), (0, 0, -1, -1), (0, 0, 0, 0), (0, 0, 1, 1), (0, 0, 2, 2), (0, 0, 3, 3), (0, 1, -3, -2), (0, 1, -2, -1), (0, 1, -1, 0), (0, 1, 0, 1), (0, 1, 1, 2), (0, 1, 2, 3), (0, 1, 3, 4), (0, 2, -3, -1), (0, 2, -2, 0), (0, 2, -1, 1), (0, 2, 0, 2), (0, 2, 1, 3), (0, 2, 2, 4), (0, 3, -3, 0), (0, 3, -2, 1), (0, 3, -1, 2), (0, 3, 0, 3), (0, 3, 1, 4), (1, -2, -1, -4), (1, -2, 0, -3), (1, -2, 1, -2), (1, -2, 2, -1), (1, -2, 3, 0), (1, -1, -2, -4), (1, -1, -1, -3), (1, -1, 0, -2), (1, -1, 1, -1), (1, -1, 2, 0), (1, -1, 3, 1), (1, 0, -3, -4), (1, 0, -2, -3), (1, 0, -1, -2), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 2, 1), (1, 0, 3, 2), (1, 1, -3, -3), (1, 1, -2, -2), (1, 1, -1, -1), (1, 1, 0, 0), (1, 1, 1, 1), (1, 1, 2, 2), (1, 1, 3, 3), (1, 2, -3, -2), (1, 2, -2, -1), (1, 2, -1, 0), (1, 2, 0, 1), (1, 2, 1, 2), (1, 2, 2, 3), (1, 2, 3, 4), (1, 3, -3, -1), (1, 3, -2, 0), (1, 3, -1, 1), (1, 3, 0, 2), (1, 3, 1, 3), (1, 3, 2, 4), (2, -1, -1, -4), (2, -1, 0, -3), (2, -1, 1, -2), (2, -1, 2, -1), (2, -1, 3, 0), (2, 0, -2, -4), (2, 0, -1, -3), (2, 0, 0, -2), (2, 0, 1, -1), (2, 0, 2, 0), (2, 0, 3, 1), (2, 1, -3, -4), (2, 1, -2, -3), (2, 1, -1, -2), (2, 1, 0, -1), (2, 1, 1, 0), (2, 1, 2, 1), (2, 1, 3, 2), (2, 2, -3, -3), (2, 2, -2, -2), (2, 2, -1, -1), (2, 2, 0, 0), (2, 2, 1, 1), (2, 2, 2, 2), (2, 2, 3, 3), (2, 3, -3, -2), (2, 3, -2, -1), (2, 3, -1, 0), (2, 3, 0, 1), (2, 3, 1, 2), (2, 3, 2, 3), (2, 3, 3, 4), (3, 0, -1, -4), (3, 0, 0, -3), (3, 0, 1, -2), (3, 0, 2, -1), (3, 0, 3, 0), (3, 1, -2, -4), (3, 1, -1, -3), (3, 1, 0, -2), (3, 1, 1, -1), (3, 1, 2, 0), (3, 1, 3, 1), (3, 2, -3, -4), (3, 2, -2, -3), (3, 2, -1, -2), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 2, 1), (3, 2, 3, 2), (3, 3, -3, -3), (3, 3, -2, -2), (3, 3, -1, -1), (3, 3, 0, 0), (3, 3, 1, 1), (3, 3, 2, 2), (3, 3, 3, 3), (4, 1, -1, -4), (4, 1, 0, -3), (4, 1, 1, -2), (4, 1, 2, -1), (4, 1, 3, 0), (4, 2, -2, -4), (4, 2, -1, -3), (4, 2, 0, -2), (4, 2, 1, -1), (4, 2, 2, 0), (4, 2, 3, 1), (4, 3, -3, -4), (4, 3, -2, -3), (4, 3, -1, -2), (4, 3, 0, -1), (4, 3, 1, 0), (4, 3, 2, 1), (4, 3, 3, 2)), 'D': ((1, 2, 3, 5), (1, 2, 6, 6), (1, 2, 12, 8), (1, 2, 11, 6), (1, 2, 12, 5), (1, 2, 6, 2), (1, 2, 3, 1), (1, 5, 3, 6), (1, 5, 6, 8), (1, 5, 12, 6), (1, 5, 11, 5), (1, 5, 12, 2), (1, 5, 6, 1), (1, 12, 3, 8), (1, 12, 6, 6), (1, 12, 12, 5), (1, 12, 11, 2), (1, 12, 12, 1), (2, 2, 3, 2), (2, 2, 6, 5), (2, 2, 12, 6), (2, 2, 11, 8), (2, 2, 12, 6), (2, 2, 6, 5), (2, 2, 3, 2), (2, 5, 3, 5), (2, 5, 6, 6), (2, 5, 12, 8), (2, 5, 11, 6), (2, 5, 12, 5), (2, 5, 6, 2), (2, 5, 3, 1), (2, 12, 3, 6), (2, 12, 6, 8), (2, 12, 12, 6), (2, 12, 11, 5), (2, 12, 12, 2), (2, 12, 6, 1), (2, 11, 3, 8), (2, 11, 6, 6), (2, 11, 12, 5), (2, 11, 11, 2), (2, 11, 12, 1), (5, 2, 3, 1), (5, 2, 6, 2), (5, 2, 12, 5), (5, 2, 11, 6), (5, 2, 12, 8), (5, 2, 6, 6), (5, 2, 3, 5), (5, 5, 3, 2), (5, 5, 6, 5), (5, 5, 12, 6), (5, 5, 11, 8), (5, 5, 12, 6), (5, 5, 6, 5), (5, 5, 3, 2), (5, 12, 3, 5), (5, 12, 6, 6), (5, 12, 12, 8), (5, 12, 11, 6), (5, 12, 12, 5), (5, 12, 6, 2), (5, 12, 3, 1), (5, 11, 3, 6), (5, 11, 6, 8), (5, 11, 12, 6), (5, 11, 11, 5), (5, 11, 12, 2), (5, 11, 6, 1), (5, 12, 3, 8), (5, 12, 6, 6), (5, 12, 12, 5), (5, 12, 11, 2), (5, 12, 12, 1), (6, 2, 6, 1), (6, 2, 12, 2), (6, 2, 11, 5), (6, 2, 12, 6), (6, 2, 6, 8), (6, 2, 3, 6), (6, 5, 3, 1), (6, 5, 6, 2), (6, 5, 12, 5), (6, 5, 11, 6), (6, 5, 12, 8), (6, 5, 6, 6), (6, 5, 3, 5), (6, 12, 3, 2), (6, 12, 6, 5), (6, 12, 12, 6), (6, 12, 11, 8), (6, 12, 12, 6), (6, 12, 6, 5), (6, 12, 3, 2), (6, 11, 3, 5), (6, 11, 6, 6), (6, 11, 12, 8), (6, 11, 11, 6), (6, 11, 12, 5), (6, 11, 6, 2), (6, 11, 3, 1), (6, 12, 3, 6), (6, 12, 6, 8), (6, 12, 12, 6), (6, 12, 11, 5), (6, 12, 12, 2), (6, 12, 6, 1), (6, 5, 3, 8), (6, 5, 6, 6), (6, 5, 12, 5), (6, 5, 11, 2), (6, 5, 12, 1), (8, 2, 12, 1), (8, 2, 11, 2), (8, 2, 12, 5), (8, 2, 6, 6), (8, 2, 3, 8), (8, 5, 6, 1), (8, 5, 12, 2), (8, 5, 11, 5), (8, 5, 12, 6), (8, 5, 6, 8), (8, 5, 3, 6), (8, 12, 3, 1), (8, 12, 6, 2), (8, 12, 12, 5), (8, 12, 11, 6), (8, 12, 12, 8), (8, 12, 6, 6), (8, 12, 3, 5), (8, 11, 3, 2), (8, 11, 6, 5), (8, 11, 12, 6), (8, 11, 11, 8), (8, 11, 12, 6), (8, 11, 6, 5), (8, 11, 3, 2), (8, 12, 3, 5), (8, 12, 6, 6), (8, 12, 12, 8), (8, 12, 11, 6), (8, 12, 12, 5), (8, 12, 6, 2), (8, 12, 3, 1), (8, 5, 3, 6), (8, 5, 6, 8), (8, 5, 12, 6), (8, 5, 11, 5), (8, 5, 12, 2), (8, 5, 6, 1), (8, 2, 3, 8), (8, 2, 6, 6), (8, 2, 12, 5), (8, 2, 11, 2), (8, 2, 12, 1), (6, 5, 12, 1), (6, 5, 11, 2), (6, 5, 12, 5), (6, 5, 6, 6), (6, 5, 3, 8), (6, 12, 6, 1), (6, 12, 12, 2), (6, 12, 11, 5), (6, 12, 12, 6), (6, 12, 6, 8), (6, 12, 3, 6), (6, 11, 3, 1), (6, 11, 6, 2), (6, 11, 12, 5), (6, 11, 11, 6), (6, 11, 12, 8), (6, 11, 6, 6), (6, 11, 3, 5), (6, 12, 3, 2), (6, 12, 6, 5), (6, 12, 12, 6), (6, 12, 11, 8), (6, 12, 12, 6), (6, 12, 6, 5), (6, 12, 3, 2), (6, 5, 3, 5), (6, 5, 6, 6), (6, 5, 12, 8), (6, 5, 11, 6), (6, 5, 12, 5), (6, 5, 6, 2), (6, 5, 3, 1), (6, 2, 3, 6), (6, 2, 6, 8), (6, 2, 12, 6), (6, 2, 11, 5), (6, 2, 12, 2), (6, 2, 6, 1), (5, 12, 12, 1), (5, 12, 11, 2), (5, 12, 12, 5), (5, 12, 6, 6), (5, 12, 3, 8), (5, 11, 6, 1), (5, 11, 12, 2), (5, 11, 11, 5), (5, 11, 12, 6), (5, 11, 6, 8), (5, 11, 3, 6), (5, 12, 3, 1), (5, 12, 6, 2), (5, 12, 12, 5), (5, 12, 11, 6), (5, 12, 12, 8), (5, 12, 6, 6), (5, 12, 3, 5), (5, 5, 3, 2), (5, 5, 6, 5), (5, 5, 12, 6), (5, 5, 11, 8), (5, 5, 12, 6), (5, 5, 6, 5), (5, 5, 3, 2), (5, 2, 3, 5), (5, 2, 6, 6), (5, 2, 12, 8), (5, 2, 11, 6), (5, 2, 12, 5), (5, 2, 6, 2), (5, 2, 3, 1), (2, 11, 12, 1), (2, 11, 11, 2), (2, 11, 12, 5), (2, 11, 6, 6), (2, 11, 3, 8), (2, 12, 6, 1), (2, 12, 12, 2), (2, 12, 11, 5), (2, 12, 12, 6), (2, 12, 6, 8), (2, 12, 3, 6), (2, 5, 3, 1), (2, 5, 6, 2), (2, 5, 12, 5), (2, 5, 11, 6), (2, 5, 12, 8), (2, 5, 6, 6), (2, 5, 3, 5), (2, 2, 3, 2), (2, 2, 6, 5), (2, 2, 12, 6), (2, 2, 11, 8), (2, 2, 12, 6), (2, 2, 6, 5), (2, 2, 3, 2), (1, 12, 12, 1), (1, 12, 11, 2), (1, 12, 12, 5), (1, 12, 6, 6), (1, 12, 3, 8), (1, 5, 6, 1), (1, 5, 12, 2), (1, 5, 11, 5), (1, 5, 12, 6), (1, 5, 6, 8), (1, 5, 3, 6), (1, 2, 3, 1), (1, 2, 6, 2), (1, 2, 12, 5), (1, 2, 11, 6), (1, 2, 12, 8), (1, 2, 6, 6), (1, 2, 3, 5)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_LD
    #
    # len 337056
    t3_data = np.random.randn(337056) + 1.0j * np.random.randn(337056)
    C2x2_LD= yast.load_from_dict(loc_c, {'_d': t3_data,\
        's': (1, 1, -1, -1), 'n': (0,), 't': ((-3, 0, -4, 1), (-3, 0, -3, 0), (-3, 0, -2, -1), (-3, 0, -1, -2), (-3, 0, 0, -3), (-3, 1, -4, 2), (-3, 1, -3, 1), (-3, 1, -2, 0), (-3, 1, -1, -1), (-3, 1, 0, -2), (-3, 1, 1, -3), (-3, 2, -4, 3), (-3, 2, -3, 2), (-3, 2, -2, 1), (-3, 2, -1, 0), (-3, 2, 0, -1), (-3, 2, 1, -2), (-3, 2, 2, -3), (-3, 3, -3, 3), (-3, 3, -2, 2), (-3, 3, -1, 1), (-3, 3, 0, 0), (-3, 3, 1, -1), (-3, 3, 2, -2), (-3, 3, 3, -3), (-3, 4, -2, 3), (-3, 4, -1, 2), (-3, 4, 0, 1), (-3, 4, 1, 0), (-3, 4, 2, -1), (-3, 4, 3, -2), (-3, 4, 4, -3), (-2, -1, -4, 1), (-2, -1, -3, 0), (-2, -1, -2, -1), (-2, -1, -1, -2), (-2, -1, 0, -3), (-2, 0, -4, 2), (-2, 0, -3, 1), (-2, 0, -2, 0), (-2, 0, -1, -1), (-2, 0, 0, -2), (-2, 0, 1, -3), (-2, 1, -4, 3), (-2, 1, -3, 2), (-2, 1, -2, 1), (-2, 1, -1, 0), (-2, 1, 0, -1), (-2, 1, 1, -2), (-2, 1, 2, -3), (-2, 2, -3, 3), (-2, 2, -2, 2), (-2, 2, -1, 1), (-2, 2, 0, 0), (-2, 2, 1, -1), (-2, 2, 2, -2), (-2, 2, 3, -3), (-2, 3, -2, 3), (-2, 3, -1, 2), (-2, 3, 0, 1), (-2, 3, 1, 0), (-2, 3, 2, -1), (-2, 3, 3, -2), (-2, 3, 4, -3), (-2, 4, -1, 3), (-2, 4, 0, 2), (-2, 4, 1, 1), (-2, 4, 2, 0), (-2, 4, 3, -1), (-2, 4, 4, -2), (-1, -2, -4, 1), (-1, -2, -3, 0), (-1, -2, -2, -1), (-1, -2, -1, -2), (-1, -2, 0, -3), (-1, -1, -4, 2), (-1, -1, -3, 1), (-1, -1, -2, 0), (-1, -1, -1, -1), (-1, -1, 0, -2), (-1, -1, 1, -3), (-1, 0, -4, 3), (-1, 0, -3, 2), (-1, 0, -2, 1), (-1, 0, -1, 0), (-1, 0, 0, -1), (-1, 0, 1, -2), (-1, 0, 2, -3), (-1, 1, -3, 3), (-1, 1, -2, 2), (-1, 1, -1, 1), (-1, 1, 0, 0), (-1, 1, 1, -1), (-1, 1, 2, -2), (-1, 1, 3, -3), (-1, 2, -2, 3), (-1, 2, -1, 2), (-1, 2, 0, 1), (-1, 2, 1, 0), (-1, 2, 2, -1), (-1, 2, 3, -2), (-1, 2, 4, -3), (-1, 3, -1, 3), (-1, 3, 0, 2), (-1, 3, 1, 1), (-1, 3, 2, 0), (-1, 3, 3, -1), (-1, 3, 4, -2), (-1, 4, 0, 3), (-1, 4, 1, 2), (-1, 4, 2, 1), (-1, 4, 3, 0), (-1, 4, 4, -1), (0, -3, -4, 1), (0, -3, -3, 0), (0, -3, -2, -1), (0, -3, -1, -2), (0, -3, 0, -3), (0, -2, -4, 2), (0, -2, -3, 1), (0, -2, -2, 0), (0, -2, -1, -1), (0, -2, 0, -2), (0, -2, 1, -3), (0, -1, -4, 3), (0, -1, -3, 2), (0, -1, -2, 1), (0, -1, -1, 0), (0, -1, 0, -1), (0, -1, 1, -2), (0, -1, 2, -3), (0, 0, -3, 3), (0, 0, -2, 2), (0, 0, -1, 1), (0, 0, 0, 0), (0, 0, 1, -1), (0, 0, 2, -2), (0, 0, 3, -3), (0, 1, -2, 3), (0, 1, -1, 2), (0, 1, 0, 1), (0, 1, 1, 0), (0, 1, 2, -1), (0, 1, 3, -2), (0, 1, 4, -3), (0, 2, -1, 3), (0, 2, 0, 2), (0, 2, 1, 1), (0, 2, 2, 0), (0, 2, 3, -1), (0, 2, 4, -2), (0, 3, 0, 3), (0, 3, 1, 2), (0, 3, 2, 1), (0, 3, 3, 0), (0, 3, 4, -1), (1, -4, -4, 1), (1, -4, -3, 0), (1, -4, -2, -1), (1, -4, -1, -2), (1, -4, 0, -3), (1, -3, -4, 2), (1, -3, -3, 1), (1, -3, -2, 0), (1, -3, -1, -1), (1, -3, 0, -2), (1, -3, 1, -3), (1, -2, -4, 3), (1, -2, -3, 2), (1, -2, -2, 1), (1, -2, -1, 0), (1, -2, 0, -1), (1, -2, 1, -2), (1, -2, 2, -3), (1, -1, -3, 3), (1, -1, -2, 2), (1, -1, -1, 1), (1, -1, 0, 0), (1, -1, 1, -1), (1, -1, 2, -2), (1, -1, 3, -3), (1, 0, -2, 3), (1, 0, -1, 2), (1, 0, 0, 1), (1, 0, 1, 0), (1, 0, 2, -1), (1, 0, 3, -2), (1, 0, 4, -3), (1, 1, -1, 3), (1, 1, 0, 2), (1, 1, 1, 1), (1, 1, 2, 0), (1, 1, 3, -1), (1, 1, 4, -2), (1, 2, 0, 3), (1, 2, 1, 2), (1, 2, 2, 1), (1, 2, 3, 0), (1, 2, 4, -1), (2, -4, -4, 2), (2, -4, -3, 1), (2, -4, -2, 0), (2, -4, -1, -1), (2, -4, 0, -2), (2, -4, 1, -3), (2, -3, -4, 3), (2, -3, -3, 2), (2, -3, -2, 1), (2, -3, -1, 0), (2, -3, 0, -1), (2, -3, 1, -2), (2, -3, 2, -3), (2, -2, -3, 3), (2, -2, -2, 2), (2, -2, -1, 1), (2, -2, 0, 0), (2, -2, 1, -1), (2, -2, 2, -2), (2, -2, 3, -3), (2, -1, -2, 3), (2, -1, -1, 2), (2, -1, 0, 1), (2, -1, 1, 0), (2, -1, 2, -1), (2, -1, 3, -2), (2, -1, 4, -3), (2, 0, -1, 3), (2, 0, 0, 2), (2, 0, 1, 1), (2, 0, 2, 0), (2, 0, 3, -1), (2, 0, 4, -2), (2, 1, 0, 3), (2, 1, 1, 2), (2, 1, 2, 1), (2, 1, 3, 0), (2, 1, 4, -1), (3, -4, -4, 3), (3, -4, -3, 2), (3, -4, -2, 1), (3, -4, -1, 0), (3, -4, 0, -1), (3, -4, 1, -2), (3, -4, 2, -3), (3, -3, -3, 3), (3, -3, -2, 2), (3, -3, -1, 1), (3, -3, 0, 0), (3, -3, 1, -1), (3, -3, 2, -2), (3, -3, 3, -3), (3, -2, -2, 3), (3, -2, -1, 2), (3, -2, 0, 1), (3, -2, 1, 0), (3, -2, 2, -1), (3, -2, 3, -2), (3, -2, 4, -3), (3, -1, -1, 3), (3, -1, 0, 2), (3, -1, 1, 1), (3, -1, 2, 0), (3, -1, 3, -1), (3, -1, 4, -2), (3, 0, 0, 3), (3, 0, 1, 2), (3, 0, 2, 1), (3, 0, 3, 0), (3, 0, 4, -1)), 'D': ((3, 8, 1, 12), (3, 8, 2, 11), (3, 8, 5, 12), (3, 8, 6, 5), (3, 8, 8, 2), (3, 6, 1, 5), (3, 6, 2, 12), (3, 6, 5, 11), (3, 6, 6, 12), (3, 6, 8, 5), (3, 6, 6, 2), (3, 5, 1, 2), (3, 5, 2, 5), (3, 5, 5, 12), (3, 5, 6, 11), (3, 5, 8, 12), (3, 5, 6, 5), (3, 5, 5, 2), (3, 2, 2, 2), (3, 2, 5, 5), (3, 2, 6, 12), (3, 2, 8, 11), (3, 2, 6, 12), (3, 2, 5, 5), (3, 2, 2, 2), (3, 1, 5, 2), (3, 1, 6, 5), (3, 1, 8, 12), (3, 1, 6, 11), (3, 1, 5, 12), (3, 1, 2, 5), (3, 1, 1, 2), (5, 6, 1, 12), (5, 6, 2, 11), (5, 6, 5, 12), (5, 6, 6, 5), (5, 6, 8, 2), (5, 8, 1, 5), (5, 8, 2, 12), (5, 8, 5, 11), (5, 8, 6, 12), (5, 8, 8, 5), (5, 8, 6, 2), (5, 6, 1, 2), (5, 6, 2, 5), (5, 6, 5, 12), (5, 6, 6, 11), (5, 6, 8, 12), (5, 6, 6, 5), (5, 6, 5, 2), (5, 5, 2, 2), (5, 5, 5, 5), (5, 5, 6, 12), (5, 5, 8, 11), (5, 5, 6, 12), (5, 5, 5, 5), (5, 5, 2, 2), (5, 2, 5, 2), (5, 2, 6, 5), (5, 2, 8, 12), (5, 2, 6, 11), (5, 2, 5, 12), (5, 2, 2, 5), (5, 2, 1, 2), (5, 1, 6, 2), (5, 1, 8, 5), (5, 1, 6, 12), (5, 1, 5, 11), (5, 1, 2, 12), (5, 1, 1, 5), (11, 5, 1, 12), (11, 5, 2, 11), (11, 5, 5, 12), (11, 5, 6, 5), (11, 5, 8, 2), (11, 6, 1, 5), (11, 6, 2, 12), (11, 6, 5, 11), (11, 6, 6, 12), (11, 6, 8, 5), (11, 6, 6, 2), (11, 8, 1, 2), (11, 8, 2, 5), (11, 8, 5, 12), (11, 8, 6, 11), (11, 8, 8, 12), (11, 8, 6, 5), (11, 8, 5, 2), (11, 6, 2, 2), (11, 6, 5, 5), (11, 6, 6, 12), (11, 6, 8, 11), (11, 6, 6, 12), (11, 6, 5, 5), (11, 6, 2, 2), (11, 5, 5, 2), (11, 5, 6, 5), (11, 5, 8, 12), (11, 5, 6, 11), (11, 5, 5, 12), (11, 5, 2, 5), (11, 5, 1, 2), (11, 2, 6, 2), (11, 2, 8, 5), (11, 2, 6, 12), (11, 2, 5, 11), (11, 2, 2, 12), (11, 2, 1, 5), (11, 1, 8, 2), (11, 1, 6, 5), (11, 1, 5, 12), (11, 1, 2, 11), (11, 1, 1, 12), (9, 2, 1, 12), (9, 2, 2, 11), (9, 2, 5, 12), (9, 2, 6, 5), (9, 2, 8, 2), (9, 5, 1, 5), (9, 5, 2, 12), (9, 5, 5, 11), (9, 5, 6, 12), (9, 5, 8, 5), (9, 5, 6, 2), (9, 6, 1, 2), (9, 6, 2, 5), (9, 6, 5, 12), (9, 6, 6, 11), (9, 6, 8, 12), (9, 6, 6, 5), (9, 6, 5, 2), (9, 8, 2, 2), (9, 8, 5, 5), (9, 8, 6, 12), (9, 8, 8, 11), (9, 8, 6, 12), (9, 8, 5, 5), (9, 8, 2, 2), (9, 6, 5, 2), (9, 6, 6, 5), (9, 6, 8, 12), (9, 6, 6, 11), (9, 6, 5, 12), (9, 6, 2, 5), (9, 6, 1, 2), (9, 5, 6, 2), (9, 5, 8, 5), (9, 5, 6, 12), (9, 5, 5, 11), (9, 5, 2, 12), (9, 5, 1, 5), (9, 2, 8, 2), (9, 2, 6, 5), (9, 2, 5, 12), (9, 2, 2, 11), (9, 2, 1, 12), (11, 1, 1, 12), (11, 1, 2, 11), (11, 1, 5, 12), (11, 1, 6, 5), (11, 1, 8, 2), (11, 2, 1, 5), (11, 2, 2, 12), (11, 2, 5, 11), (11, 2, 6, 12), (11, 2, 8, 5), (11, 2, 6, 2), (11, 5, 1, 2), (11, 5, 2, 5), (11, 5, 5, 12), (11, 5, 6, 11), (11, 5, 8, 12), (11, 5, 6, 5), (11, 5, 5, 2), (11, 6, 2, 2), (11, 6, 5, 5), (11, 6, 6, 12), (11, 6, 8, 11), (11, 6, 6, 12), (11, 6, 5, 5), (11, 6, 2, 2), (11, 8, 5, 2), (11, 8, 6, 5), (11, 8, 8, 12), (11, 8, 6, 11), (11, 8, 5, 12), (11, 8, 2, 5), (11, 8, 1, 2), (11, 6, 6, 2), (11, 6, 8, 5), (11, 6, 6, 12), (11, 6, 5, 11), (11, 6, 2, 12), (11, 6, 1, 5), (11, 5, 8, 2), (11, 5, 6, 5), (11, 5, 5, 12), (11, 5, 2, 11), (11, 5, 1, 12), (5, 1, 1, 5), (5, 1, 2, 12), (5, 1, 5, 11), (5, 1, 6, 12), (5, 1, 8, 5), (5, 1, 6, 2), (5, 2, 1, 2), (5, 2, 2, 5), (5, 2, 5, 12), (5, 2, 6, 11), (5, 2, 8, 12), (5, 2, 6, 5), (5, 2, 5, 2), (5, 5, 2, 2), (5, 5, 5, 5), (5, 5, 6, 12), (5, 5, 8, 11), (5, 5, 6, 12), (5, 5, 5, 5), (5, 5, 2, 2), (5, 6, 5, 2), (5, 6, 6, 5), (5, 6, 8, 12), (5, 6, 6, 11), (5, 6, 5, 12), (5, 6, 2, 5), (5, 6, 1, 2), (5, 8, 6, 2), (5, 8, 8, 5), (5, 8, 6, 12), (5, 8, 5, 11), (5, 8, 2, 12), (5, 8, 1, 5), (5, 6, 8, 2), (5, 6, 6, 5), (5, 6, 5, 12), (5, 6, 2, 11), (5, 6, 1, 12), (3, 1, 1, 2), (3, 1, 2, 5), (3, 1, 5, 12), (3, 1, 6, 11), (3, 1, 8, 12), (3, 1, 6, 5), (3, 1, 5, 2), (3, 2, 2, 2), (3, 2, 5, 5), (3, 2, 6, 12), (3, 2, 8, 11), (3, 2, 6, 12), (3, 2, 5, 5), (3, 2, 2, 2), (3, 5, 5, 2), (3, 5, 6, 5), (3, 5, 8, 12), (3, 5, 6, 11), (3, 5, 5, 12), (3, 5, 2, 5), (3, 5, 1, 2), (3, 6, 6, 2), (3, 6, 8, 5), (3, 6, 6, 12), (3, 6, 5, 11), (3, 6, 2, 12), (3, 6, 1, 5), (3, 8, 8, 2), (3, 8, 6, 5), (3, 8, 5, 12), (3, 8, 2, 11), (3, 8, 1, 12)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}], 'SYM_ID': 'U(1)', 'fermionic': False})

    tA_data = np.random.randn(1160) + 1.0j * np.random.randn(1160)
    A= yast.load_from_dict(loc_c, {'_d': tA_data,\
        's': (-1, -1, -1, 1, 1), 'n': (0,), 't': ((-3, -2, 1, -2, -2), (-3, -2, 2, -2, -1), (-3, -2, 2, -1, -2), (-3, -1, 0, -2, -2), (-3, -1, 1, -2, -1), (-3, -1, 1, -1, -2), (-3, -1, 2, -2, 0), (-3, -1, 2, -1, -1), (-3, -1, 2, 0, -2), (-3, 0, -1, -2, -2), (-3, 0, 0, -2, -1), (-3, 0, 0, -1, -2), (-3, 0, 1, -2, 0), (-3, 0, 1, -1, -1), (-3, 0, 1, 0, -2), (-3, 0, 2, -2, 1), (-3, 0, 2, -1, 0), (-3, 0, 2, 0, -1), (-3, 0, 2, 1, -2), (-3, 1, -2, -2, -2), (-3, 1, -1, -2, -1), (-3, 1, -1, -1, -2), (-3, 1, 0, -2, 0), (-3, 1, 0, -1, -1), (-3, 1, 0, 0, -2), (-3, 1, 1, -2, 1), (-3, 1, 1, -1, 0), (-3, 1, 1, 0, -1), (-3, 1, 1, 1, -2), (-3, 2, -2, -2, -1), (-3, 2, -2, -1, -2), (-3, 2, -1, -2, 0), (-3, 2, -1, -1, -1), (-3, 2, -1, 0, -2), (-3, 2, 0, -2, 1), (-3, 2, 0, -1, 0), (-3, 2, 0, 0, -1), (-3, 2, 0, 1, -2), (-1, -2, 0, -2, -1), (-1, -2, 0, -1, -2), (-1, -2, 1, -2, 0), (-1, -2, 1, -1, -1), (-1, -2, 1, 0, -2), (-1, -2, 2, -2, 1), (-1, -2, 2, -1, 0), (-1, -2, 2, 0, -1), (-1, -2, 2, 1, -2), (-1, -1, -1, -2, -1), (-1, -1, -1, -1, -2), (-1, -1, 0, -2, 0), (-1, -1, 0, -1, -1), (-1, -1, 0, 0, -2), (-1, -1, 1, -2, 1), (-1, -1, 1, -1, 0), (-1, -1, 1, 0, -1), (-1, -1, 1, 1, -2), (-1, -1, 2, -2, 2), (-1, -1, 2, -1, 1), (-1, -1, 2, 0, 0), (-1, -1, 2, 1, -1), (-1, -1, 2, 2, -2), (-1, 0, -2, -2, -1), (-1, 0, -2, -1, -2), (-1, 0, -1, -2, 0), (-1, 0, -1, -1, -1), (-1, 0, -1, 0, -2), (-1, 0, 0, -2, 1), (-1, 0, 0, -1, 0), (-1, 0, 0, 0, -1), (-1, 0, 0, 1, -2), (-1, 0, 1, -2, 2), (-1, 0, 1, -1, 1), (-1, 0, 1, 0, 0), (-1, 0, 1, 1, -1), (-1, 0, 1, 2, -2), (-1, 0, 2, -1, 2), (-1, 0, 2, 0, 1), (-1, 0, 2, 1, 0), (-1, 0, 2, 2, -1), (-1, 1, -2, -2, 0), (-1, 1, -2, -1, -1), (-1, 1, -2, 0, -2), (-1, 1, -1, -2, 1), (-1, 1, -1, -1, 0), (-1, 1, -1, 0, -1), (-1, 1, -1, 1, -2), (-1, 1, 0, -2, 2), (-1, 1, 0, -1, 1), (-1, 1, 0, 0, 0), (-1, 1, 0, 1, -1), (-1, 1, 0, 2, -2), (-1, 1, 1, -1, 2), (-1, 1, 1, 0, 1), (-1, 1, 1, 1, 0), (-1, 1, 1, 2, -1), (-1, 2, -2, -2, 1), (-1, 2, -2, -1, 0), (-1, 2, -2, 0, -1), (-1, 2, -2, 1, -2), (-1, 2, -1, -2, 2), (-1, 2, -1, -1, 1), (-1, 2, -1, 0, 0), (-1, 2, -1, 1, -1), (-1, 2, -1, 2, -2), (-1, 2, 0, -1, 2), (-1, 2, 0, 0, 1), (-1, 2, 0, 1, 0), (-1, 2, 0, 2, -1), (1, -2, 0, -2, 1), (1, -2, 0, -1, 0), (1, -2, 0, 0, -1), (1, -2, 0, 1, -2), (1, -2, 1, -2, 2), (1, -2, 1, -1, 1), (1, -2, 1, 0, 0), (1, -2, 1, 1, -1), (1, -2, 1, 2, -2), (1, -2, 2, -1, 2), (1, -2, 2, 0, 1), (1, -2, 2, 1, 0), (1, -2, 2, 2, -1), (1, -1, -1, -2, 1), (1, -1, -1, -1, 0), (1, -1, -1, 0, -1), (1, -1, -1, 1, -2), (1, -1, 0, -2, 2), (1, -1, 0, -1, 1), (1, -1, 0, 0, 0), (1, -1, 0, 1, -1), (1, -1, 0, 2, -2), (1, -1, 1, -1, 2), (1, -1, 1, 0, 1), (1, -1, 1, 1, 0), (1, -1, 1, 2, -1), (1, -1, 2, 0, 2), (1, -1, 2, 1, 1), (1, -1, 2, 2, 0), (1, 0, -2, -2, 1), (1, 0, -2, -1, 0), (1, 0, -2, 0, -1), (1, 0, -2, 1, -2), (1, 0, -1, -2, 2), (1, 0, -1, -1, 1), (1, 0, -1, 0, 0), (1, 0, -1, 1, -1), (1, 0, -1, 2, -2), (1, 0, 0, -1, 2), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 2, -1), (1, 0, 1, 0, 2), (1, 0, 1, 1, 1), (1, 0, 1, 2, 0), (1, 0, 2, 1, 2), (1, 0, 2, 2, 1), (1, 1, -2, -2, 2), (1, 1, -2, -1, 1), (1, 1, -2, 0, 0), (1, 1, -2, 1, -1), (1, 1, -2, 2, -2), (1, 1, -1, -1, 2), (1, 1, -1, 0, 1), (1, 1, -1, 1, 0), (1, 1, -1, 2, -1), (1, 1, 0, 0, 2), (1, 1, 0, 1, 1), (1, 1, 0, 2, 0), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 2, -2, -1, 2), (1, 2, -2, 0, 1), (1, 2, -2, 1, 0), (1, 2, -2, 2, -1), (1, 2, -1, 0, 2), (1, 2, -1, 1, 1), (1, 2, -1, 2, 0), (1, 2, 0, 1, 2), (1, 2, 0, 2, 1), (3, -2, 0, -1, 2), (3, -2, 0, 0, 1), (3, -2, 0, 1, 0), (3, -2, 0, 2, -1), (3, -2, 1, 0, 2), (3, -2, 1, 1, 1), (3, -2, 1, 2, 0), (3, -2, 2, 1, 2), (3, -2, 2, 2, 1), (3, -1, -1, -1, 2), (3, -1, -1, 0, 1), (3, -1, -1, 1, 0), (3, -1, -1, 2, -1), (3, -1, 0, 0, 2), (3, -1, 0, 1, 1), (3, -1, 0, 2, 0), (3, -1, 1, 1, 2), (3, -1, 1, 2, 1), (3, -1, 2, 2, 2), (3, 0, -2, -1, 2), (3, 0, -2, 0, 1), (3, 0, -2, 1, 0), (3, 0, -2, 2, -1), (3, 0, -1, 0, 2), (3, 0, -1, 1, 1), (3, 0, -1, 2, 0), (3, 0, 0, 1, 2), (3, 0, 0, 2, 1), (3, 0, 1, 2, 2), (3, 1, -2, 0, 2), (3, 1, -2, 1, 1), (3, 1, -2, 2, 0), (3, 1, -1, 1, 2), (3, 1, -1, 2, 1), (3, 1, 0, 2, 2), (3, 2, -2, 1, 2), (3, 2, -2, 2, 1), (3, 2, -1, 2, 2)), 'D': ((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 2, 1, 1), (3, 2, 2, 1, 2), (3, 2, 2, 2, 1), (3, 2, 2, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 2, 1, 1), (3, 2, 2, 2, 1), (3, 2, 2, 1, 2), (3, 2, 2, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,), (1,)), 'hfs': [{'tree': (3, 1, 1, 1), 'op': 'pooo', 's': (-1, -1, -1, -1), 't': (((-1,), (1,)), ((-1,), (1,)), ((-1,), (1,))), 'D': ((1, 1), (1, 1), (1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}], 'SYM_ID': 'U(1)', 'fermionic': False})

    B= A.clone()
    C= A.clone()
    B._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)
    C._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)
    def loss_fn(params):
        print(f"params {params[0].item()} {params[1].item()}")
        pA= A + params[0]*B + params[1]*C

        a= pA.tensordot(pA,([0],[0]),conj=(0,1))
        a= a.fuse_legs(axes=((0,4),(1,5),(2,6),(3,7)))

        # C----------T1--1->0(-)
        # |          0
        # |          0
        # T2--3 1----a--3(+)
        # 2->1(-) (+)2\...
        C2x2_LUx = yast.tensordot(C2x2_LU, a, ([0, 3], [0, 1]))
        C2x2_LUx = C2x2_LUx.fuse_legs(axes=((1,2),(0,3)))

        # (+)1<-2--T2------C
        #       .. 3       |
        #         \0       |
        # (-)2<-1--a--3 0--T1
        #    (-)3<-2 (-)0<-1
        C2x2_RUx = yast.tensordot(C2x2_RU, a, ([0, 3], [3, 0]))
        C2x2_RUx = C2x2_RUx.fuse_legs(axes=((1,2),(0,3)))

        #    (-)2<-0 (+)1<-2
        # (-)3<-1--a--3 3--T2
        #          2\...   |
        #          0       |
        # (+)0<-1--T1------C
        C2x2_RDx = yast.tensordot(C2x2_RD, a, ([0, 3], [2, 3]))
        C2x2_RDx = C2x2_RDx.fuse_legs(axes=((1,2),(0,3)))

        # 0(+)     0->2(-)
        # T1--1 1--a--3(+)
        # |        2\...
        # |        2
        # C--------T2--3->1(-)
        C2x2_LDx = yast.tensordot(C2x2_LD, a, ([1, 2], [1, 2]))
        C2x2_LDx = C2x2_LDx.fuse_legs(axes=((0,2),(1,3)))

        upper_half = yast.tensordot(C2x2_LUx, C2x2_RUx, ([1], [0]))
        lower_half = yast.tensordot(C2x2_LDx, C2x2_RDx, ([1], [1]))
        norm_2x2= yast.tensordot(upper_half, lower_half, ([0, 1], [0, 1]))
        norm_2x2= norm_2x2.to_number().real
        print(f"loss {norm_2x2}")

        return norm_2x2

    params= torch.rand(2, dtype=A.data.dtype, device=A.data.device)
    params.requires_grad_(True)
    op_args= (params,)
    test = torch.autograd.gradcheck(loss_fn, op_args, eps=1e-4, atol=1e-4)
    assert test


@pytest.mark.skipif(config_U1xU1_fermionic.backend.BACKEND_ID=="numpy", reason="numpy backend does not support autograd")
@pytest.mark.skipif("not config.getoption('bug_pytorch110')")
def test_bug_contraction_backward_u1_C4x4_open():
    r"""
    Computes contraction of 

    CTTC
    TaaT
    TaaT
    CTTC

    where a is double-layer tensor obtained as a = A^\dag A

    by first contracting 

    CT-----TC
    Taa     T
    Taa_openT
    CT-----TC

    where a_open is outer-product of A^\dag A. Afterwards, trace over two open physical
    indices of a_open.
    """
    import torch

    loc_c = config_U1
    loc_c = loc_c if isinstance(loc_c, _config) else _config(**{a: getattr(loc_c, a) for a in _config._fields if hasattr(loc_c, a)})
    loc_c = loc_c._replace(default_dtype="complex128", fermionic=False, default_fusion='hard')


    # C2x2_LU
    # 
    # len 246266
    t0_data = np.random.randn(246266) + 1.0j * np.random.randn(246266)
    C2x2_LU= yast.load_from_dict(loc_c, {'_d': t0_data,\
        's': (1, -1, -1, 1), 'n': (0,), 't': ((-4, -3, -3, -2), (-4, -3, -2, -1), (-4, -3, -1, 0), (-4, -3, 0, 1), (-4, -3, 1, 2), (-4, -3, 2, 3), (-4, -3, 3, 4), (-4, -2, -3, -1), (-4, -2, -2, 0), (-4, -2, -1, 1), (-4, -2, 0, 2), (-4, -2, 1, 3), (-4, -2, 2, 4), (-4, -1, -3, 0), (-4, -1, -2, 1), (-4, -1, -1, 2), (-4, -1, 0, 3), (-4, -1, 1, 4), (-3, -3, -3, -3), (-3, -3, -2, -2), (-3, -3, -1, -1), (-3, -3, 0, 0), (-3, -3, 1, 1), (-3, -3, 2, 2), (-3, -3, 3, 3), (-3, -2, -3, -2), (-3, -2, -2, -1), (-3, -2, -1, 0), (-3, -2, 0, 1), (-3, -2, 1, 2), (-3, -2, 2, 3), (-3, -2, 3, 4), (-3, -1, -3, -1), (-3, -1, -2, 0), (-3, -1, -1, 1), (-3, -1, 0, 2), (-3, -1, 1, 3), (-3, -1, 2, 4), (-3, 0, -3, 0), (-3, 0, -2, 1), (-3, 0, -1, 2), (-3, 0, 0, 3), (-3, 0, 1, 4), (-2, -3, -3, -4), (-2, -3, -2, -3), (-2, -3, -1, -2), (-2, -3, 0, -1), (-2, -3, 1, 0), (-2, -3, 2, 1), (-2, -3, 3, 2), (-2, -2, -3, -3), (-2, -2, -2, -2), (-2, -2, -1, -1), (-2, -2, 0, 0), (-2, -2, 1, 1), (-2, -2, 2, 2), (-2, -2, 3, 3), (-2, -1, -3, -2), (-2, -1, -2, -1), (-2, -1, -1, 0), (-2, -1, 0, 1), (-2, -1, 1, 2), (-2, -1, 2, 3), (-2, -1, 3, 4), (-2, 0, -3, -1), (-2, 0, -2, 0), (-2, 0, -1, 1), (-2, 0, 0, 2), (-2, 0, 1, 3), (-2, 0, 2, 4), (-2, 1, -3, 0), (-2, 1, -2, 1), (-2, 1, -1, 2), (-2, 1, 0, 3), (-2, 1, 1, 4), (-1, -3, -2, -4), (-1, -3, -1, -3), (-1, -3, 0, -2), (-1, -3, 1, -1), (-1, -3, 2, 0), (-1, -3, 3, 1), (-1, -2, -3, -4), (-1, -2, -2, -3), (-1, -2, -1, -2), (-1, -2, 0, -1), (-1, -2, 1, 0), (-1, -2, 2, 1), (-1, -2, 3, 2), (-1, -1, -3, -3), (-1, -1, -2, -2), (-1, -1, -1, -1), (-1, -1, 0, 0), (-1, -1, 1, 1), (-1, -1, 2, 2), (-1, -1, 3, 3), (-1, 0, -3, -2), (-1, 0, -2, -1), (-1, 0, -1, 0), (-1, 0, 0, 1), (-1, 0, 1, 2), (-1, 0, 2, 3), (-1, 0, 3, 4), (-1, 1, -3, -1), (-1, 1, -2, 0), (-1, 1, -1, 1), (-1, 1, 0, 2), (-1, 1, 1, 3), (-1, 1, 2, 4), (-1, 2, -3, 0), (-1, 2, -2, 1), (-1, 2, -1, 2), (-1, 2, 0, 3), (-1, 2, 1, 4), (0, -3, -1, -4), (0, -3, 0, -3), (0, -3, 1, -2), (0, -3, 2, -1), (0, -3, 3, 0), (0, -2, -2, -4), (0, -2, -1, -3), (0, -2, 0, -2), (0, -2, 1, -1), (0, -2, 2, 0), (0, -2, 3, 1), (0, -1, -3, -4), (0, -1, -2, -3), (0, -1, -1, -2), (0, -1, 0, -1), (0, -1, 1, 0), (0, -1, 2, 1), (0, -1, 3, 2), (0, 0, -3, -3), (0, 0, -2, -2), (0, 0, -1, -1), (0, 0, 0, 0), (0, 0, 1, 1), (0, 0, 2, 2), (0, 0, 3, 3), (0, 1, -3, -2), (0, 1, -2, -1), (0, 1, -1, 0), (0, 1, 0, 1), (0, 1, 1, 2), (0, 1, 2, 3), (0, 1, 3, 4), (0, 2, -3, -1), (0, 2, -2, 0), (0, 2, -1, 1), (0, 2, 0, 2), (0, 2, 1, 3), (0, 2, 2, 4), (0, 3, -3, 0), (0, 3, -2, 1), (0, 3, -1, 2), (0, 3, 0, 3), (0, 3, 1, 4), (1, -2, -1, -4), (1, -2, 0, -3), (1, -2, 1, -2), (1, -2, 2, -1), (1, -2, 3, 0), (1, -1, -2, -4), (1, -1, -1, -3), (1, -1, 0, -2), (1, -1, 1, -1), (1, -1, 2, 0), (1, -1, 3, 1), (1, 0, -3, -4), (1, 0, -2, -3), (1, 0, -1, -2), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 2, 1), (1, 0, 3, 2), (1, 1, -3, -3), (1, 1, -2, -2), (1, 1, -1, -1), (1, 1, 0, 0), (1, 1, 1, 1), (1, 1, 2, 2), (1, 1, 3, 3), (1, 2, -3, -2), (1, 2, -2, -1), (1, 2, -1, 0), (1, 2, 0, 1), (1, 2, 1, 2), (1, 2, 2, 3), (1, 2, 3, 4), (1, 3, -3, -1), (1, 3, -2, 0), (1, 3, -1, 1), (1, 3, 0, 2), (1, 3, 1, 3), (1, 3, 2, 4), (2, -1, -1, -4), (2, -1, 0, -3), (2, -1, 1, -2), (2, -1, 2, -1), (2, -1, 3, 0), (2, 0, -2, -4), (2, 0, -1, -3), (2, 0, 0, -2), (2, 0, 1, -1), (2, 0, 2, 0), (2, 0, 3, 1), (2, 1, -3, -4), (2, 1, -2, -3), (2, 1, -1, -2), (2, 1, 0, -1), (2, 1, 1, 0), (2, 1, 2, 1), (2, 1, 3, 2), (2, 2, -3, -3), (2, 2, -2, -2), (2, 2, -1, -1), (2, 2, 0, 0), (2, 2, 1, 1), (2, 2, 2, 2), (2, 2, 3, 3), (2, 3, -3, -2), (2, 3, -2, -1), (2, 3, -1, 0), (2, 3, 0, 1), (2, 3, 1, 2), (2, 3, 2, 3), (2, 3, 3, 4), (3, 0, -1, -4), (3, 0, 0, -3), (3, 0, 1, -2), (3, 0, 2, -1), (3, 0, 3, 0), (3, 1, -2, -4), (3, 1, -1, -3), (3, 1, 0, -2), (3, 1, 1, -1), (3, 1, 2, 0), (3, 1, 3, 1), (3, 2, -3, -4), (3, 2, -2, -3), (3, 2, -1, -2), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 2, 1), (3, 2, 3, 2), (3, 3, -3, -3), (3, 3, -2, -2), (3, 3, -1, -1), (3, 3, 0, 0), (3, 3, 1, 1), (3, 3, 2, 2), (3, 3, 3, 3), (4, 1, -1, -4), (4, 1, 0, -3), (4, 1, 1, -2), (4, 1, 2, -1), (4, 1, 3, 0), (4, 2, -2, -4), (4, 2, -1, -3), (4, 2, 0, -2), (4, 2, 1, -1), (4, 2, 2, 0), (4, 2, 3, 1), (4, 3, -3, -4), (4, 3, -2, -3), (4, 3, -1, -2), (4, 3, 0, -1), (4, 3, 1, 0), (4, 3, 2, 1), (4, 3, 3, 2)), 'D': ((1, 2, 3, 5), (1, 2, 5, 6), (1, 2, 11, 8), (1, 2, 9, 6), (1, 2, 11, 5), (1, 2, 5, 2), (1, 2, 3, 1), (1, 3, 3, 6), (1, 3, 5, 8), (1, 3, 11, 6), (1, 3, 9, 5), (1, 3, 11, 2), (1, 3, 5, 1), (1, 9, 3, 8), (1, 9, 5, 6), (1, 9, 11, 5), (1, 9, 9, 2), (1, 9, 11, 1), (2, 2, 3, 2), (2, 2, 5, 5), (2, 2, 11, 6), (2, 2, 9, 8), (2, 2, 11, 6), (2, 2, 5, 5), (2, 2, 3, 2), (2, 3, 3, 5), (2, 3, 5, 6), (2, 3, 11, 8), (2, 3, 9, 6), (2, 3, 11, 5), (2, 3, 5, 2), (2, 3, 3, 1), (2, 9, 3, 6), (2, 9, 5, 8), (2, 9, 11, 6), (2, 9, 9, 5), (2, 9, 11, 2), (2, 9, 5, 1), (2, 8, 3, 8), (2, 8, 5, 6), (2, 8, 11, 5), (2, 8, 9, 2), (2, 8, 11, 1), (5, 2, 3, 1), (5, 2, 5, 2), (5, 2, 11, 5), (5, 2, 9, 6), (5, 2, 11, 8), (5, 2, 5, 6), (5, 2, 3, 5), (5, 3, 3, 2), (5, 3, 5, 5), (5, 3, 11, 6), (5, 3, 9, 8), (5, 3, 11, 6), (5, 3, 5, 5), (5, 3, 3, 2), (5, 9, 3, 5), (5, 9, 5, 6), (5, 9, 11, 8), (5, 9, 9, 6), (5, 9, 11, 5), (5, 9, 5, 2), (5, 9, 3, 1), (5, 8, 3, 6), (5, 8, 5, 8), (5, 8, 11, 6), (5, 8, 9, 5), (5, 8, 11, 2), (5, 8, 5, 1), (5, 9, 3, 8), (5, 9, 5, 6), (5, 9, 11, 5), (5, 9, 9, 2), (5, 9, 11, 1), (6, 2, 5, 1), (6, 2, 11, 2), (6, 2, 9, 5), (6, 2, 11, 6), (6, 2, 5, 8), (6, 2, 3, 6), (6, 3, 3, 1), (6, 3, 5, 2), (6, 3, 11, 5), (6, 3, 9, 6), (6, 3, 11, 8), (6, 3, 5, 6), (6, 3, 3, 5), (6, 9, 3, 2), (6, 9, 5, 5), (6, 9, 11, 6), (6, 9, 9, 8), (6, 9, 11, 6), (6, 9, 5, 5), (6, 9, 3, 2), (6, 8, 3, 5), (6, 8, 5, 6), (6, 8, 11, 8), (6, 8, 9, 6), (6, 8, 11, 5), (6, 8, 5, 2), (6, 8, 3, 1), (6, 9, 3, 6), (6, 9, 5, 8), (6, 9, 11, 6), (6, 9, 9, 5), (6, 9, 11, 2), (6, 9, 5, 1), (6, 3, 3, 8), (6, 3, 5, 6), (6, 3, 11, 5), (6, 3, 9, 2), (6, 3, 11, 1), (8, 2, 11, 1), (8, 2, 9, 2), (8, 2, 11, 5), (8, 2, 5, 6), (8, 2, 3, 8), (8, 3, 5, 1), (8, 3, 11, 2), (8, 3, 9, 5), (8, 3, 11, 6), (8, 3, 5, 8), (8, 3, 3, 6), (8, 9, 3, 1), (8, 9, 5, 2), (8, 9, 11, 5), (8, 9, 9, 6), (8, 9, 11, 8), (8, 9, 5, 6), (8, 9, 3, 5), (8, 8, 3, 2), (8, 8, 5, 5), (8, 8, 11, 6), (8, 8, 9, 8), (8, 8, 11, 6), (8, 8, 5, 5), (8, 8, 3, 2), (8, 9, 3, 5), (8, 9, 5, 6), (8, 9, 11, 8), (8, 9, 9, 6), (8, 9, 11, 5), (8, 9, 5, 2), (8, 9, 3, 1), (8, 3, 3, 6), (8, 3, 5, 8), (8, 3, 11, 6), (8, 3, 9, 5), (8, 3, 11, 2), (8, 3, 5, 1), (8, 2, 3, 8), (8, 2, 5, 6), (8, 2, 11, 5), (8, 2, 9, 2), (8, 2, 11, 1), (6, 3, 11, 1), (6, 3, 9, 2), (6, 3, 11, 5), (6, 3, 5, 6), (6, 3, 3, 8), (6, 9, 5, 1), (6, 9, 11, 2), (6, 9, 9, 5), (6, 9, 11, 6), (6, 9, 5, 8), (6, 9, 3, 6), (6, 8, 3, 1), (6, 8, 5, 2), (6, 8, 11, 5), (6, 8, 9, 6), (6, 8, 11, 8), (6, 8, 5, 6), (6, 8, 3, 5), (6, 9, 3, 2), (6, 9, 5, 5), (6, 9, 11, 6), (6, 9, 9, 8), (6, 9, 11, 6), (6, 9, 5, 5), (6, 9, 3, 2), (6, 3, 3, 5), (6, 3, 5, 6), (6, 3, 11, 8), (6, 3, 9, 6), (6, 3, 11, 5), (6, 3, 5, 2), (6, 3, 3, 1), (6, 2, 3, 6), (6, 2, 5, 8), (6, 2, 11, 6), (6, 2, 9, 5), (6, 2, 11, 2), (6, 2, 5, 1), (5, 9, 11, 1), (5, 9, 9, 2), (5, 9, 11, 5), (5, 9, 5, 6), (5, 9, 3, 8), (5, 8, 5, 1), (5, 8, 11, 2), (5, 8, 9, 5), (5, 8, 11, 6), (5, 8, 5, 8), (5, 8, 3, 6), (5, 9, 3, 1), (5, 9, 5, 2), (5, 9, 11, 5), (5, 9, 9, 6), (5, 9, 11, 8), (5, 9, 5, 6), (5, 9, 3, 5), (5, 3, 3, 2), (5, 3, 5, 5), (5, 3, 11, 6), (5, 3, 9, 8), (5, 3, 11, 6), (5, 3, 5, 5), (5, 3, 3, 2), (5, 2, 3, 5), (5, 2, 5, 6), (5, 2, 11, 8), (5, 2, 9, 6), (5, 2, 11, 5), (5, 2, 5, 2), (5, 2, 3, 1), (2, 8, 11, 1), (2, 8, 9, 2), (2, 8, 11, 5), (2, 8, 5, 6), (2, 8, 3, 8), (2, 9, 5, 1), (2, 9, 11, 2), (2, 9, 9, 5), (2, 9, 11, 6), (2, 9, 5, 8), (2, 9, 3, 6), (2, 3, 3, 1), (2, 3, 5, 2), (2, 3, 11, 5), (2, 3, 9, 6), (2, 3, 11, 8), (2, 3, 5, 6), (2, 3, 3, 5), (2, 2, 3, 2), (2, 2, 5, 5), (2, 2, 11, 6), (2, 2, 9, 8), (2, 2, 11, 6), (2, 2, 5, 5), (2, 2, 3, 2), (1, 9, 11, 1), (1, 9, 9, 2), (1, 9, 11, 5), (1, 9, 5, 6), (1, 9, 3, 8), (1, 3, 5, 1), (1, 3, 11, 2), (1, 3, 9, 5), (1, 3, 11, 6), (1, 3, 5, 8), (1, 3, 3, 6), (1, 2, 3, 1), (1, 2, 5, 2), (1, 2, 11, 5), (1, 2, 9, 6), (1, 2, 11, 8), (1, 2, 5, 6), (1, 2, 3, 5)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_RU
    #
    # len 278994
    t1_data = np.random.randn(278994) + 1.0j * np.random.randn(278994)
    C2x2_RU= yast.load_from_dict(loc_c, {'_d': t1_data,\
        's': (-1, -1, 1, 1), 'n': (0,), 't': ((-4, 1, -3, 0), (-4, 1, -2, -1), (-4, 1, -1, -2), (-4, 1, 0, -3), (-4, 1, 1, -4), (-4, 2, -3, 1), (-4, 2, -2, 0), (-4, 2, -1, -1), (-4, 2, 0, -2), (-4, 2, 1, -3), (-4, 2, 2, -4), (-4, 3, -3, 2), (-4, 3, -2, 1), (-4, 3, -1, 0), (-4, 3, 0, -1), (-4, 3, 1, -2), (-4, 3, 2, -3), (-4, 3, 3, -4), (-3, 0, -3, 0), (-3, 0, -2, -1), (-3, 0, -1, -2), (-3, 0, 0, -3), (-3, 0, 1, -4), (-3, 1, -3, 1), (-3, 1, -2, 0), (-3, 1, -1, -1), (-3, 1, 0, -2), (-3, 1, 1, -3), (-3, 1, 2, -4), (-3, 2, -3, 2), (-3, 2, -2, 1), (-3, 2, -1, 0), (-3, 2, 0, -1), (-3, 2, 1, -2), (-3, 2, 2, -3), (-3, 2, 3, -4), (-3, 3, -3, 3), (-3, 3, -2, 2), (-3, 3, -1, 1), (-3, 3, 0, 0), (-3, 3, 1, -1), (-3, 3, 2, -2), (-3, 3, 3, -3), (-2, -1, -3, 0), (-2, -1, -2, -1), (-2, -1, -1, -2), (-2, -1, 0, -3), (-2, -1, 1, -4), (-2, 0, -3, 1), (-2, 0, -2, 0), (-2, 0, -1, -1), (-2, 0, 0, -2), (-2, 0, 1, -3), (-2, 0, 2, -4), (-2, 1, -3, 2), (-2, 1, -2, 1), (-2, 1, -1, 0), (-2, 1, 0, -1), (-2, 1, 1, -2), (-2, 1, 2, -3), (-2, 1, 3, -4), (-2, 2, -3, 3), (-2, 2, -2, 2), (-2, 2, -1, 1), (-2, 2, 0, 0), (-2, 2, 1, -1), (-2, 2, 2, -2), (-2, 2, 3, -3), (-2, 3, -3, 4), (-2, 3, -2, 3), (-2, 3, -1, 2), (-2, 3, 0, 1), (-2, 3, 1, 0), (-2, 3, 2, -1), (-2, 3, 3, -2), (-1, -2, -3, 0), (-1, -2, -2, -1), (-1, -2, -1, -2), (-1, -2, 0, -3), (-1, -2, 1, -4), (-1, -1, -3, 1), (-1, -1, -2, 0), (-1, -1, -1, -1), (-1, -1, 0, -2), (-1, -1, 1, -3), (-1, -1, 2, -4), (-1, 0, -3, 2), (-1, 0, -2, 1), (-1, 0, -1, 0), (-1, 0, 0, -1), (-1, 0, 1, -2), (-1, 0, 2, -3), (-1, 0, 3, -4), (-1, 1, -3, 3), (-1, 1, -2, 2), (-1, 1, -1, 1), (-1, 1, 0, 0), (-1, 1, 1, -1), (-1, 1, 2, -2), (-1, 1, 3, -3), (-1, 2, -3, 4), (-1, 2, -2, 3), (-1, 2, -1, 2), (-1, 2, 0, 1), (-1, 2, 1, 0), (-1, 2, 2, -1), (-1, 2, 3, -2), (-1, 3, -2, 4), (-1, 3, -1, 3), (-1, 3, 0, 2), (-1, 3, 1, 1), (-1, 3, 2, 0), (-1, 3, 3, -1), (0, -3, -3, 0), (0, -3, -2, -1), (0, -3, -1, -2), (0, -3, 0, -3), (0, -3, 1, -4), (0, -2, -3, 1), (0, -2, -2, 0), (0, -2, -1, -1), (0, -2, 0, -2), (0, -2, 1, -3), (0, -2, 2, -4), (0, -1, -3, 2), (0, -1, -2, 1), (0, -1, -1, 0), (0, -1, 0, -1), (0, -1, 1, -2), (0, -1, 2, -3), (0, -1, 3, -4), (0, 0, -3, 3), (0, 0, -2, 2), (0, 0, -1, 1), (0, 0, 0, 0), (0, 0, 1, -1), (0, 0, 2, -2), (0, 0, 3, -3), (0, 1, -3, 4), (0, 1, -2, 3), (0, 1, -1, 2), (0, 1, 0, 1), (0, 1, 1, 0), (0, 1, 2, -1), (0, 1, 3, -2), (0, 2, -2, 4), (0, 2, -1, 3), (0, 2, 0, 2), (0, 2, 1, 1), (0, 2, 2, 0), (0, 2, 3, -1), (0, 3, -1, 4), (0, 3, 0, 3), (0, 3, 1, 2), (0, 3, 2, 1), (0, 3, 3, 0), (1, -3, -3, 1), (1, -3, -2, 0), (1, -3, -1, -1), (1, -3, 0, -2), (1, -3, 1, -3), (1, -3, 2, -4), (1, -2, -3, 2), (1, -2, -2, 1), (1, -2, -1, 0), (1, -2, 0, -1), (1, -2, 1, -2), (1, -2, 2, -3), (1, -2, 3, -4), (1, -1, -3, 3), (1, -1, -2, 2), (1, -1, -1, 1), (1, -1, 0, 0), (1, -1, 1, -1), (1, -1, 2, -2), (1, -1, 3, -3), (1, 0, -3, 4), (1, 0, -2, 3), (1, 0, -1, 2), (1, 0, 0, 1), (1, 0, 1, 0), (1, 0, 2, -1), (1, 0, 3, -2), (1, 1, -2, 4), (1, 1, -1, 3), (1, 1, 0, 2), (1, 1, 1, 1), (1, 1, 2, 0), (1, 1, 3, -1), (1, 2, -1, 4), (1, 2, 0, 3), (1, 2, 1, 2), (1, 2, 2, 1), (1, 2, 3, 0), (2, -3, -3, 2), (2, -3, -2, 1), (2, -3, -1, 0), (2, -3, 0, -1), (2, -3, 1, -2), (2, -3, 2, -3), (2, -3, 3, -4), (2, -2, -3, 3), (2, -2, -2, 2), (2, -2, -1, 1), (2, -2, 0, 0), (2, -2, 1, -1), (2, -2, 2, -2), (2, -2, 3, -3), (2, -1, -3, 4), (2, -1, -2, 3), (2, -1, -1, 2), (2, -1, 0, 1), (2, -1, 1, 0), (2, -1, 2, -1), (2, -1, 3, -2), (2, 0, -2, 4), (2, 0, -1, 3), (2, 0, 0, 2), (2, 0, 1, 1), (2, 0, 2, 0), (2, 0, 3, -1), (2, 1, -1, 4), (2, 1, 0, 3), (2, 1, 1, 2), (2, 1, 2, 1), (2, 1, 3, 0), (3, -3, -3, 3), (3, -3, -2, 2), (3, -3, -1, 1), (3, -3, 0, 0), (3, -3, 1, -1), (3, -3, 2, -2), (3, -3, 3, -3), (3, -2, -3, 4), (3, -2, -2, 3), (3, -2, -1, 2), (3, -2, 0, 1), (3, -2, 1, 0), (3, -2, 2, -1), (3, -2, 3, -2), (3, -1, -2, 4), (3, -1, -1, 3), (3, -1, 0, 2), (3, -1, 1, 1), (3, -1, 2, 0), (3, -1, 3, -1), (3, 0, -1, 4), (3, 0, 0, 3), (3, 0, 1, 2), (3, 0, 2, 1), (3, 0, 3, 0), (4, -3, -3, 4), (4, -3, -2, 3), (4, -3, -1, 2), (4, -3, 0, 1), (4, -3, 1, 0), (4, -3, 2, -1), (4, -3, 3, -2), (4, -2, -2, 4), (4, -2, -1, 3), (4, -2, 0, 2), (4, -2, 1, 1), (4, -2, 2, 0), (4, -2, 3, -1), (4, -1, -1, 4), (4, -1, 0, 3), (4, -1, 1, 2), (4, -1, 2, 1), (4, -1, 3, 0)), 'D': ((1, 12, 2, 8), (1, 12, 3, 6), (1, 12, 9, 5), (1, 12, 8, 2), (1, 12, 9, 1), (1, 6, 2, 6), (1, 6, 3, 8), (1, 6, 9, 6), (1, 6, 8, 5), (1, 6, 9, 2), (1, 6, 3, 1), (1, 3, 2, 5), (1, 3, 3, 6), (1, 3, 9, 8), (1, 3, 8, 6), (1, 3, 9, 5), (1, 3, 3, 2), (1, 3, 2, 1), (2, 11, 2, 8), (2, 11, 3, 6), (2, 11, 9, 5), (2, 11, 8, 2), (2, 11, 9, 1), (2, 12, 2, 6), (2, 12, 3, 8), (2, 12, 9, 6), (2, 12, 8, 5), (2, 12, 9, 2), (2, 12, 3, 1), (2, 6, 2, 5), (2, 6, 3, 6), (2, 6, 9, 8), (2, 6, 8, 6), (2, 6, 9, 5), (2, 6, 3, 2), (2, 6, 2, 1), (2, 3, 2, 2), (2, 3, 3, 5), (2, 3, 9, 6), (2, 3, 8, 8), (2, 3, 9, 6), (2, 3, 3, 5), (2, 3, 2, 2), (5, 12, 2, 8), (5, 12, 3, 6), (5, 12, 9, 5), (5, 12, 8, 2), (5, 12, 9, 1), (5, 11, 2, 6), (5, 11, 3, 8), (5, 11, 9, 6), (5, 11, 8, 5), (5, 11, 9, 2), (5, 11, 3, 1), (5, 12, 2, 5), (5, 12, 3, 6), (5, 12, 9, 8), (5, 12, 8, 6), (5, 12, 9, 5), (5, 12, 3, 2), (5, 12, 2, 1), (5, 6, 2, 2), (5, 6, 3, 5), (5, 6, 9, 6), (5, 6, 8, 8), (5, 6, 9, 6), (5, 6, 3, 5), (5, 6, 2, 2), (5, 3, 2, 1), (5, 3, 3, 2), (5, 3, 9, 5), (5, 3, 8, 6), (5, 3, 9, 8), (5, 3, 3, 6), (5, 3, 2, 5), (6, 6, 2, 8), (6, 6, 3, 6), (6, 6, 9, 5), (6, 6, 8, 2), (6, 6, 9, 1), (6, 12, 2, 6), (6, 12, 3, 8), (6, 12, 9, 6), (6, 12, 8, 5), (6, 12, 9, 2), (6, 12, 3, 1), (6, 11, 2, 5), (6, 11, 3, 6), (6, 11, 9, 8), (6, 11, 8, 6), (6, 11, 9, 5), (6, 11, 3, 2), (6, 11, 2, 1), (6, 12, 2, 2), (6, 12, 3, 5), (6, 12, 9, 6), (6, 12, 8, 8), (6, 12, 9, 6), (6, 12, 3, 5), (6, 12, 2, 2), (6, 6, 2, 1), (6, 6, 3, 2), (6, 6, 9, 5), (6, 6, 8, 6), (6, 6, 9, 8), (6, 6, 3, 6), (6, 6, 2, 5), (6, 3, 3, 1), (6, 3, 9, 2), (6, 3, 8, 5), (6, 3, 9, 6), (6, 3, 3, 8), (6, 3, 2, 6), (8, 3, 2, 8), (8, 3, 3, 6), (8, 3, 9, 5), (8, 3, 8, 2), (8, 3, 9, 1), (8, 6, 2, 6), (8, 6, 3, 8), (8, 6, 9, 6), (8, 6, 8, 5), (8, 6, 9, 2), (8, 6, 3, 1), (8, 12, 2, 5), (8, 12, 3, 6), (8, 12, 9, 8), (8, 12, 8, 6), (8, 12, 9, 5), (8, 12, 3, 2), (8, 12, 2, 1), (8, 11, 2, 2), (8, 11, 3, 5), (8, 11, 9, 6), (8, 11, 8, 8), (8, 11, 9, 6), (8, 11, 3, 5), (8, 11, 2, 2), (8, 12, 2, 1), (8, 12, 3, 2), (8, 12, 9, 5), (8, 12, 8, 6), (8, 12, 9, 8), (8, 12, 3, 6), (8, 12, 2, 5), (8, 6, 3, 1), (8, 6, 9, 2), (8, 6, 8, 5), (8, 6, 9, 6), (8, 6, 3, 8), (8, 6, 2, 6), (8, 3, 9, 1), (8, 3, 8, 2), (8, 3, 9, 5), (8, 3, 3, 6), (8, 3, 2, 8), (6, 3, 2, 6), (6, 3, 3, 8), (6, 3, 9, 6), (6, 3, 8, 5), (6, 3, 9, 2), (6, 3, 3, 1), (6, 6, 2, 5), (6, 6, 3, 6), (6, 6, 9, 8), (6, 6, 8, 6), (6, 6, 9, 5), (6, 6, 3, 2), (6, 6, 2, 1), (6, 12, 2, 2), (6, 12, 3, 5), (6, 12, 9, 6), (6, 12, 8, 8), (6, 12, 9, 6), (6, 12, 3, 5), (6, 12, 2, 2), (6, 11, 2, 1), (6, 11, 3, 2), (6, 11, 9, 5), (6, 11, 8, 6), (6, 11, 9, 8), (6, 11, 3, 6), (6, 11, 2, 5), (6, 12, 3, 1), (6, 12, 9, 2), (6, 12, 8, 5), (6, 12, 9, 6), (6, 12, 3, 8), (6, 12, 2, 6), (6, 6, 9, 1), (6, 6, 8, 2), (6, 6, 9, 5), (6, 6, 3, 6), (6, 6, 2, 8), (5, 3, 2, 5), (5, 3, 3, 6), (5, 3, 9, 8), (5, 3, 8, 6), (5, 3, 9, 5), (5, 3, 3, 2), (5, 3, 2, 1), (5, 6, 2, 2), (5, 6, 3, 5), (5, 6, 9, 6), (5, 6, 8, 8), (5, 6, 9, 6), (5, 6, 3, 5), (5, 6, 2, 2), (5, 12, 2, 1), (5, 12, 3, 2), (5, 12, 9, 5), (5, 12, 8, 6), (5, 12, 9, 8), (5, 12, 3, 6), (5, 12, 2, 5), (5, 11, 3, 1), (5, 11, 9, 2), (5, 11, 8, 5), (5, 11, 9, 6), (5, 11, 3, 8), (5, 11, 2, 6), (5, 12, 9, 1), (5, 12, 8, 2), (5, 12, 9, 5), (5, 12, 3, 6), (5, 12, 2, 8), (2, 3, 2, 2), (2, 3, 3, 5), (2, 3, 9, 6), (2, 3, 8, 8), (2, 3, 9, 6), (2, 3, 3, 5), (2, 3, 2, 2), (2, 6, 2, 1), (2, 6, 3, 2), (2, 6, 9, 5), (2, 6, 8, 6), (2, 6, 9, 8), (2, 6, 3, 6), (2, 6, 2, 5), (2, 12, 3, 1), (2, 12, 9, 2), (2, 12, 8, 5), (2, 12, 9, 6), (2, 12, 3, 8), (2, 12, 2, 6), (2, 11, 9, 1), (2, 11, 8, 2), (2, 11, 9, 5), (2, 11, 3, 6), (2, 11, 2, 8), (1, 3, 2, 1), (1, 3, 3, 2), (1, 3, 9, 5), (1, 3, 8, 6), (1, 3, 9, 8), (1, 3, 3, 6), (1, 3, 2, 5), (1, 6, 3, 1), (1, 6, 9, 2), (1, 6, 8, 5), (1, 6, 9, 6), (1, 6, 3, 8), (1, 6, 2, 6), (1, 12, 9, 1), (1, 12, 8, 2), (1, 12, 9, 5), (1, 12, 3, 6), (1, 12, 2, 8)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_RD
    #
    # len 381872
    t2_data = np.random.randn(381872) + 1.0j * np.random.randn(381872)
    C2x2_RD= yast.load_from_dict(loc_c, {'_d': t2_data,\
        's': (-1, 1, 1, -1), 'n': (0,), 't': ((-4, -3, -3, -2), (-4, -3, -2, -1), (-4, -3, -1, 0), (-4, -3, 0, 1), (-4, -3, 1, 2), (-4, -3, 2, 3), (-4, -3, 3, 4), (-4, -2, -3, -1), (-4, -2, -2, 0), (-4, -2, -1, 1), (-4, -2, 0, 2), (-4, -2, 1, 3), (-4, -2, 2, 4), (-4, -1, -3, 0), (-4, -1, -2, 1), (-4, -1, -1, 2), (-4, -1, 0, 3), (-4, -1, 1, 4), (-3, -3, -3, -3), (-3, -3, -2, -2), (-3, -3, -1, -1), (-3, -3, 0, 0), (-3, -3, 1, 1), (-3, -3, 2, 2), (-3, -3, 3, 3), (-3, -2, -3, -2), (-3, -2, -2, -1), (-3, -2, -1, 0), (-3, -2, 0, 1), (-3, -2, 1, 2), (-3, -2, 2, 3), (-3, -2, 3, 4), (-3, -1, -3, -1), (-3, -1, -2, 0), (-3, -1, -1, 1), (-3, -1, 0, 2), (-3, -1, 1, 3), (-3, -1, 2, 4), (-3, 0, -3, 0), (-3, 0, -2, 1), (-3, 0, -1, 2), (-3, 0, 0, 3), (-3, 0, 1, 4), (-2, -3, -3, -4), (-2, -3, -2, -3), (-2, -3, -1, -2), (-2, -3, 0, -1), (-2, -3, 1, 0), (-2, -3, 2, 1), (-2, -3, 3, 2), (-2, -2, -3, -3), (-2, -2, -2, -2), (-2, -2, -1, -1), (-2, -2, 0, 0), (-2, -2, 1, 1), (-2, -2, 2, 2), (-2, -2, 3, 3), (-2, -1, -3, -2), (-2, -1, -2, -1), (-2, -1, -1, 0), (-2, -1, 0, 1), (-2, -1, 1, 2), (-2, -1, 2, 3), (-2, -1, 3, 4), (-2, 0, -3, -1), (-2, 0, -2, 0), (-2, 0, -1, 1), (-2, 0, 0, 2), (-2, 0, 1, 3), (-2, 0, 2, 4), (-2, 1, -3, 0), (-2, 1, -2, 1), (-2, 1, -1, 2), (-2, 1, 0, 3), (-2, 1, 1, 4), (-1, -3, -2, -4), (-1, -3, -1, -3), (-1, -3, 0, -2), (-1, -3, 1, -1), (-1, -3, 2, 0), (-1, -3, 3, 1), (-1, -2, -3, -4), (-1, -2, -2, -3), (-1, -2, -1, -2), (-1, -2, 0, -1), (-1, -2, 1, 0), (-1, -2, 2, 1), (-1, -2, 3, 2), (-1, -1, -3, -3), (-1, -1, -2, -2), (-1, -1, -1, -1), (-1, -1, 0, 0), (-1, -1, 1, 1), (-1, -1, 2, 2), (-1, -1, 3, 3), (-1, 0, -3, -2), (-1, 0, -2, -1), (-1, 0, -1, 0), (-1, 0, 0, 1), (-1, 0, 1, 2), (-1, 0, 2, 3), (-1, 0, 3, 4), (-1, 1, -3, -1), (-1, 1, -2, 0), (-1, 1, -1, 1), (-1, 1, 0, 2), (-1, 1, 1, 3), (-1, 1, 2, 4), (-1, 2, -3, 0), (-1, 2, -2, 1), (-1, 2, -1, 2), (-1, 2, 0, 3), (-1, 2, 1, 4), (0, -3, -1, -4), (0, -3, 0, -3), (0, -3, 1, -2), (0, -3, 2, -1), (0, -3, 3, 0), (0, -2, -2, -4), (0, -2, -1, -3), (0, -2, 0, -2), (0, -2, 1, -1), (0, -2, 2, 0), (0, -2, 3, 1), (0, -1, -3, -4), (0, -1, -2, -3), (0, -1, -1, -2), (0, -1, 0, -1), (0, -1, 1, 0), (0, -1, 2, 1), (0, -1, 3, 2), (0, 0, -3, -3), (0, 0, -2, -2), (0, 0, -1, -1), (0, 0, 0, 0), (0, 0, 1, 1), (0, 0, 2, 2), (0, 0, 3, 3), (0, 1, -3, -2), (0, 1, -2, -1), (0, 1, -1, 0), (0, 1, 0, 1), (0, 1, 1, 2), (0, 1, 2, 3), (0, 1, 3, 4), (0, 2, -3, -1), (0, 2, -2, 0), (0, 2, -1, 1), (0, 2, 0, 2), (0, 2, 1, 3), (0, 2, 2, 4), (0, 3, -3, 0), (0, 3, -2, 1), (0, 3, -1, 2), (0, 3, 0, 3), (0, 3, 1, 4), (1, -2, -1, -4), (1, -2, 0, -3), (1, -2, 1, -2), (1, -2, 2, -1), (1, -2, 3, 0), (1, -1, -2, -4), (1, -1, -1, -3), (1, -1, 0, -2), (1, -1, 1, -1), (1, -1, 2, 0), (1, -1, 3, 1), (1, 0, -3, -4), (1, 0, -2, -3), (1, 0, -1, -2), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 2, 1), (1, 0, 3, 2), (1, 1, -3, -3), (1, 1, -2, -2), (1, 1, -1, -1), (1, 1, 0, 0), (1, 1, 1, 1), (1, 1, 2, 2), (1, 1, 3, 3), (1, 2, -3, -2), (1, 2, -2, -1), (1, 2, -1, 0), (1, 2, 0, 1), (1, 2, 1, 2), (1, 2, 2, 3), (1, 2, 3, 4), (1, 3, -3, -1), (1, 3, -2, 0), (1, 3, -1, 1), (1, 3, 0, 2), (1, 3, 1, 3), (1, 3, 2, 4), (2, -1, -1, -4), (2, -1, 0, -3), (2, -1, 1, -2), (2, -1, 2, -1), (2, -1, 3, 0), (2, 0, -2, -4), (2, 0, -1, -3), (2, 0, 0, -2), (2, 0, 1, -1), (2, 0, 2, 0), (2, 0, 3, 1), (2, 1, -3, -4), (2, 1, -2, -3), (2, 1, -1, -2), (2, 1, 0, -1), (2, 1, 1, 0), (2, 1, 2, 1), (2, 1, 3, 2), (2, 2, -3, -3), (2, 2, -2, -2), (2, 2, -1, -1), (2, 2, 0, 0), (2, 2, 1, 1), (2, 2, 2, 2), (2, 2, 3, 3), (2, 3, -3, -2), (2, 3, -2, -1), (2, 3, -1, 0), (2, 3, 0, 1), (2, 3, 1, 2), (2, 3, 2, 3), (2, 3, 3, 4), (3, 0, -1, -4), (3, 0, 0, -3), (3, 0, 1, -2), (3, 0, 2, -1), (3, 0, 3, 0), (3, 1, -2, -4), (3, 1, -1, -3), (3, 1, 0, -2), (3, 1, 1, -1), (3, 1, 2, 0), (3, 1, 3, 1), (3, 2, -3, -4), (3, 2, -2, -3), (3, 2, -1, -2), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 2, 1), (3, 2, 3, 2), (3, 3, -3, -3), (3, 3, -2, -2), (3, 3, -1, -1), (3, 3, 0, 0), (3, 3, 1, 1), (3, 3, 2, 2), (3, 3, 3, 3), (4, 1, -1, -4), (4, 1, 0, -3), (4, 1, 1, -2), (4, 1, 2, -1), (4, 1, 3, 0), (4, 2, -2, -4), (4, 2, -1, -3), (4, 2, 0, -2), (4, 2, 1, -1), (4, 2, 2, 0), (4, 2, 3, 1), (4, 3, -3, -4), (4, 3, -2, -3), (4, 3, -1, -2), (4, 3, 0, -1), (4, 3, 1, 0), (4, 3, 2, 1), (4, 3, 3, 2)), 'D': ((1, 2, 3, 5), (1, 2, 6, 6), (1, 2, 12, 8), (1, 2, 11, 6), (1, 2, 12, 5), (1, 2, 6, 2), (1, 2, 3, 1), (1, 5, 3, 6), (1, 5, 6, 8), (1, 5, 12, 6), (1, 5, 11, 5), (1, 5, 12, 2), (1, 5, 6, 1), (1, 12, 3, 8), (1, 12, 6, 6), (1, 12, 12, 5), (1, 12, 11, 2), (1, 12, 12, 1), (2, 2, 3, 2), (2, 2, 6, 5), (2, 2, 12, 6), (2, 2, 11, 8), (2, 2, 12, 6), (2, 2, 6, 5), (2, 2, 3, 2), (2, 5, 3, 5), (2, 5, 6, 6), (2, 5, 12, 8), (2, 5, 11, 6), (2, 5, 12, 5), (2, 5, 6, 2), (2, 5, 3, 1), (2, 12, 3, 6), (2, 12, 6, 8), (2, 12, 12, 6), (2, 12, 11, 5), (2, 12, 12, 2), (2, 12, 6, 1), (2, 11, 3, 8), (2, 11, 6, 6), (2, 11, 12, 5), (2, 11, 11, 2), (2, 11, 12, 1), (5, 2, 3, 1), (5, 2, 6, 2), (5, 2, 12, 5), (5, 2, 11, 6), (5, 2, 12, 8), (5, 2, 6, 6), (5, 2, 3, 5), (5, 5, 3, 2), (5, 5, 6, 5), (5, 5, 12, 6), (5, 5, 11, 8), (5, 5, 12, 6), (5, 5, 6, 5), (5, 5, 3, 2), (5, 12, 3, 5), (5, 12, 6, 6), (5, 12, 12, 8), (5, 12, 11, 6), (5, 12, 12, 5), (5, 12, 6, 2), (5, 12, 3, 1), (5, 11, 3, 6), (5, 11, 6, 8), (5, 11, 12, 6), (5, 11, 11, 5), (5, 11, 12, 2), (5, 11, 6, 1), (5, 12, 3, 8), (5, 12, 6, 6), (5, 12, 12, 5), (5, 12, 11, 2), (5, 12, 12, 1), (6, 2, 6, 1), (6, 2, 12, 2), (6, 2, 11, 5), (6, 2, 12, 6), (6, 2, 6, 8), (6, 2, 3, 6), (6, 5, 3, 1), (6, 5, 6, 2), (6, 5, 12, 5), (6, 5, 11, 6), (6, 5, 12, 8), (6, 5, 6, 6), (6, 5, 3, 5), (6, 12, 3, 2), (6, 12, 6, 5), (6, 12, 12, 6), (6, 12, 11, 8), (6, 12, 12, 6), (6, 12, 6, 5), (6, 12, 3, 2), (6, 11, 3, 5), (6, 11, 6, 6), (6, 11, 12, 8), (6, 11, 11, 6), (6, 11, 12, 5), (6, 11, 6, 2), (6, 11, 3, 1), (6, 12, 3, 6), (6, 12, 6, 8), (6, 12, 12, 6), (6, 12, 11, 5), (6, 12, 12, 2), (6, 12, 6, 1), (6, 5, 3, 8), (6, 5, 6, 6), (6, 5, 12, 5), (6, 5, 11, 2), (6, 5, 12, 1), (8, 2, 12, 1), (8, 2, 11, 2), (8, 2, 12, 5), (8, 2, 6, 6), (8, 2, 3, 8), (8, 5, 6, 1), (8, 5, 12, 2), (8, 5, 11, 5), (8, 5, 12, 6), (8, 5, 6, 8), (8, 5, 3, 6), (8, 12, 3, 1), (8, 12, 6, 2), (8, 12, 12, 5), (8, 12, 11, 6), (8, 12, 12, 8), (8, 12, 6, 6), (8, 12, 3, 5), (8, 11, 3, 2), (8, 11, 6, 5), (8, 11, 12, 6), (8, 11, 11, 8), (8, 11, 12, 6), (8, 11, 6, 5), (8, 11, 3, 2), (8, 12, 3, 5), (8, 12, 6, 6), (8, 12, 12, 8), (8, 12, 11, 6), (8, 12, 12, 5), (8, 12, 6, 2), (8, 12, 3, 1), (8, 5, 3, 6), (8, 5, 6, 8), (8, 5, 12, 6), (8, 5, 11, 5), (8, 5, 12, 2), (8, 5, 6, 1), (8, 2, 3, 8), (8, 2, 6, 6), (8, 2, 12, 5), (8, 2, 11, 2), (8, 2, 12, 1), (6, 5, 12, 1), (6, 5, 11, 2), (6, 5, 12, 5), (6, 5, 6, 6), (6, 5, 3, 8), (6, 12, 6, 1), (6, 12, 12, 2), (6, 12, 11, 5), (6, 12, 12, 6), (6, 12, 6, 8), (6, 12, 3, 6), (6, 11, 3, 1), (6, 11, 6, 2), (6, 11, 12, 5), (6, 11, 11, 6), (6, 11, 12, 8), (6, 11, 6, 6), (6, 11, 3, 5), (6, 12, 3, 2), (6, 12, 6, 5), (6, 12, 12, 6), (6, 12, 11, 8), (6, 12, 12, 6), (6, 12, 6, 5), (6, 12, 3, 2), (6, 5, 3, 5), (6, 5, 6, 6), (6, 5, 12, 8), (6, 5, 11, 6), (6, 5, 12, 5), (6, 5, 6, 2), (6, 5, 3, 1), (6, 2, 3, 6), (6, 2, 6, 8), (6, 2, 12, 6), (6, 2, 11, 5), (6, 2, 12, 2), (6, 2, 6, 1), (5, 12, 12, 1), (5, 12, 11, 2), (5, 12, 12, 5), (5, 12, 6, 6), (5, 12, 3, 8), (5, 11, 6, 1), (5, 11, 12, 2), (5, 11, 11, 5), (5, 11, 12, 6), (5, 11, 6, 8), (5, 11, 3, 6), (5, 12, 3, 1), (5, 12, 6, 2), (5, 12, 12, 5), (5, 12, 11, 6), (5, 12, 12, 8), (5, 12, 6, 6), (5, 12, 3, 5), (5, 5, 3, 2), (5, 5, 6, 5), (5, 5, 12, 6), (5, 5, 11, 8), (5, 5, 12, 6), (5, 5, 6, 5), (5, 5, 3, 2), (5, 2, 3, 5), (5, 2, 6, 6), (5, 2, 12, 8), (5, 2, 11, 6), (5, 2, 12, 5), (5, 2, 6, 2), (5, 2, 3, 1), (2, 11, 12, 1), (2, 11, 11, 2), (2, 11, 12, 5), (2, 11, 6, 6), (2, 11, 3, 8), (2, 12, 6, 1), (2, 12, 12, 2), (2, 12, 11, 5), (2, 12, 12, 6), (2, 12, 6, 8), (2, 12, 3, 6), (2, 5, 3, 1), (2, 5, 6, 2), (2, 5, 12, 5), (2, 5, 11, 6), (2, 5, 12, 8), (2, 5, 6, 6), (2, 5, 3, 5), (2, 2, 3, 2), (2, 2, 6, 5), (2, 2, 12, 6), (2, 2, 11, 8), (2, 2, 12, 6), (2, 2, 6, 5), (2, 2, 3, 2), (1, 12, 12, 1), (1, 12, 11, 2), (1, 12, 12, 5), (1, 12, 6, 6), (1, 12, 3, 8), (1, 5, 6, 1), (1, 5, 12, 2), (1, 5, 11, 5), (1, 5, 12, 6), (1, 5, 6, 8), (1, 5, 3, 6), (1, 2, 3, 1), (1, 2, 6, 2), (1, 2, 12, 5), (1, 2, 11, 6), (1, 2, 12, 8), (1, 2, 6, 6), (1, 2, 3, 5)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}], 'SYM_ID': 'U(1)', 'fermionic': False})

    # C2x2_LD
    #
    # len 337056
    t3_data = np.random.randn(337056) + 1.0j * np.random.randn(337056)
    C2x2_LD= yast.load_from_dict(loc_c, {'_d': t3_data,\
        's': (1, 1, -1, -1), 'n': (0,), 't': ((-3, 0, -4, 1), (-3, 0, -3, 0), (-3, 0, -2, -1), (-3, 0, -1, -2), (-3, 0, 0, -3), (-3, 1, -4, 2), (-3, 1, -3, 1), (-3, 1, -2, 0), (-3, 1, -1, -1), (-3, 1, 0, -2), (-3, 1, 1, -3), (-3, 2, -4, 3), (-3, 2, -3, 2), (-3, 2, -2, 1), (-3, 2, -1, 0), (-3, 2, 0, -1), (-3, 2, 1, -2), (-3, 2, 2, -3), (-3, 3, -3, 3), (-3, 3, -2, 2), (-3, 3, -1, 1), (-3, 3, 0, 0), (-3, 3, 1, -1), (-3, 3, 2, -2), (-3, 3, 3, -3), (-3, 4, -2, 3), (-3, 4, -1, 2), (-3, 4, 0, 1), (-3, 4, 1, 0), (-3, 4, 2, -1), (-3, 4, 3, -2), (-3, 4, 4, -3), (-2, -1, -4, 1), (-2, -1, -3, 0), (-2, -1, -2, -1), (-2, -1, -1, -2), (-2, -1, 0, -3), (-2, 0, -4, 2), (-2, 0, -3, 1), (-2, 0, -2, 0), (-2, 0, -1, -1), (-2, 0, 0, -2), (-2, 0, 1, -3), (-2, 1, -4, 3), (-2, 1, -3, 2), (-2, 1, -2, 1), (-2, 1, -1, 0), (-2, 1, 0, -1), (-2, 1, 1, -2), (-2, 1, 2, -3), (-2, 2, -3, 3), (-2, 2, -2, 2), (-2, 2, -1, 1), (-2, 2, 0, 0), (-2, 2, 1, -1), (-2, 2, 2, -2), (-2, 2, 3, -3), (-2, 3, -2, 3), (-2, 3, -1, 2), (-2, 3, 0, 1), (-2, 3, 1, 0), (-2, 3, 2, -1), (-2, 3, 3, -2), (-2, 3, 4, -3), (-2, 4, -1, 3), (-2, 4, 0, 2), (-2, 4, 1, 1), (-2, 4, 2, 0), (-2, 4, 3, -1), (-2, 4, 4, -2), (-1, -2, -4, 1), (-1, -2, -3, 0), (-1, -2, -2, -1), (-1, -2, -1, -2), (-1, -2, 0, -3), (-1, -1, -4, 2), (-1, -1, -3, 1), (-1, -1, -2, 0), (-1, -1, -1, -1), (-1, -1, 0, -2), (-1, -1, 1, -3), (-1, 0, -4, 3), (-1, 0, -3, 2), (-1, 0, -2, 1), (-1, 0, -1, 0), (-1, 0, 0, -1), (-1, 0, 1, -2), (-1, 0, 2, -3), (-1, 1, -3, 3), (-1, 1, -2, 2), (-1, 1, -1, 1), (-1, 1, 0, 0), (-1, 1, 1, -1), (-1, 1, 2, -2), (-1, 1, 3, -3), (-1, 2, -2, 3), (-1, 2, -1, 2), (-1, 2, 0, 1), (-1, 2, 1, 0), (-1, 2, 2, -1), (-1, 2, 3, -2), (-1, 2, 4, -3), (-1, 3, -1, 3), (-1, 3, 0, 2), (-1, 3, 1, 1), (-1, 3, 2, 0), (-1, 3, 3, -1), (-1, 3, 4, -2), (-1, 4, 0, 3), (-1, 4, 1, 2), (-1, 4, 2, 1), (-1, 4, 3, 0), (-1, 4, 4, -1), (0, -3, -4, 1), (0, -3, -3, 0), (0, -3, -2, -1), (0, -3, -1, -2), (0, -3, 0, -3), (0, -2, -4, 2), (0, -2, -3, 1), (0, -2, -2, 0), (0, -2, -1, -1), (0, -2, 0, -2), (0, -2, 1, -3), (0, -1, -4, 3), (0, -1, -3, 2), (0, -1, -2, 1), (0, -1, -1, 0), (0, -1, 0, -1), (0, -1, 1, -2), (0, -1, 2, -3), (0, 0, -3, 3), (0, 0, -2, 2), (0, 0, -1, 1), (0, 0, 0, 0), (0, 0, 1, -1), (0, 0, 2, -2), (0, 0, 3, -3), (0, 1, -2, 3), (0, 1, -1, 2), (0, 1, 0, 1), (0, 1, 1, 0), (0, 1, 2, -1), (0, 1, 3, -2), (0, 1, 4, -3), (0, 2, -1, 3), (0, 2, 0, 2), (0, 2, 1, 1), (0, 2, 2, 0), (0, 2, 3, -1), (0, 2, 4, -2), (0, 3, 0, 3), (0, 3, 1, 2), (0, 3, 2, 1), (0, 3, 3, 0), (0, 3, 4, -1), (1, -4, -4, 1), (1, -4, -3, 0), (1, -4, -2, -1), (1, -4, -1, -2), (1, -4, 0, -3), (1, -3, -4, 2), (1, -3, -3, 1), (1, -3, -2, 0), (1, -3, -1, -1), (1, -3, 0, -2), (1, -3, 1, -3), (1, -2, -4, 3), (1, -2, -3, 2), (1, -2, -2, 1), (1, -2, -1, 0), (1, -2, 0, -1), (1, -2, 1, -2), (1, -2, 2, -3), (1, -1, -3, 3), (1, -1, -2, 2), (1, -1, -1, 1), (1, -1, 0, 0), (1, -1, 1, -1), (1, -1, 2, -2), (1, -1, 3, -3), (1, 0, -2, 3), (1, 0, -1, 2), (1, 0, 0, 1), (1, 0, 1, 0), (1, 0, 2, -1), (1, 0, 3, -2), (1, 0, 4, -3), (1, 1, -1, 3), (1, 1, 0, 2), (1, 1, 1, 1), (1, 1, 2, 0), (1, 1, 3, -1), (1, 1, 4, -2), (1, 2, 0, 3), (1, 2, 1, 2), (1, 2, 2, 1), (1, 2, 3, 0), (1, 2, 4, -1), (2, -4, -4, 2), (2, -4, -3, 1), (2, -4, -2, 0), (2, -4, -1, -1), (2, -4, 0, -2), (2, -4, 1, -3), (2, -3, -4, 3), (2, -3, -3, 2), (2, -3, -2, 1), (2, -3, -1, 0), (2, -3, 0, -1), (2, -3, 1, -2), (2, -3, 2, -3), (2, -2, -3, 3), (2, -2, -2, 2), (2, -2, -1, 1), (2, -2, 0, 0), (2, -2, 1, -1), (2, -2, 2, -2), (2, -2, 3, -3), (2, -1, -2, 3), (2, -1, -1, 2), (2, -1, 0, 1), (2, -1, 1, 0), (2, -1, 2, -1), (2, -1, 3, -2), (2, -1, 4, -3), (2, 0, -1, 3), (2, 0, 0, 2), (2, 0, 1, 1), (2, 0, 2, 0), (2, 0, 3, -1), (2, 0, 4, -2), (2, 1, 0, 3), (2, 1, 1, 2), (2, 1, 2, 1), (2, 1, 3, 0), (2, 1, 4, -1), (3, -4, -4, 3), (3, -4, -3, 2), (3, -4, -2, 1), (3, -4, -1, 0), (3, -4, 0, -1), (3, -4, 1, -2), (3, -4, 2, -3), (3, -3, -3, 3), (3, -3, -2, 2), (3, -3, -1, 1), (3, -3, 0, 0), (3, -3, 1, -1), (3, -3, 2, -2), (3, -3, 3, -3), (3, -2, -2, 3), (3, -2, -1, 2), (3, -2, 0, 1), (3, -2, 1, 0), (3, -2, 2, -1), (3, -2, 3, -2), (3, -2, 4, -3), (3, -1, -1, 3), (3, -1, 0, 2), (3, -1, 1, 1), (3, -1, 2, 0), (3, -1, 3, -1), (3, -1, 4, -2), (3, 0, 0, 3), (3, 0, 1, 2), (3, 0, 2, 1), (3, 0, 3, 0), (3, 0, 4, -1)), 'D': ((3, 8, 1, 12), (3, 8, 2, 11), (3, 8, 5, 12), (3, 8, 6, 5), (3, 8, 8, 2), (3, 6, 1, 5), (3, 6, 2, 12), (3, 6, 5, 11), (3, 6, 6, 12), (3, 6, 8, 5), (3, 6, 6, 2), (3, 5, 1, 2), (3, 5, 2, 5), (3, 5, 5, 12), (3, 5, 6, 11), (3, 5, 8, 12), (3, 5, 6, 5), (3, 5, 5, 2), (3, 2, 2, 2), (3, 2, 5, 5), (3, 2, 6, 12), (3, 2, 8, 11), (3, 2, 6, 12), (3, 2, 5, 5), (3, 2, 2, 2), (3, 1, 5, 2), (3, 1, 6, 5), (3, 1, 8, 12), (3, 1, 6, 11), (3, 1, 5, 12), (3, 1, 2, 5), (3, 1, 1, 2), (5, 6, 1, 12), (5, 6, 2, 11), (5, 6, 5, 12), (5, 6, 6, 5), (5, 6, 8, 2), (5, 8, 1, 5), (5, 8, 2, 12), (5, 8, 5, 11), (5, 8, 6, 12), (5, 8, 8, 5), (5, 8, 6, 2), (5, 6, 1, 2), (5, 6, 2, 5), (5, 6, 5, 12), (5, 6, 6, 11), (5, 6, 8, 12), (5, 6, 6, 5), (5, 6, 5, 2), (5, 5, 2, 2), (5, 5, 5, 5), (5, 5, 6, 12), (5, 5, 8, 11), (5, 5, 6, 12), (5, 5, 5, 5), (5, 5, 2, 2), (5, 2, 5, 2), (5, 2, 6, 5), (5, 2, 8, 12), (5, 2, 6, 11), (5, 2, 5, 12), (5, 2, 2, 5), (5, 2, 1, 2), (5, 1, 6, 2), (5, 1, 8, 5), (5, 1, 6, 12), (5, 1, 5, 11), (5, 1, 2, 12), (5, 1, 1, 5), (11, 5, 1, 12), (11, 5, 2, 11), (11, 5, 5, 12), (11, 5, 6, 5), (11, 5, 8, 2), (11, 6, 1, 5), (11, 6, 2, 12), (11, 6, 5, 11), (11, 6, 6, 12), (11, 6, 8, 5), (11, 6, 6, 2), (11, 8, 1, 2), (11, 8, 2, 5), (11, 8, 5, 12), (11, 8, 6, 11), (11, 8, 8, 12), (11, 8, 6, 5), (11, 8, 5, 2), (11, 6, 2, 2), (11, 6, 5, 5), (11, 6, 6, 12), (11, 6, 8, 11), (11, 6, 6, 12), (11, 6, 5, 5), (11, 6, 2, 2), (11, 5, 5, 2), (11, 5, 6, 5), (11, 5, 8, 12), (11, 5, 6, 11), (11, 5, 5, 12), (11, 5, 2, 5), (11, 5, 1, 2), (11, 2, 6, 2), (11, 2, 8, 5), (11, 2, 6, 12), (11, 2, 5, 11), (11, 2, 2, 12), (11, 2, 1, 5), (11, 1, 8, 2), (11, 1, 6, 5), (11, 1, 5, 12), (11, 1, 2, 11), (11, 1, 1, 12), (9, 2, 1, 12), (9, 2, 2, 11), (9, 2, 5, 12), (9, 2, 6, 5), (9, 2, 8, 2), (9, 5, 1, 5), (9, 5, 2, 12), (9, 5, 5, 11), (9, 5, 6, 12), (9, 5, 8, 5), (9, 5, 6, 2), (9, 6, 1, 2), (9, 6, 2, 5), (9, 6, 5, 12), (9, 6, 6, 11), (9, 6, 8, 12), (9, 6, 6, 5), (9, 6, 5, 2), (9, 8, 2, 2), (9, 8, 5, 5), (9, 8, 6, 12), (9, 8, 8, 11), (9, 8, 6, 12), (9, 8, 5, 5), (9, 8, 2, 2), (9, 6, 5, 2), (9, 6, 6, 5), (9, 6, 8, 12), (9, 6, 6, 11), (9, 6, 5, 12), (9, 6, 2, 5), (9, 6, 1, 2), (9, 5, 6, 2), (9, 5, 8, 5), (9, 5, 6, 12), (9, 5, 5, 11), (9, 5, 2, 12), (9, 5, 1, 5), (9, 2, 8, 2), (9, 2, 6, 5), (9, 2, 5, 12), (9, 2, 2, 11), (9, 2, 1, 12), (11, 1, 1, 12), (11, 1, 2, 11), (11, 1, 5, 12), (11, 1, 6, 5), (11, 1, 8, 2), (11, 2, 1, 5), (11, 2, 2, 12), (11, 2, 5, 11), (11, 2, 6, 12), (11, 2, 8, 5), (11, 2, 6, 2), (11, 5, 1, 2), (11, 5, 2, 5), (11, 5, 5, 12), (11, 5, 6, 11), (11, 5, 8, 12), (11, 5, 6, 5), (11, 5, 5, 2), (11, 6, 2, 2), (11, 6, 5, 5), (11, 6, 6, 12), (11, 6, 8, 11), (11, 6, 6, 12), (11, 6, 5, 5), (11, 6, 2, 2), (11, 8, 5, 2), (11, 8, 6, 5), (11, 8, 8, 12), (11, 8, 6, 11), (11, 8, 5, 12), (11, 8, 2, 5), (11, 8, 1, 2), (11, 6, 6, 2), (11, 6, 8, 5), (11, 6, 6, 12), (11, 6, 5, 11), (11, 6, 2, 12), (11, 6, 1, 5), (11, 5, 8, 2), (11, 5, 6, 5), (11, 5, 5, 12), (11, 5, 2, 11), (11, 5, 1, 12), (5, 1, 1, 5), (5, 1, 2, 12), (5, 1, 5, 11), (5, 1, 6, 12), (5, 1, 8, 5), (5, 1, 6, 2), (5, 2, 1, 2), (5, 2, 2, 5), (5, 2, 5, 12), (5, 2, 6, 11), (5, 2, 8, 12), (5, 2, 6, 5), (5, 2, 5, 2), (5, 5, 2, 2), (5, 5, 5, 5), (5, 5, 6, 12), (5, 5, 8, 11), (5, 5, 6, 12), (5, 5, 5, 5), (5, 5, 2, 2), (5, 6, 5, 2), (5, 6, 6, 5), (5, 6, 8, 12), (5, 6, 6, 11), (5, 6, 5, 12), (5, 6, 2, 5), (5, 6, 1, 2), (5, 8, 6, 2), (5, 8, 8, 5), (5, 8, 6, 12), (5, 8, 5, 11), (5, 8, 2, 12), (5, 8, 1, 5), (5, 6, 8, 2), (5, 6, 6, 5), (5, 6, 5, 12), (5, 6, 2, 11), (5, 6, 1, 12), (3, 1, 1, 2), (3, 1, 2, 5), (3, 1, 5, 12), (3, 1, 6, 11), (3, 1, 8, 12), (3, 1, 6, 5), (3, 1, 5, 2), (3, 2, 2, 2), (3, 2, 5, 5), (3, 2, 6, 12), (3, 2, 8, 11), (3, 2, 6, 12), (3, 2, 5, 5), (3, 2, 2, 2), (3, 5, 5, 2), (3, 5, 6, 5), (3, 5, 8, 12), (3, 5, 6, 11), (3, 5, 5, 12), (3, 5, 2, 5), (3, 5, 1, 2), (3, 6, 6, 2), (3, 6, 8, 5), (3, 6, 6, 12), (3, 6, 5, 11), (3, 6, 2, 12), (3, 6, 1, 5), (3, 8, 8, 2), (3, 8, 6, 5), (3, 8, 5, 12), (3, 8, 2, 11), (3, 8, 1, 12)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,)), 'hfs': [{'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (2, 1, 1), 'op': 'poo', 's': (1, 1, -1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (2, 1, 1), 'op': 'poo', 's': (-1, -1, 1), 't': (((-2,), (-1,), (0,), (1,), (2,)), ((-2,), (-1,), (0,), (1,), (2,))), 'D': ((1, 1, 2, 1, 1), (1, 1, 2, 1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}], 'SYM_ID': 'U(1)', 'fermionic': False})

    tA_data = np.random.randn(1160) + 1.0j * np.random.randn(1160)
    A= yast.load_from_dict(loc_c, {'_d': tA_data,\
        's': (-1, -1, -1, 1, 1), 'n': (0,), 't': ((-3, -2, 1, -2, -2), (-3, -2, 2, -2, -1), (-3, -2, 2, -1, -2), (-3, -1, 0, -2, -2), (-3, -1, 1, -2, -1), (-3, -1, 1, -1, -2), (-3, -1, 2, -2, 0), (-3, -1, 2, -1, -1), (-3, -1, 2, 0, -2), (-3, 0, -1, -2, -2), (-3, 0, 0, -2, -1), (-3, 0, 0, -1, -2), (-3, 0, 1, -2, 0), (-3, 0, 1, -1, -1), (-3, 0, 1, 0, -2), (-3, 0, 2, -2, 1), (-3, 0, 2, -1, 0), (-3, 0, 2, 0, -1), (-3, 0, 2, 1, -2), (-3, 1, -2, -2, -2), (-3, 1, -1, -2, -1), (-3, 1, -1, -1, -2), (-3, 1, 0, -2, 0), (-3, 1, 0, -1, -1), (-3, 1, 0, 0, -2), (-3, 1, 1, -2, 1), (-3, 1, 1, -1, 0), (-3, 1, 1, 0, -1), (-3, 1, 1, 1, -2), (-3, 2, -2, -2, -1), (-3, 2, -2, -1, -2), (-3, 2, -1, -2, 0), (-3, 2, -1, -1, -1), (-3, 2, -1, 0, -2), (-3, 2, 0, -2, 1), (-3, 2, 0, -1, 0), (-3, 2, 0, 0, -1), (-3, 2, 0, 1, -2), (-1, -2, 0, -2, -1), (-1, -2, 0, -1, -2), (-1, -2, 1, -2, 0), (-1, -2, 1, -1, -1), (-1, -2, 1, 0, -2), (-1, -2, 2, -2, 1), (-1, -2, 2, -1, 0), (-1, -2, 2, 0, -1), (-1, -2, 2, 1, -2), (-1, -1, -1, -2, -1), (-1, -1, -1, -1, -2), (-1, -1, 0, -2, 0), (-1, -1, 0, -1, -1), (-1, -1, 0, 0, -2), (-1, -1, 1, -2, 1), (-1, -1, 1, -1, 0), (-1, -1, 1, 0, -1), (-1, -1, 1, 1, -2), (-1, -1, 2, -2, 2), (-1, -1, 2, -1, 1), (-1, -1, 2, 0, 0), (-1, -1, 2, 1, -1), (-1, -1, 2, 2, -2), (-1, 0, -2, -2, -1), (-1, 0, -2, -1, -2), (-1, 0, -1, -2, 0), (-1, 0, -1, -1, -1), (-1, 0, -1, 0, -2), (-1, 0, 0, -2, 1), (-1, 0, 0, -1, 0), (-1, 0, 0, 0, -1), (-1, 0, 0, 1, -2), (-1, 0, 1, -2, 2), (-1, 0, 1, -1, 1), (-1, 0, 1, 0, 0), (-1, 0, 1, 1, -1), (-1, 0, 1, 2, -2), (-1, 0, 2, -1, 2), (-1, 0, 2, 0, 1), (-1, 0, 2, 1, 0), (-1, 0, 2, 2, -1), (-1, 1, -2, -2, 0), (-1, 1, -2, -1, -1), (-1, 1, -2, 0, -2), (-1, 1, -1, -2, 1), (-1, 1, -1, -1, 0), (-1, 1, -1, 0, -1), (-1, 1, -1, 1, -2), (-1, 1, 0, -2, 2), (-1, 1, 0, -1, 1), (-1, 1, 0, 0, 0), (-1, 1, 0, 1, -1), (-1, 1, 0, 2, -2), (-1, 1, 1, -1, 2), (-1, 1, 1, 0, 1), (-1, 1, 1, 1, 0), (-1, 1, 1, 2, -1), (-1, 2, -2, -2, 1), (-1, 2, -2, -1, 0), (-1, 2, -2, 0, -1), (-1, 2, -2, 1, -2), (-1, 2, -1, -2, 2), (-1, 2, -1, -1, 1), (-1, 2, -1, 0, 0), (-1, 2, -1, 1, -1), (-1, 2, -1, 2, -2), (-1, 2, 0, -1, 2), (-1, 2, 0, 0, 1), (-1, 2, 0, 1, 0), (-1, 2, 0, 2, -1), (1, -2, 0, -2, 1), (1, -2, 0, -1, 0), (1, -2, 0, 0, -1), (1, -2, 0, 1, -2), (1, -2, 1, -2, 2), (1, -2, 1, -1, 1), (1, -2, 1, 0, 0), (1, -2, 1, 1, -1), (1, -2, 1, 2, -2), (1, -2, 2, -1, 2), (1, -2, 2, 0, 1), (1, -2, 2, 1, 0), (1, -2, 2, 2, -1), (1, -1, -1, -2, 1), (1, -1, -1, -1, 0), (1, -1, -1, 0, -1), (1, -1, -1, 1, -2), (1, -1, 0, -2, 2), (1, -1, 0, -1, 1), (1, -1, 0, 0, 0), (1, -1, 0, 1, -1), (1, -1, 0, 2, -2), (1, -1, 1, -1, 2), (1, -1, 1, 0, 1), (1, -1, 1, 1, 0), (1, -1, 1, 2, -1), (1, -1, 2, 0, 2), (1, -1, 2, 1, 1), (1, -1, 2, 2, 0), (1, 0, -2, -2, 1), (1, 0, -2, -1, 0), (1, 0, -2, 0, -1), (1, 0, -2, 1, -2), (1, 0, -1, -2, 2), (1, 0, -1, -1, 1), (1, 0, -1, 0, 0), (1, 0, -1, 1, -1), (1, 0, -1, 2, -2), (1, 0, 0, -1, 2), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 2, -1), (1, 0, 1, 0, 2), (1, 0, 1, 1, 1), (1, 0, 1, 2, 0), (1, 0, 2, 1, 2), (1, 0, 2, 2, 1), (1, 1, -2, -2, 2), (1, 1, -2, -1, 1), (1, 1, -2, 0, 0), (1, 1, -2, 1, -1), (1, 1, -2, 2, -2), (1, 1, -1, -1, 2), (1, 1, -1, 0, 1), (1, 1, -1, 1, 0), (1, 1, -1, 2, -1), (1, 1, 0, 0, 2), (1, 1, 0, 1, 1), (1, 1, 0, 2, 0), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 2, -2, -1, 2), (1, 2, -2, 0, 1), (1, 2, -2, 1, 0), (1, 2, -2, 2, -1), (1, 2, -1, 0, 2), (1, 2, -1, 1, 1), (1, 2, -1, 2, 0), (1, 2, 0, 1, 2), (1, 2, 0, 2, 1), (3, -2, 0, -1, 2), (3, -2, 0, 0, 1), (3, -2, 0, 1, 0), (3, -2, 0, 2, -1), (3, -2, 1, 0, 2), (3, -2, 1, 1, 1), (3, -2, 1, 2, 0), (3, -2, 2, 1, 2), (3, -2, 2, 2, 1), (3, -1, -1, -1, 2), (3, -1, -1, 0, 1), (3, -1, -1, 1, 0), (3, -1, -1, 2, -1), (3, -1, 0, 0, 2), (3, -1, 0, 1, 1), (3, -1, 0, 2, 0), (3, -1, 1, 1, 2), (3, -1, 1, 2, 1), (3, -1, 2, 2, 2), (3, 0, -2, -1, 2), (3, 0, -2, 0, 1), (3, 0, -2, 1, 0), (3, 0, -2, 2, -1), (3, 0, -1, 0, 2), (3, 0, -1, 1, 1), (3, 0, -1, 2, 0), (3, 0, 0, 1, 2), (3, 0, 0, 2, 1), (3, 0, 1, 2, 2), (3, 1, -2, 0, 2), (3, 1, -2, 1, 1), (3, 1, -2, 2, 0), (3, 1, -1, 1, 2), (3, 1, -1, 2, 1), (3, 1, 0, 2, 2), (3, 2, -2, 1, 2), (3, 2, -2, 2, 1), (3, 2, -1, 2, 2)), 'D': ((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 2, 1, 1), (3, 2, 2, 1, 2), (3, 2, 2, 2, 1), (3, 2, 2, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 2, 2, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 1, 2, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 2, 2, 1, 1), (3, 2, 2, 2, 1), (3, 2, 2, 1, 2), (3, 2, 2, 1, 1), (3, 2, 1, 2, 1), (3, 2, 1, 1, 1), (3, 2, 1, 1, 2), (3, 2, 1, 1, 1), (3, 2, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 2, 2, 1), (3, 1, 2, 1, 1), (3, 1, 2, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 2), (3, 1, 1, 1, 1), (3, 1, 1, 2, 1), (3, 1, 1, 1, 1), (3, 1, 1, 1, 2), (3, 1, 2, 1, 1), (3, 1, 2, 1, 1), (1, 1, 2, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 2), (1, 1, 2, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 2, 2, 1), (1, 1, 2, 1, 1), (1, 1, 2, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 2), (1, 2, 1, 1, 1), (1, 2, 1, 2, 1), (1, 2, 1, 1, 1), (1, 2, 1, 1, 2), (1, 2, 2, 1, 1), (1, 2, 2, 1, 1), (1, 2, 1, 1, 1), (1, 1, 1, 2, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 2), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1), (1, 1, 1, 1, 1)), 'isdiag': False, 'mfs': ((1,), (1,), (1,), (1,), (1,)), 'hfs': [{'tree': (3, 1, 1, 1), 'op': 'pooo', 's': (-1, -1, -1, -1), 't': (((-1,), (1,)), ((-1,), (1,)), ((-1,), (1,))), 'D': ((1, 1), (1, 1), (1, 1))}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (-1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}, {'tree': (1,), 's': (1,), 't': (), 'D': ()}], 'SYM_ID': 'U(1)', 'fermionic': False})

    B= A.clone()
    C= A.clone()
    B._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)
    C._data= torch.rand(A.data.size(), dtype=A.data.dtype, device=A.data.device)
    def loss_fn(params):
        print(f"params {params[0].item()} {params[1].item()}")
        pA= A + params[0]*B + params[1]*C

        a= pA.tensordot(pA,([0],[0]),conj=(0,1))
        a= a.fuse_legs(axes=((0,4),(1,5),(2,6),(3,7)))

        # C----------T1--1->0(-)
        # |          0
        # |          0
        # T2--3 1----a--3(+)
        # 2->1(-) (+)2\...
        C2x2_LUx = yast.tensordot(C2x2_LU, a, ([0, 3], [0, 1]))
        C2x2_LUx = C2x2_LUx.fuse_legs(axes=((1,2),(0,3)))

        # (+)1<-2--T2------C
        #       .. 3       |
        #         \0       |
        # (-)2<-1--a--3 0--T1
        #    (-)3<-2 (-)0<-1
        C2x2_RUx = yast.tensordot(C2x2_RU, a, ([0, 3], [3, 0]))
        C2x2_RUx = C2x2_RUx.fuse_legs(axes=((1,2),(0,3)))

        a_open= pA.tensordot(pA,([],[]),conj=(0,1))
        a_open= a_open.fuse_legs(axes=((1,6),(2,7),(3,8),(4,9),(0,5)))
        #    (-)2<-0 (+)1<-2
        # (-)3<-1--a--3 3--T2
        #          2\...   |
        #          0       |
        # (+)0<-1--T1------C
        C2x2_RDx = yast.tensordot(C2x2_RD, a_open, ([0, 3], [2, 3]))
        C2x2_RDx = C2x2_RDx.fuse_legs(axes=((1,2),(0,3),4))

        
        # 0(+)     0->2(-)
        # T1--1 1--a--3(+)
        # |        2\...
        # |        2
        # C--------T2--3->1(-)
        C2x2_LDx = yast.tensordot(C2x2_LD, a, ([1, 2], [1, 2]))
        C2x2_LDx = C2x2_LDx.fuse_legs(axes=((0,2),(1,3)))

        upper_half = yast.tensordot(C2x2_LUx, C2x2_RUx, ([1], [0]))
        # 0             0->1   
        # |             |/2 
        # C2x2_LD--1 1--C2x2_RD
        lower_half = yast.tensordot(C2x2_LDx, C2x2_RDx, ([1], [1]))
        norm_2x2= yast.tensordot(upper_half, lower_half, ([0, 1], [0, 1]))
        norm_2x2= norm_2x2.unfuse_legs(axes=0)
        norm_2x2= norm_2x2.trace(axes=(0,1))
        norm_2x2= norm_2x2.to_number().real
        print(f"loss {norm_2x2}")

        return norm_2x2

    params= torch.rand(2, dtype=A.data.dtype, device=A.data.device)
    params.requires_grad_(True)
    op_args= (params,)
    test = torch.autograd.gradcheck(loss_fn, op_args, eps=1e-4, atol=1e-4)
    assert test

if __name__ == '__main__':
    test_bug_conj_transpose_backward_u1()
    test_bug_contraction_backward_u1_C4x4_closed()
    test_bug_contraction_backward_u1_C4x4_open()
    test_bug_conj_transpose_backward_u1xu1()